{"version":3,"file":"extension.js","mappings":";;;;;;AAAA,iBAAiB,mBAAO,CAAC,IAAkB;AAC3C,iBAAiB,mBAAO,CAAC,IAAgB;AACzC,iBAAiB,mBAAO,CAAC,IAAqB;AAC9C;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB,yBAAyB;;AAEzB;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;AC1Ea;;AAEb,WAAW,0BAA0B;AACrC;;;;;;;;;ACHA;;;;;;;ACAA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBa;;AAEb,WAAW,mBAAmB;AAC9B;;;;;;;;;ACHa;;AAEb;;AAEA,cAAc,mBAAO,CAAC,IAAiB;;AAEvC,aAAa,mBAAO,CAAC,IAAW;AAChC,iBAAiB,mBAAO,CAAC,IAAgB;AACzC,kBAAkB,mBAAO,CAAC,IAAiB;AAC3C,sBAAsB,mBAAO,CAAC,IAAe;AAC7C,mBAAmB,mBAAO,CAAC,IAAkB;AAC7C,iBAAiB,mBAAO,CAAC,IAAgB;AACzC,gBAAgB,mBAAO,CAAC,IAAe;;AAEvC,UAAU,mBAAO,CAAC,IAAqB;AACvC,YAAY,mBAAO,CAAC,IAAuB;AAC3C,UAAU,mBAAO,CAAC,IAAqB;AACvC,UAAU,mBAAO,CAAC,IAAqB;AACvC,UAAU,mBAAO,CAAC,IAAqB;AACvC,YAAY,mBAAO,CAAC,GAAuB;AAC3C,WAAW,mBAAO,CAAC,IAAsB;;AAEzC;;AAEA;AACA;AACA;AACA,kCAAkC,8CAA8C;AAChF,GAAG;AACH;;AAEA,YAAY,mBAAO,CAAC,IAAM;AAC1B,sBAAsB,mBAAO,CAAC,GAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;;AAEA,iBAAiB,mBAAO,CAAC,IAAa;;AAEtC,eAAe,mBAAO,CAAC,IAAW;AAClC,iBAAiB,mBAAO,CAAC,IAAiC;AAC1D,kBAAkB,mBAAO,CAAC,IAAkC;;AAE5D,aAAa,mBAAO,CAAC,IAAuC;AAC5D,YAAY,mBAAO,CAAC,EAAsC;;AAE1D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,GAAG;AACH,gDAAgD;AAChD,GAAG;AACH,sDAAsD;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,IAAe;AAClC,aAAa,mBAAO,CAAC,IAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzXa;;AAEb,QAAQ,kCAAkC,EAAE,mBAAO,CAAC,IAAa;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,kBAAkB;AACrE,iDAAiD,kBAAkB;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,sDAAsD,kBAAkB;AACxE,wDAAwD,kBAAkB;AAC1E,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,kBAAkB;AACzE,yDAAyD,kBAAkB;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,GAAG;AAChB;AACA,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,wDAAwD,kBAAkB;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,GAAG;AACd,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;ACnSa;;AAEb,WAAW,aAAa;AACxB;AACA;AACA;AACA,oBAAoB,SAAS,UAAU;AACvC,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;ACZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,IAAI;AACpC;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,MAAM;AACN;AACA;AACA;AACA,KAAK,6BAA6B;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;ACnSA,qBAAqB,mBAAO,CAAC,IAAiB;AAC9C,WAAW,mBAAO,CAAC,IAAM;AACzB,WAAW,mBAAO,CAAC,IAAM;AACzB,WAAW,mBAAO,CAAC,IAAM;AACzB,YAAY,mBAAO,CAAC,IAAO;AAC3B,eAAe,iCAAoB;AACnC,SAAS,mBAAO,CAAC,IAAI;AACrB,aAAa,kCAAwB;AACrC,WAAW,mBAAO,CAAC,IAAY;AAC/B,eAAe,mBAAO,CAAC,IAAU;AACjC,qBAAqB,mBAAO,CAAC,IAAoB;AACjD,eAAe,mBAAO,CAAC,IAAe;;AAEtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,SAAS;AACvD;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACtfA;;;;;;;;ACAA,sCAAsC,gCAAgC;;AAEzD;;AAEb,QAAQ,SAAS,EAAE,mBAAO,CAAC,IAAQ;AACnC,QAAQ,iBAAiB,EAAE,mBAAO,CAAC,IAAQ;;AAE3C,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,QAAQ,iCAAiC,EAAE,mBAAO,CAAC,IAAa;AAChE,QAAQ,4BAA4B,EAAE,mBAAO,CAAC,IAAc;AAC5D,QAAQ,4BAA4B,EAAE,mBAAO,CAAC,IAAe;;AAE7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzlBa;;AAEb,WAAW,2BAA2B;AACtC;;;;;;;;;ACHA,sCAAsC,kEAAkE;;AAE3F;;AAEb,qBAAqB,mBAAO,CAAC,IAAQ;AACrC,cAAc,mBAAO,CAAC,IAAO;AAC7B,aAAa,mBAAO,CAAC,IAAM;AAC3B,YAAY,mBAAO,CAAC,IAAK;AACzB,YAAY,mBAAO,CAAC,IAAK;AACzB,QAAQ,0BAA0B,EAAE,mBAAO,CAAC,IAAQ;AACpD,QAAQ,mBAAmB,EAAE,mBAAO,CAAC,IAAQ;AAC7C,QAAQ,MAAM,EAAE,mBAAO,CAAC,IAAK;;AAE7B,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,iBAAiB,mBAAO,CAAC,IAAY;AACrC,eAAe,mBAAO,CAAC,GAAU;AACjC,QAAQ,SAAS,EAAE,mBAAO,CAAC,IAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,IAAa;AACzB;AACA,iBAAiB;AACjB,EAAE,EAAE,mBAAO,CAAC,GAAgB;AAC5B,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,IAAa;AAC/C,QAAQ,WAAW,EAAE,mBAAO,CAAC,IAAe;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA,aAAa,UAAU;AACvB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kBAAkB;AAC3E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,kBAAkB;AAC7B;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uCAAuC,sBAAsB;AAC7D,gCAAgC,4BAA4B;AAC5D;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB,GAAG,mBAAmB;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR,oDAAoD,SAAS;AAC7D;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,4CAA4C;AACvD;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,GAAG;AACd,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,sBAAsB;AACjE,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AC32Ca;;AAEb,cAAc,mBAAO,CAAC,IAAiB;;AAEvC,WAAW,mCAAmC;AAC9C;;;;;;;;;ACLa;;AAEb,WAAW,kBAAkB;AAC7B;;;;;;;;;ACHa;;AAEb,WAAW,mBAAmB;AAC9B;AACA;AACA,2FAA2F;AAC3F,4CAA4C;;AAE5C,cAAc,2BAA2B;AACzC;AACA;AACA;AACA,gCAAgC;;AAEhC,kEAAkE;AAClE,qEAAqE;;AAErE;AACA,iCAAiC;AACjC;AACA,uCAAuC;;AAEvC,2DAA2D;AAC3D,+DAA+D;;AAE/D;AACA;AACA,sBAAsB,gBAAgB;AACtC,2EAA2E;;AAE3E,yGAAyG;;AAEzG;AACA,6CAA6C;;AAE7C,8DAA8D;;AAE9D;AACA;AACA,8BAA8B,oBAAoB;AAClD,uEAAuE;AACvE;;AAEA;AACA;;;;;;;;AC5CA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;ACTA;;;;;;;;ACAa;;AAEb,WAAW,iBAAiB;AAC5B;;;;;;;;;ACHA,sCAAsC,yDAAyD;;AAElF;;AAEb,qBAAqB,mBAAO,CAAC,IAAQ;AACrC,aAAa,mBAAO,CAAC,IAAM;AAC3B,QAAQ,SAAS,EAAE,mBAAO,CAAC,IAAQ;AACnC,QAAQ,aAAa,EAAE,mBAAO,CAAC,IAAQ;;AAEvC,kBAAkB,mBAAO,CAAC,IAAa;AACvC,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,oBAAoB,mBAAO,CAAC,IAAe;AAC3C,kBAAkB,mBAAO,CAAC,IAAa;AACvC,QAAQ,mBAAmB,EAAE,mBAAO,CAAC,IAAa;;AAElD,iCAAiC,GAAG;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B;AACA,aAAa,QAAQ;AACrB,aAAa,4BAA4B;AACzC;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,gDAAgD,MAAM;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,2BAA2B;AACtC,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,MAAM,EAAE,wBAAwB;AAChD;AACA,uBAAuB,EAAE,IAAI,WAAW;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;AC3hBA;AACA;AACA,kBAAkB,mBAAO,CAAC,IAAe;AACzC,kBAAkB,mBAAO,CAAC,IAAa;AACvC,kBAAkB,mBAAO,CAAC,EAAoB;AAC9C;;;;;;;;;ACLA;;;;;;;;ACAA;;;;;;;ACAA,oBAAoB,mBAAO,CAAC,EAAoB;;AAEhD;AACA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;;;;;;;ACAA,YAAY,mBAAO,CAAC,GAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;;;;;;;;ACAa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBa;;AAEb,aAAa,mBAAO,CAAC,IAAM;;AAE3B,mBAAmB,mBAAO,CAAC,IAAe;AAC1C,gBAAgB,mBAAO,CAAC,IAAW;AACnC,QAAQ,cAAc,EAAE,mBAAO,CAAC,IAAa;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,kBAAkB;AAC/B;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,IAAI;AAC5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,IAAI,KAAK,MAAM;AAC/D;AACA;AACA;AACA,YAAY;AACZ;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA,UAAU;AACV,gDAAgD,IAAI;AACpD;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,SAAS;AACzC;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC/gBa;;AAEb,aAAa,mBAAO,CAAC,IAAS;;AAE9B,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;;;;;;;;ACAa;;AAEb,WAAW,mBAAO,CAAC,IAAe;AAClC,iBAAiB,mBAAO,CAAC,IAAgB;;AAEzC,YAAY,mBAAO,CAAC,EAAgB;AACpC,mBAAmB,mBAAO,CAAC,IAAe;;AAE1C,WAAW,uEAAuE;AAClF;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACda;;AAEb,WAAW,mBAAO,CAAC,IAAe;;AAElC,aAAa,mBAAO,CAAC,IAAiB;AACtC,YAAY,mBAAO,CAAC,EAAgB;AACpC,oBAAoB,mBAAO,CAAC,IAAgB;;AAE5C,WAAW,yBAAyB;AACpC;;;;;;;;ACTA,UAAU,mBAAO,CAAC,IAAK;AACvB;AACA,WAAW,mBAAO,CAAC,IAAM;AACzB,YAAY,mBAAO,CAAC,IAAO;AAC3B,eAAe,oCAA0B;AACzC,aAAa,mBAAO,CAAC,IAAQ;AAC7B,YAAY,mBAAO,CAAC,IAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sEAAsE;AACvF,aAAa,kEAAkE;AAC/E,KAAK;AACL,GAAG;AACH;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,0BAA0B;AAClD,mBAAmB;;;;;;;;AC7qBnB,WAAW,mBAAO,CAAC,IAAM;AACzB,aAAa,kCAAwB;AACrC,oBAAoB,mBAAO,CAAC,IAAgB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;AC/Ma;;AAEb,QAAQ,eAAe,EAAE,mBAAO,CAAC,IAAa;;AAE9C;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,IAAY;;AAE3C,IAAI,mBAAmB;AACvB;AACA;AACA;;AAEA,IAAI,qBAAqB;AACzB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;AClIa;;AAEb,WAAW,iBAAiB;AAC5B;;;;;;;;;ACHa;;AAEb,sBAAsB,mBAAO,CAAC,IAA0B;AACxD,uBAAuB,mBAAO,CAAC,IAAyB;;AAExD,qBAAqB,mBAAO,CAAC,IAAkB;;AAE/C,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA,sCAAsC,oCAAoC;AAC7D;;AAEb,kBAAkB,mBAAO,CAAC,IAAa;AACvC,QAAQ,SAAS,EAAE,mBAAO,CAAC,IAAQ;;AAEnC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChKa;;AAEb;AACA,oBAAoB,mBAAO,CAAC,IAAS;;AAErC,WAAW,aAAa;AACxB;AACA,yCAAyC;AACzC,qCAAqC;AACrC,8CAA8C;AAC9C,0CAA0C;;AAE1C;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;;;;;;;;ACAa;;AAEb,WAAW,mBAAmB;AAC9B;AACA;AACA;;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;;;;;;;;ACAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtDa;;AAEb,WAAW,iBAAiB;AAC5B;;;;;;;;;ACHA;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA,CAAC,0CAAwC;AACzC,EAAE;AACF,CAAC,0CAAqC;AACtC;;;;;;;;;ACTa;;AAEb,WAAW,aAAa;AACxB,YAAY,mBAAO,CAAC,IAAQ;;AAE5B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;ACda;;AAEb,QAAQ,SAAS,EAAE,mBAAO,CAAC,GAAQ;;AAEnC,QAAQ,UAAU,EAAE,mBAAO,CAAC,IAAa;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,0BAA0B;AAC5B;AACA;AACA,EAAE;AACF;AACA,wBAAwB,mBAAO,CAAC,IAAgB;;AAEhD,IAAI,0BAA0B;AAC9B;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;ACvJa;;AAEb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPa;;AAEb,QAAQ,aAAa,EAAE,mBAAO,CAAC,IAAc;;AAE7C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAmB;AAC5B;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ,4BAA4B;AACpC;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,QAAQ;AACR,+DAA+D,EAAE;AACjE;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,+DAA+D,EAAE;AACjE;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV,iEAAiE,EAAE;AACnE;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,+DAA+D,EAAE;AACjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE,GAAG,EAAE;AAC1D,2BAA2B;AAC3B,eAAe;AACf;AACA,qBAAqB;AACrB,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB;;;;;;;;AC1MnB;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,IAAK;AACzB,aAAa,mBAAO,CAAC,IAAM;;AAE3B;AACA;AACA;;AAEA,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,IAAgB;;AAE/C;AACA,EAAE,cAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,4BAA4B;;AAEpC;AACA;AACA,iDAAiD,EAAE;AACnD,sBAAsB,WAAW,IAAI,MAAM;;AAE3C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,GAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACtQA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,IAAS;AAC1B,cAAc,mCAAuB;;AAErC;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;AACf,gBAAgB,KAAK;AACrB,mBAAmB;AACnB,iBAAiB;AACjB,kBAAkB;AAClB,cAAc;AACd,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;AC3La;;AAEb,WAAW,iBAAiB;AAC5B;;;;;;;;ACHA,YAAY,mBAAO,CAAC,IAAY;AAChC,YAAY,mBAAO,CAAC,IAAY;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC5Ba;;AAEb,QAAQ,WAAW,EAAE,mBAAO,CAAC,IAAQ;;AAErC,0BAA0B,mBAAO,CAAC,IAAsB;AACxD;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,IAAa;AACzB,QAAQ,gCAAgC,EAAE,mBAAO,CAAC,IAAe;AACjE,QAAQ,iCAAiC,EAAE,mBAAO,CAAC,IAAc;;AAEjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,QAAQ;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACjsBa;;AAEb,eAAe,iCAAoB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;;;;;;;;AC3GT;;AAEb,WAAW,kBAAkB;AAC7B;;;;;;;;ACHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACjKa;;AAEb,qBAAqB,mBAAO,CAAC,IAAkB;;AAE/C;;;;;;;;;ACJA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAa;;AAEb,WAAW,0BAA0B;AACrC;;;;;;;;;ACHa;;AAEb,eAAe,mBAAO,CAAC,IAAyB;AAChD,WAAW,mBAAO,CAAC,IAAM;;AAEzB;AACA;AACA;AACA,iCAAiC,sCAAsC;AACvE,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,+BAA+B;;AAE1G;AACA;;AAEA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;;;;;;;;AC7BA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,IAAO;AAC7B;AACA,oBAAoB;AACpB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAAqC;;;;;;;;;ACXxB;AACb,WAAW,mBAAO,CAAC,GAAI;AACvB,YAAY,mBAAO,CAAC,IAAK;AACzB,gBAAgB,mBAAO,CAAC,IAAU;;AAElC,OAAO,KAAK;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACtIA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc;AACdvD;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,GAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;AC/Qa;;AAEb,WAAW,iBAAiB;AAC5B;;;;;;;;ACHA,YAAY,mBAAO,CAAC,IAAY;AAChC,YAAY,mBAAO,CAAC,IAAY;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;AC1Ea;;AAEb,WAAW,oBAAoB;AAC/B;;;;;;;;ACHA,aAAa,kCAAwB;AACrC,WAAW,mBAAO,CAAC,IAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AC1Ga;;AAEb,QAAQ,aAAa,EAAE,mBAAO,CAAC,IAAc;;AAE7C;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,mBAAmB;AAC7B;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,+DAA+D,EAAE;AACjE;;AAEA;;AAEA;;AAEA;AACA,sCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA,MAAM;AACN,6DAA6D,EAAE;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;;AAEA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;;AC7DnB;;;;;;;;ACAa;;AAEb,WAAW,oCAAoC;AAC/C;;;;;;;;ACHA,iBAAiB,mBAAO,CAAC,IAAkB;AAC3C,iBAAiB,mBAAO,CAAC,IAAgB;AACzC,iBAAiB,mBAAO,CAAC,IAAqB;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;;;;;;;;AC1Ca;;AAEb,WAAW,mBAAmB;AAC9B;;;;;;;;;ACHA;;;;;;;;ACAa;;AAEb,iBAAiB,mBAAO,CAAC,IAAmB;;AAE5C,WAAW,aAAa;AACxB;AACA;AACA;;;;;;;;;ACPA;;;;;;;;ACAa;;AAEb,WAAW,mBAAmB;AAC9B;;;;;;;;;ACHa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA,iFAAiF,sCAAsC;;AAEvH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACnFa;;AAEb,WAAW,aAAa;AACxB;;;;;;;;ACHA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,eAAe;AAC5B;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;ACpCa;;AAEb,WAAW,iBAAiB;AAC5B;;;;;;;;;ACHa;;AAEb,mBAAmB,mBAAO,CAAC,GAAe;;AAE1C;;AAEA,qBAAqB,mBAAO,CAAC,IAAuB;AACpD,aAAa,mBAAO,CAAC,IAAQ;AAC7B,iBAAiB,mBAAO,CAAC,IAAgB;;AAEzC;;AAEA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ,gCAAgC;AAChC;AACA;AACA;;;;;;;;;AClCa;;AAEb,WAAW,aAAa;AACxB;;;;;;;;;ACHa;;AAEb,WAAW,kBAAkB;AAC7B;;;;;;;;;ACHA;;;;;;;;ACAa;;AAEb;AACA;AACA,WAAW,mBAAO,CAAC,IAAe;;AAElC,WAAW,aAAa;AACxB;;;;;;;UCPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,gBAAgB,qBAAqB;WACrC;;WAEA;;WAEA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA,IAAI;WACJ;WACA;;WAEA;;WAEA;;WAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCa;;AAEE;AACf;AACA;AACA;AACA;;;ACNa;;AAEwB;;AAErC;;AAEA,OAAO,QAAQ,kBAAE;AACjB,OAAO,gBAAgB;AACvB,OAAO,uBAAuB;;AAE9B;AACA,gBAAgB,cAAQ;AACxB;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA,OAAO,SAAS;;AAEhB;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA,2BAA2B,oBAAoB,IAAI;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C,4BAA4B;AAC5B;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kCAAkC;AAClC,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA,gCAAgC,WAAW,IAAI;AAC/C;AACA;AACA,eAAe,IAAI;AACnB,MAAM;AACN;AACA;AACA,GAAG,GAAG,WAAW;AACjB;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,oBAAc,MAAM,eAAe;;AAEzC;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG,WAAW,cAAc;AAC5B,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;;AAGA,4CAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,cAAc,oBAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;ACvuBW;;AAEmB;;AAEhC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA,CAAC;;AAED,MAAM,oBAAS;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,CAAC;;AAED;AACA,sBAAsB,oBAAS,mBAAmB,YAAY;;AAE9D;AACA;AACA,mCAAmC,oBAAS;;AAE5C,EAAE,KAAK;AACP;AACA,GAAG;AACH;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,sDAAe,UAAU,EAAC;;;;;ACtGO;;AAEjC,uDAAe,SAAQ,EAAC;;;ACFX;;AAEmB;AACe;AAC/C;AACoE;;AAEpE;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA,SAAS,KAAK,yBAAyB,KAAK;AAC5C;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,KAAK;AACd;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa;AACb;AACA;AACA,SAAS,KAAK;AACd;;AAEA,mBAAmB,KAAK,cAAc,KAAK,IAAI;AAC/C;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA,OAAO,KAAK;AACZ;AACA;;AAEA;AACA,8BAA8B,gBAAgB;;AAE9C;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA,GAAG;AACH;AACA,YAAY,KAAK;AACjB,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK;;AAEhC,OAAO,KAAK;AACZ;AACA;;AAEA;AACA;;AAEA,QAAQ,KAAK;AACb;AACA;;AAEA,oBAAoB,KAAK;AACzB,gBAAgB,eAAU;AAC1B;;AAEA,QAAQ,KAAK,yBAAyB,KAAK;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,eAAe;AAC5B,aAAa,sBAAsB;AACnC,YAAY;AACZ;AACA,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA,UAAU,KAAK,kBAAkB;AACjC;AACA;AACA;AACA;AACA,QAAQ;AACR,SAAS,KAAK;AACd,UAAU,KAAK,sBAAsB,KAAK,gCAAgC,KAAK;AAC/E;AACA;AACA;;AAEA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,QAAQ,KAAK;;AAEb;AACA;AACA;;AAEA;;AAEA,IAAI,KAAK;AACT,uBAAuB,KAAK;AAC5B,sBAAsB,KAAK;AAC3B;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,OAAO,KAAK;AACZ;AACA;;AAEA;;AAEA;AACA;;AAEA,yDAAe,UAAU,EAAC;;;AC1Nb;;AAE4B;;AAEzC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;;AAEA,YAAY,kBAAU;AACtB;;AAEA,MAAM,8BAAS;;AAEf,8BAAS;AACT;AACA;;AAEA,8BAAS;AACT;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;;AAEA,mEAAe,oBAAoB,EAAC;;;ACzDvB;;AAEmB;AACsC;;AAEtE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA,SAAS,eAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B;AACA,aAAa,QAAQ;AACrB;AACe;AACf;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAM;;AAErD,MAAM,KAAK;AACX;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ,uBAAuB,KAAK;AAC5B;AACA,UAAU,4BAAoB;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACpEa;;AAEqB;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA,eAAe;AACf;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,8DAAe,kBAAkB,EAAC;;;ACtErB;;AAEb,4DAAe;AACf;AACA;AACA;AACA,CAAC,EAAC;;;;;;;ACNW;;AAES;AACtB,sDAAe,6BAAmB,EAAC;;;ACHP;AAC8B;AACd;;AAE5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,QAAQ;AACjB;AACA,EAAE,+BAAqB;AACvB,kBAAkB,UAAU;AAC5B;AACA;;AAEA;AACA;;;AAGA,2CAAe;AACf;AACA;AACA,mBAAmB;AACnB,YAAY;AACZ;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC,EAAC;;;ACrCF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAQC;;;AClDsC;AACI;;AAE3C,+CAAe;AACf,KAAK,4BAAK;AACV,KAAK,IAAQ;AACb,CAAC;;;ACNY;;AAEmB;AACS;AACG;;AAE7B;AACf,SAAS,kBAAU,WAAW,QAAQ;AACtC;AACA,UAAU,QAAQ,WAAW,KAAK;AAClC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;ACjBa;;AAEmB;;AAEhC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,KAAK;;AAEzB;AACA,UAAU,KAAK;AACf;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA,0BAA0B,KAAK;AAC/B;AACA;;AAEA;;AAEA,kBAAkB,KAAK;AACvB;AACA;;AAEA;AACA;;AAEA,MAAM,KAAK,yBAAyB,KAAK;AACzC;;AAEA,IAAI,KAAK;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA,6DAAe,cAAc,EAAC;;;AC9FjB;;AAEmB;AACe;AACM;AACH;AACY;AAClB;AACc;;A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AACA;AACA;;AAEA;;AAEA,SAAS,yBAAQ;AACjB;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,+DAAe,gBAAgB,EAAC;;;AC/GnB;;AAEe;;AAE5B,wCAAwC,0BAAgB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wEAAe,yBAAyB,EAAC;;;AC3BT;;AAEhC;AACA,SAAS,KAAK;AACd;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA,0DAAe,WAAW,EAAC;;;ACfd;;AAEb;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,0DAAe,WAAW,EAAC;;;ACtD3B;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uDAAe,QAAQ,EAAC;;;AC3CmB;AACN;AACL;;AAEzB;AACP;AACA,uBAAuB,mBAAW;;AAElC,SAAS,gBAAQ;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO,4CAA4C,KAAK;;;AC3C3C;;AAEqB;AACO;AACY;AACL;AACN;AAClB;AACE;AACF;AACuB;AACvB;AACe;AACwB;AAChB;AACQ;AACX;AACQ;AACxB;AACuB;AACmB;AAClC;AAC0B;AAChB;AACkC;AAC5B;AAC4D;;AAEhH;AACA,SAAS,wBAAc;AACvB,eAAe,wBAAc;AAC7B;;AAEA;AACA,SAAS,wBAAc;AACvB,eAAe,wBAAc;AAC7B;;AAEA,0BAA0B,KAAK,YAAY,qCAA2B;;AAEtE,OAAO,sCAAsC,EAAE,gBAAe;;AAE9D;;AAEA,2BAA2B,QAAQ;AACnC;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,6BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,eAAe;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAiE,KAAK;;AAEtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,wBAAwB,gBAAgB;AACxC,OAAO,KAAK;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,6DAA6D,KAAK,gCAAgC,gBAAgB;;AAElH;AACA,2CAAe;AACf;AACA,SAAS,sBAAsB;AAC/B,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,mBAAW,oBAAoB,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,KAAK;;AAEjC;AACA,SAAS;AACT;AACA;;AAEA;AACA,wBAAwB,6BAAY;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,yDAAyD,oBAAa;AACtE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,aAAa;AAClC,qCAAqC,QAAQ,iBAAiB,QAAQ;AACtE;;AAEA;AACA;;AAEA;AACA,eAAe,MAAM;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,SAAS;AACT;;AAEA;AACA,wBAAwB,WAAW;AACnC;AACA,SAAS;AACT,QAAQ;AACR,cAAc,eAAU,WAAW,eAAU;AAC7C;;AAEA;AACA;;AAEA;AACA,0BAA0B,KAAK;AAC/B;AACA,QAAQ;AACR,wBAAwB,yBAAe;AACvC;;AAEA,aAAa,MAAM;AACnB;AACA;AACA;AACA,qBAAqB,iBAAY;AACjC;AACA,OAAO;AACP;;AAEA;AACA,wBAAwB,eAAU;AAClC;AACA,QAAQ,eAAU;AAClB;AACA;AACA;;AAEA,oBAAoB,iBAAY;;AAEhC;AACA;AACA,gCAAgC;AAChC;AACA,yCAAyC,OAAO;;AAEhD,WAAW,sCAAsC;AACjD;AACA;AACA;;AAEA;AACA,QAAQ,KAAK;AACb,sEAAsE,MAAM;;AAE5E,aAAa,wBAAgB;AAC7B;AACA,OAAO;AACP,sBAAsB,OAAO,CAAC;AAC9B;AACA,OAAO;AACP;AACA,MAAM,SAAS,KAAK,qBAAqB,KAAK;AAC9C;;AAEA;AACA;AACA,oCAAoC,wBAAc;AAClD;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM,SAAS,KAAK,iBAAiB,KAAK;AAC1C;AACA;AACA,aAAa,yBAAe,MAAM,gBAAQ;AAC1C,MAAM,kBAAkB,KAAK;AAC7B;AACA;AACA,QAAQ,SAAS,KAAK;AACtB;AACA,QAAQ,SAAS,KAAK;AACtB;AACA,QAAQ;AACR,0BAA0B,eAAU;AACpC;AACA,UAAU,eAAU;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,eAAU;AACpC;AACA,UAAU,eAAU;AACpB;AACA;AACA;AACA;;AAEA,0BAA0B,KAAK;;AAE/B,QAAQ,KAAK;AACb;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,eAAe,yBAAe,aAAa,kBAAkB;AAC7D;;AAEA,aAAa,yBAAe,YAAY,4BAAoB;AAC5D,iBAAiB,KAAK;AACtB,OAAO,IAAI,KAAK;;AAEhB;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA,UAAU,oBAAoB,CAAC,cAAc;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kDAAkD;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,KAAK;;AAEV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,mCAAmC,eAAK,GAAG,cAAI;AAC/C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,oCAAoC,4BAAoB;AACxD,mBAAmB,KAAK;AACxB,SAAS;;AAET;AACA;AACA,UAAU,sBAAsB;AAChC;AACA,YAAY,oBAAoB,CAAC,cAAc;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAAgB;;AAEvC;AACA;AACA;AACA;AACA,2BAA2B,iCAAyB;;AAEpD;AACA,uBAAuB,0BAAgB;;AAEvC;AACA;AACA;AACA;AACA;AACA,yBAAyB,qCAA2B;AACpD;AACA;AACA;AACA;;AAEA,4CAA4C,yBAAe,UAAU,KAAK;;AAE1E,2BAA2B,yBAAe;AAC1C;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,qBAAqB,iBAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA,QAAQ,MAAM;AACd,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAU;AACjC,cAAc,eAAU;AACxB;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA,0BAA0B,eAAU;AACpC;AACA,YAAY,eAAU;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,iBAAiB,eAAU;AAC3B,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA,YAAY;AACZ,0BAA0B,eAAU;AACpC;AACA,UAAU,MAAM;AAChB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,aAAa,eAAU;AACvB,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,eAAU;AAC7B;AACA,UAAU,eAAU;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qBAAoB;AACxE;AACA;AACA;AACA,mBAAmB,eAAU;AAC7B;AACA,6CAA6C,eAAU,aAAa,eAAU;AAC9E;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA,QAAQ,KAAK;AACb;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,oBAAoB,oBAAa;AACjC;AACA,OAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH,CAAC;;AAEM,mBAAmB,wDAAQ;;;ACtrBU;;AAE5C,sDAAe,QAAQ;AACvB,qBAAqB,QAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,UAAU,QAAQ;AAClB,EAAE,QAAQ,qCAAqC,QAAQ;AACvD,cAAc,EAAC;;;ACbmB;AACU;;AAE5C,8CAAe,QAAQ;;AAEvB;AACA;AACA;AACA;;AAEA,MAAM,KAAK;;AAEX,MAAM,KAAK;;AAEX,MAAM,KAAK;;AAEX;;AAEA,uCAAuC;AACvC,KAAK;;AAEL;AACA,0DAA0D,wBAAwB;AAClF;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,KAAK;AACL;AACA,GAAG,EAAC;;;;ACxCS;;AAEmB;AACa;;AAE7C,oDAAoD,iBAAY,KAAK,WAAW;;AAEhF;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACe;AACf;AACA;AACA;;AAEA;AACA,QAAQ,KAAK,0BAA0B,KAAK;AAC5C,aAAa,KAAK,aAAa,SAAS;AACxC,MAAM,SAAS,KAAK;AACpB,aAAa,KAAK,SAAS;AAC3B,MAAM,SAAS,KAAK;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,KAAK;AACd;AACA,MAAM,UAAU,KAAK;AACrB;AACA;AACA;;AAEA;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA;;AAEA;AACA;AACA,SAAS,KAAK;AACd;AACA,MAAM,UAAU,KAAK;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,KAAK,qCAAqC;AAC5C;AACA;AACA,KAAK,KAAK;AACV,GAAG;;AAEH;AACA;;;ACzG4C;AACZ;AACmB;AAChB;AACkB;AACJ;AACE;AACd;;AAErC,oDAAe;AACf,oBAAoB,WAAW,GAAG;;AAElC,OAAO,oEAAoE;;AAE3E,gCAAgC,iBAAY;;AAE5C,kBAAkB,QAAQ,CAAC,aAAa;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,KAAK;AACX,QAAQ,QAAQ,0BAA0B,QAAQ;AAClD,yCAAyC;AACzC,MAAM;AACN;AACA,kEAAkE;AAClE,gFAAgF;AAChF;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,QAAQ;AACd,qBAAqB,KAAK;;AAE1B,qDAAqD,eAAe;AACpE;AACA,4DAA4D,OAAO;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;ACvDiC;AACO;AACsB;AAChB;AACQ;AACC;AACZ;AACO;AACqB;AAChB;;AAExD;;AAEA,0CAAe;AACf;AACA,oBAAoB,aAAa;AACjC;AACA,2BAA2B,iBAAY;AACvC,SAAS,oDAAoD;AAC7D;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,wCAAwC;;AAExC;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,MAAM;AACZ;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,eAAU,oBAAoB,eAAU;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAU,kBAAkB,eAAU;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,qBAAoB;AACvE;AACA;AACA;AACA,iBAAiB,eAAU;AAC3B;AACA,2CAA2C,eAAU,aAAa,eAAU;AAC5E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,KAAK;AACX;AACA,OAAO;AACP;;AAEA;AACA,SAAS,KAAK;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,oBAAoB;AAChE;AACA;;AAEA;AACA;AACA,wCAAwC,oBAAoB;;AAE5D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAa;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;;AAElC,oBAAoB,QAAQ;AAC5B,iBAAiB,eAAU,2CAA2C,eAAU;AAChF;AACA;;;AAGA;AACA;AACA,GAAG;AACH,CAAC;;;ACpMsD;AACR;AACf;;AAEhC;AACA,SAAS,QAAQ;;AAEjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAU,aAAa,oBAAa;AAC5E;AACA;;AAEA;AACA;AACA,kBAAkB,eAAU,YAAY,SAAS,iBAAiB,eAAU;AAC5E,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,WAAW,QAAQ;;AAEnB,+BAA+B,KAAK;;AAEpC;AACA;AACA;;AAEA,6DAAe,cAAc,EAAC;;;;AC9CvB;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;;ACtF4C;AACZ;AACe;AACW;AACJ;AACH;AAC6D;AACxD;AACjB;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH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,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;AACA,gBAAgB,eAAU;AAC1B;AACA,QAAQ,eAAU;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK,6BAA6B,gBAAgB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,eAAU,8BAA8B,eAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAU,yCAAyC,eAAU;AAC/E;AACA;AACA;AACA;AACA,gBAAgB,eAAU,0BAA0B,eAAU;AAC9D;AACA;AACA;;AAEA,gDAAe;AACf;AACA;AACA,CAAC,EAAC;;;AClGW;;AAEqB;AACY;AACW;AACN;AACR;AACI;AACC;AACH;;AAE7C,MAAM,gBAAU,GAAG,SAAS;;AAE5B;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAkB;AACrC,oBAAoB,uBAAkB;AACtC;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,SAAS;AACtB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA,aAAa,WAAW;;AAExB,WAAW,yCAAyC;;AAEpD;AACA,MAAM,SAAS;AACf,2BAA2B,gBAAU,cAAc,gBAAU;AAC7D,2BAA2B,gBAAU,cAAc,gBAAU;AAC7D,6BAA6B,gBAAU,cAAc,gBAAU;AAC/D,OAAO;AACP;;AAEA;AACA,UAAU,KAAK;AACf;AACA;AACA;AACA,QAAQ;AACR,QAAQ,SAAS;AACjB,kBAAkB,gBAAU;AAC5B,qBAAqB,gBAAU;AAC/B,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA,IAAI,SAAS;AACb,eAAe,gBAAU;AACzB,qBAAqB,gBAAU;AAC/B,KAAK;;AAEL;AACA;;AAEA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;;AAEA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,eAAe;AAC/B,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,WAAW;AACxB,qBAAqB,aAAa;AAClC,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,WAAW,aAAa;AAChD;AACA;AACA,yBAAyB;AACzB,KAAK;AACL;AACA,CAAC;;AAED,KAAK;AACL;;AAEA;AACA;AACA,0BAA0B,WAAW,aAAa;AAClD;AACA;AACA;AACA,UAAU,IAAI;AACd;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED,iDAAe,KAAK,EAAC;;;ACjPR;;AAEkC;;AAE/C;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,oBAAa;AACtC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAe,WAAW,EAAC;;;ACtId;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;;;AC3Ba;;AAEqB;;AAElC;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACe;AACf,SAAS,KAAK;AACd;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,6DAAe,cAAc,EAAC;;;ACtEjB;;AAEkB;AACM;AACD;AACY;AACL;AACc;AACH;AACJ;AACN;AACN;AACW;AACH;AACL;AACY;AACH;AACJ;AACW;;AAEz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","sources":[".././node_modules/asynckit/serialOrdered.js",".././node_modules/call-bind-apply-helpers/functionCall.js","../external node-commonjs \"buffer\"",".././node_modules/asynckit/lib/defer.js",".././node_modules/math-intrinsics/round.js",".././node_modules/get-intrinsic/index.js",".././node_modules/ws/lib/event-target.js",".././node_modules/es-define-property/index.js",".././node_modules/debug/src/common.js",".././node_modules/form-data/lib/form_data.js","../external node-commonjs \"os\"",".././node_modules/ws/lib/sender.js",".././node_modules/call-bind-apply-helpers/functionApply.js",".././node_modules/ws/lib/websocket.js",".././node_modules/get-proto/Object.getPrototypeOf.js",".././node_modules/es-errors/eval.js",".././node_modules/has-symbols/shams.js",".././node_modules/form-data/lib/populate.js","../external commonjs \"vscode\"",".././node_modules/math-intrinsics/abs.js",".././node_modules/ws/lib/websocket-server.js",".././node_modules/asynckit/index.js","../external commonjs \"bufferutil\"","../external node-commonjs \"tty\"",".././node_modules/asynckit/serial.js","../external node-commonjs \"stream\"",".././node_modules/asynckit/lib/async.js",".././src/plugins/core/ sync","../external node-commonjs \"assert\"",".././node_modules/ws/lib/constants.js",".././node_modules/ws/lib/permessage-deflate.js",".././node_modules/math-intrinsics/sign.js","../external node-commonjs \"zlib\"",".././node_modules/call-bind-apply-helpers/index.js",".././node_modules/call-bind-apply-helpers/actualApply.js",".././node_modules/follow-redirects/index.js",".././node_modules/combined-stream/lib/combined_stream.js",".././node_modules/ws/lib/buffer-util.js",".././node_modules/math-intrinsics/pow.js",".././node_modules/get-proto/index.js",".././node_modules/ws/lib/stream.js",".././node_modules/has-symbols/index.js",".././src/ui/ sync","../external node-commonjs \"events\"",".././node_modules/math-intrinsics/isNaN.js",".././node_modules/asynckit/lib/abort.js","../external node-commonjs \"tls\"",".././node_modules/ws/lib/limiter.js",".././node_modules/es-errors/uri.js","../external node-commonjs \"https\"",".././node_modules/debug/src/index.js",".././node_modules/gopd/index.js",".././node_modules/ws/lib/validation.js",".././node_modules/has-flag/index.js",".././node_modules/ws/lib/extension.js",".././node_modules/debug/src/node.js",".././node_modules/mime-types/index.js",".././node_modules/math-intrinsics/max.js",".././node_modules/asynckit/lib/terminator.js",".././node_modules/ws/lib/receiver.js",".././node_modules/proxy-from-env/index.js",".././node_modules/gopd/gOPD.js",".././node_modules/ms/index.js",".././node_modules/function-bind/index.js","../external commonjs \"utf-8-validate\"","../external node-commonjs \"path\"","../external node-commonjs \"crypto\"","../external node-commonjs \"url\"",".././node_modules/call-bind-apply-helpers/reflectApply.js",".././node_modules/dunder-proto/get.js",".././node_modules/follow-redirects/debug.js",".././node_modules/mime-db/index.js",".././node_modules/supports-color/index.js",".././node_modules/debug/src/browser.js",".././node_modules/math-intrinsics/min.js",".././node_modules/asynckit/lib/iterate.js",".././node_modules/es-errors/syntax.js",".././node_modules/delayed-stream/lib/delayed_stream.js",".././node_modules/ws/lib/subprotocol.js","../external node-commonjs \"http\"",".././node_modules/get-proto/Reflect.getPrototypeOf.js",".././node_modules/asynckit/parallel.js",".././node_modules/math-intrinsics/floor.js","../external node-commonjs \"util\"",".././node_modules/has-tostringtag/shams.js","../external node-commonjs \"net\"",".././node_modules/es-errors/range.js",".././node_modules/function-bind/implementation.js",".././node_modules/es-errors/index.js",".././node_modules/asynckit/lib/state.js",".././node_modules/es-errors/ref.js",".././node_modules/es-set-tostringtag/index.js",".././node_modules/es-object-atoms/index.js",".././node_modules/es-errors/type.js","../external node-commonjs \"fs\"",".././node_modules/hasown/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/require chunk loading",".././node_modules/axios/lib/helpers/bind.js",".././node_modules/axios/lib/utils.js",".././node_modules/axios/lib/core/AxiosError.js",".././node_modules/axios/lib/platform/node/classes/FormData.js",".././node_modules/axios/lib/helpers/toFormData.js",".././node_modules/axios/lib/helpers/AxiosURLSearchParams.js",".././node_modules/axios/lib/helpers/buildURL.js",".././node_modules/axios/lib/core/InterceptorManager.js",".././node_modules/axios/lib/defaults/transitional.js",".././node_modules/axios/lib/platform/node/classes/URLSearchParams.js",".././node_modules/axios/lib/platform/node/index.js",".././node_modules/axios/lib/platform/common/utils.js",".././node_modules/axios/lib/platform/index.js",".././node_modules/axios/lib/helpers/toURLEncodedForm.js",".././node_modules/axios/lib/helpers/formDataToJSON.js",".././node_modules/axios/lib/defaults/index.js",".././node_modules/axios/lib/helpers/parseHeaders.js",".././node_modules/axios/lib/core/AxiosHeaders.js",".././node_modules/axios/lib/core/transformData.js",".././node_modules/axios/lib/cancel/isCancel.js",".././node_modules/axios/lib/cancel/CanceledError.js",".././node_modules/axios/lib/core/settle.js",".././node_modules/axios/lib/helpers/isAbsoluteURL.js",".././node_modules/axios/lib/helpers/combineURLs.js",".././node_modules/axios/lib/core/buildFullPath.js",".././node_modules/axios/lib/env/data.js",".././node_modules/axios/lib/helpers/parseProtocol.js",".././node_modules/axios/lib/helpers/fromDataURI.js",".././node_modules/axios/lib/helpers/AxiosTransformStream.js",".././node_modules/axios/lib/helpers/readBlob.js",".././node_modules/axios/lib/helpers/formDataToStream.js",".././node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js",".././node_modules/axios/lib/helpers/callbackify.js",".././node_modules/axios/lib/helpers/speedometer.js",".././node_modules/axios/lib/helpers/throttle.js",".././node_modules/axios/lib/helpers/progressEventReducer.js",".././node_modules/axios/lib/adapters/http.js",".././node_modules/axios/lib/helpers/isURLSameOrigin.js",".././node_modules/axios/lib/helpers/cookies.js",".././node_modules/axios/lib/core/mergeConfig.js",".././node_modules/axios/lib/helpers/resolveConfig.js",".././node_modules/axios/lib/adapters/xhr.js",".././node_modules/axios/lib/helpers/composeSignals.js",".././node_modules/axios/lib/helpers/trackStream.js",".././node_modules/axios/lib/adapters/fetch.js",".././node_modules/axios/lib/adapters/adapters.js",".././node_modules/axios/lib/core/dispatchRequest.js",".././node_modules/axios/lib/helpers/validator.js",".././node_modules/axios/lib/core/Axios.js",".././node_modules/axios/lib/cancel/CancelToken.js",".././node_modules/axios/lib/helpers/spread.js",".././node_modules/axios/lib/helpers/isAxiosError.js",".././node_modules/axios/lib/helpers/HttpStatusCode.js",".././node_modules/axios/lib/axios.js",".././node_modules/ws/wrapper.mjs",".././src/types/chat.ts",".././src/core/services/serviceConfig.ts",".././src/core/services/serviceError.ts",".././src/core/services/vaultService.ts",".././src/core/llm/vaultIntegration.ts",".././src/core/llm/rulesIntegration.ts",".././src/core/llm/llmService.ts","../external node-commonjs \"fs/promises\"",".././src/core/memory/memoryService.ts","../external node-commonjs \"child_process\"",".././src/core/git/conflictSolver.ts",".././src/core/git/commands.ts",".././src/core/commands/vaultCommands.ts",".././src/core/commands/rulesCommands.ts",".././src/core/services/serviceResult.ts",".././src/core/services/jiraService.ts",".././src/core/commands/jiraCommands.ts",".././src/types/todo.ts",".././src/core/commands/todoCommands.ts",".././src/core/commands/defaultCommands.ts",".././src/data/helpSystemPrompt.ts",".././src/core/commands/helpRenderer.ts",".././src/core/commands/slashCommandManager.ts",".././src/core/commands/commandManager.ts",".././src/core/git/autoCommitService.ts",".././src/core/git/bitbucketService.ts",".././src/core/completion/tabCompletionProvider.ts",".././src/core/completion/inlineCompletionProvider.ts",".././src/ui/tree/treeNodeTypes.ts",".././src/ui/tree/apeTreeDataProvider.ts",".././src/core/services/versionManager.ts",".././src/core/llm/modelManager.ts",".././src/ui/chat/codeService.ts",".././src/core/services/smartPromptingService.ts",".././src/ui/welcomeView.ts",".././src/ui/mainChatViewProvider.ts",".././src/plugins/core/api.ts",".././src/plugins/core/events.ts",".././src/plugins/types/plugin.ts",".././src/plugins/core/loader.ts",".././src/plugins/core/registry.ts",".././src/plugins/core/settings.ts",".././src/plugins/core/index.ts",".././src/core/services/rulesService.ts",".././src/extension.ts"],"sourcesContent":["var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n","'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","module.exports = require(\"buffer\");","module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n","'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n","'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar setToStringTag = require('es-set-tostringtag');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (Array.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && Object.prototype.hasOwnProperty.call(value, 'httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n  if (Object.prototype.hasOwnProperty.call(value, 'fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (Object.prototype.hasOwnProperty.call(value, 'httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (Object.prototype.hasOwnProperty.call(value, 'httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (Object.prototype.hasOwnProperty.call(headers, prop)) {\n      header = headers[prop];\n\n      // skip nullish headers.\n      if (header == null) {\n        continue;\n      }\n\n      // convert all headers to arrays.\n      if (!Array.isArray(header)) {\n        header = [header];\n      }\n\n      // add non-empty headers.\n      if (header.length) {\n        contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n      }\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && Object.prototype.hasOwnProperty.call(value, 'httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && Object.prototype.hasOwnProperty.call(value, 'httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (Object.prototype.hasOwnProperty.call(userHeaders, header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc(0);\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\nsetToStringTag(FormData, 'FormData');\n","module.exports = require(\"os\");","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","module.exports = require(\"vscode\");","'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n","module.exports = require(\"bufferutil\");","module.exports = require(\"tty\");","var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n","module.exports = require(\"stream\");","var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 2414;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"assert\");","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n\n  //\n  // The choice to employ `zlib.reset()` over `zlib.close()` is dictated by the\n  // fact that in Node.js versions prior to 13.10.0, the callback for\n  // `zlib.flush()` is not called if `zlib.close()` is used. Utilizing\n  // `zlib.reset()` ensures that either the callback is invoked or an error is\n  // emitted.\n  //\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n\n  if (this[kError]) {\n    this[kCallback](this[kError]);\n    return;\n  }\n\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n","module.exports = require(\"zlib\");","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Preventive platform detection\n// istanbul ignore next\n(function detectUnsupportedEnvironment() {\n  var looksLikeNode = typeof process !== \"undefined\";\n  var looksLikeBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n  var looksLikeV8 = isFunction(Error.captureStackTrace);\n  if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {\n    console.warn(\"The follow-redirects package should be excluded from browser builds.\");\n  }\n}());\n\n// Whether to use the native URL object or the legacy url module\nvar useNativeURL = false;\ntry {\n  assert(new URL(\"\"));\n}\ncatch (error) {\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\n}\n\n// URL fields to preserve in copy operations\nvar preservedUrlFields = [\n  \"auth\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"path\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"query\",\n  \"search\",\n  \"hash\",\n];\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\",\n  RedirectionError\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// istanbul ignore next\nvar destroy = Writable.prototype.destroy || noop;\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    try {\n      self._processResponse(response);\n    }\n    catch (cause) {\n      self.emit(\"error\", cause instanceof RedirectionError ?\n        cause : new RedirectionError({ cause: cause }));\n    }\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  destroyRequest(this._currentRequest);\n  this._currentRequest.abort();\n  this.emit(\"abort\");\n};\n\nRedirectableRequest.prototype.destroy = function (error) {\n  destroyRequest(this._currentRequest, error);\n  destroy.call(this, error);\n  return this;\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    self.removeListener(\"close\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n  this.on(\"close\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    throw new TypeError(\"Unsupported protocol \" + protocol);\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      // istanbul ignore else\n      if (request === self._currentRequest) {\n        // Report any write errors\n        // istanbul ignore if\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          // istanbul ignore else\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  destroyRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    throw new TooManyRedirectsError();\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = parseUrl(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Create the redirected request\n  var redirectUrl = resolveUrl(location, currentUrl);\n  debug(\"redirecting to\", redirectUrl.href);\n  this._isRedirect = true;\n  spreadUrlObject(redirectUrl, this._options);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\n     redirectUrl.protocol !== \"https:\" ||\n     redirectUrl.host !== currentHost &&\n     !isSubdomain(redirectUrl.host, currentHost)) {\n    removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    beforeRedirect(this._options, responseDetails, requestDetails);\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  this._performRequest();\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters, ensuring that input is an object\n      if (isURL(input)) {\n        input = spreadUrlObject(input);\n      }\n      else if (isString(input)) {\n        input = spreadUrlObject(parseUrl(input));\n      }\n      else {\n        callback = options;\n        options = validateUrl(input);\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\nfunction noop() { /* empty */ }\n\nfunction parseUrl(input) {\n  var parsed;\n  // istanbul ignore else\n  if (useNativeURL) {\n    parsed = new URL(input);\n  }\n  else {\n    // Ensure the URL is valid and absolute\n    parsed = validateUrl(url.parse(input));\n    if (!isString(parsed.protocol)) {\n      throw new InvalidUrlError({ input });\n    }\n  }\n  return parsed;\n}\n\nfunction resolveUrl(relative, base) {\n  // istanbul ignore next\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n}\n\nfunction validateUrl(input) {\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  return input;\n}\n\nfunction spreadUrlObject(urlObject, target) {\n  var spread = target || {};\n  for (var key of preservedUrlFields) {\n    spread[key] = urlObject[key];\n  }\n\n  // Fix IPv6 hostname\n  if (spread.hostname.startsWith(\"[\")) {\n    spread.hostname = spread.hostname.slice(1, -1);\n  }\n  // Ensure port is a number\n  if (spread.port !== \"\") {\n    spread.port = Number(spread.port);\n  }\n  // Concatenate path\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n  return spread;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    // istanbul ignore else\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  Object.defineProperties(CustomError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n    },\n    name: {\n      value: \"Error [\" + code + \"]\",\n      enumerable: false,\n    },\n  });\n  return CustomError;\n}\n\nfunction destroyRequest(request, error) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.destroy(error);\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\nfunction isURL(value) {\n  return URL && value instanceof URL;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n","'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 4286;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"events\");","'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n","module.exports = require(\"tls\");","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","module.exports = require(\"https\");","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n","var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","'use strict';\n\nvar parseUrl = require('url').parse;\n\nvar DEFAULT_PORTS = {\n  ftp: 21,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443,\n};\n\nvar stringEndsWith = String.prototype.endsWith || function(s) {\n  return s.length <= this.length &&\n    this.indexOf(s, this.length - s.length) !== -1;\n};\n\n/**\n * @param {string|object} url - The URL, or the result from url.parse.\n * @return {string} The URL of the proxy that should handle the request to the\n *  given URL. If no proxy is set, this will be an empty string.\n */\nfunction getProxyForUrl(url) {\n  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n  var proto = parsedUrl.protocol;\n  var hostname = parsedUrl.host;\n  var port = parsedUrl.port;\n  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n    return '';  // Don't proxy URLs without a valid scheme or host.\n  }\n\n  proto = proto.split(':', 1)[0];\n  // Stripping ports in this way instead of using parsedUrl.hostname to make\n  // sure that the brackets around IPv6 addresses are kept.\n  hostname = hostname.replace(/:\\d*$/, '');\n  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n  if (!shouldProxy(hostname, port)) {\n    return '';  // Don't proxy URLs that match NO_PROXY.\n  }\n\n  var proxy =\n    getEnv('npm_config_' + proto + '_proxy') ||\n    getEnv(proto + '_proxy') ||\n    getEnv('npm_config_proxy') ||\n    getEnv('all_proxy');\n  if (proxy && proxy.indexOf('://') === -1) {\n    // Missing scheme in proxy, default to the requested URL's scheme.\n    proxy = proto + '://' + proxy;\n  }\n  return proxy;\n}\n\n/**\n * Determines whether a given URL should be proxied.\n *\n * @param {string} hostname - The host name of the URL.\n * @param {number} port - The effective port of the URL.\n * @returns {boolean} Whether the given URL should be proxied.\n * @private\n */\nfunction shouldProxy(hostname, port) {\n  var NO_PROXY =\n    (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();\n  if (!NO_PROXY) {\n    return true;  // Always proxy if NO_PROXY is not set.\n  }\n  if (NO_PROXY === '*') {\n    return false;  // Never proxy if wildcard is set.\n  }\n\n  return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n    if (!proxy) {\n      return true;  // Skip zero-length hosts.\n    }\n    var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n    if (parsedProxyPort && parsedProxyPort !== port) {\n      return true;  // Skip if ports don't match.\n    }\n\n    if (!/^[.*]/.test(parsedProxyHostname)) {\n      // No wildcards, so stop proxying if there is an exact match.\n      return hostname !== parsedProxyHostname;\n    }\n\n    if (parsedProxyHostname.charAt(0) === '*') {\n      // Remove leading wildcard.\n      parsedProxyHostname = parsedProxyHostname.slice(1);\n    }\n    // Stop proxying if the hostname ends with the no_proxy host.\n    return !stringEndsWith.call(hostname, parsedProxyHostname);\n  });\n}\n\n/**\n * Get the value for an environment variable.\n *\n * @param {string} key - The name of the environment variable.\n * @return {string} The value of the environment variable.\n * @private\n */\nfunction getEnv(key) {\n  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n}\n\nexports.getProxyForUrl = getProxyForUrl;\n","'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","module.exports = require(\"utf-8-validate\");","module.exports = require(\"path\");","module.exports = require(\"crypto\");","module.exports = require(\"url\");","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n","var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n","var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","module.exports = require(\"http\");","'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n","'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n","module.exports = require(\"util\");","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","module.exports = require(\"net\");","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar hasOwn = require('hasown');\nvar $TypeError = require('es-errors/type');\n\nvar toStringTag = hasToStringTag ? Symbol.toStringTag : null;\n\n/** @type {import('.')} */\nmodule.exports = function setToStringTag(object, value) {\n\tvar overrideIfSet = arguments.length > 2 && !!arguments[2] && arguments[2].force;\n\tvar nonConfigurable = arguments.length > 2 && !!arguments[2] && arguments[2].nonConfigurable;\n\tif (\n\t\t(typeof overrideIfSet !== 'undefined' && typeof overrideIfSet !== 'boolean')\n\t\t|| (typeof nonConfigurable !== 'undefined' && typeof nonConfigurable !== 'boolean')\n\t) {\n\t\tthrow new $TypeError('if provided, the `overrideIfSet` and `nonConfigurable` options must be booleans');\n\t}\n\tif (toStringTag && (overrideIfSet || !hasOwn(object, toStringTag))) {\n\t\tif ($defineProperty) {\n\t\t\t$defineProperty(object, toStringTag, {\n\t\t\t\tconfigurable: !nonConfigurable,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: value,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t} else {\n\t\t\tobject[toStringTag] = value; // eslint-disable-line no-param-reassign\n\t\t}\n\t}\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","module.exports = require(\"fs\");","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t792: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","import FormData from 'form-data';\n\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport url from 'url';\nexport default url.URLSearchParams;\n","import crypto from 'crypto';\nimport URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  const randomValues = new Uint32Array(size);\n  crypto.randomFillSync(randomValues);\n  for (let i = 0; i < size; i++) {\n    str += alphabet[randomValues[i] % length];\n  }\n\n  return str;\n}\n\n\nexport default {\n  isNode: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob: typeof Blob !== 'undefined' && Blob || null\n  },\n  ALPHABET,\n  generateString,\n  protocols: [ 'http', 'https', 'file', 'data' ]\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","export const VERSION = \"1.9.0\";","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport parseProtocol from './parseProtocol.js';\nimport platform from '../platform/index.js';\n\nconst DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n\n/**\n * Parse data uri to a Buffer or Blob\n *\n * @param {String} uri\n * @param {?Boolean} asBlob\n * @param {?Object} options\n * @param {?Function} options.Blob\n *\n * @returns {Buffer|Blob}\n */\nexport default function fromDataURI(uri, asBlob, options) {\n  const _Blob = options && options.Blob || platform.classes.Blob;\n  const protocol = parseProtocol(uri);\n\n  if (asBlob === undefined && _Blob) {\n    asBlob = true;\n  }\n\n  if (protocol === 'data') {\n    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;\n\n    const match = DATA_URL_PATTERN.exec(uri);\n\n    if (!match) {\n      throw new AxiosError('Invalid URL', AxiosError.ERR_INVALID_URL);\n    }\n\n    const mime = match[1];\n    const isBase64 = match[2];\n    const body = match[3];\n    const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? 'base64' : 'utf8');\n\n    if (asBlob) {\n      if (!_Blob) {\n        throw new AxiosError('Blob is not supported', AxiosError.ERR_NOT_SUPPORT);\n      }\n\n      return new _Blob([buffer], {type: mime});\n    }\n\n    return buffer;\n  }\n\n  throw new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_NOT_SUPPORT);\n}\n","'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const internals = this[kInternals] = {\n      timeWindow: options.timeWindow,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    const pushChunk = (_chunk, _callback) => {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      internals.isCaptured && this.emit('progress', internals.bytesSeen);\n\n      if (this.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n}\n\nexport default AxiosTransformStream;\n","const {asyncIterator} = Symbol;\n\nconst readBlob = async function* (blob) {\n  if (blob.stream) {\n    yield* blob.stream()\n  } else if (blob.arrayBuffer) {\n    yield await blob.arrayBuffer()\n  } else if (blob[asyncIterator]) {\n    yield* blob[asyncIterator]();\n  } else {\n    yield blob;\n  }\n}\n\nexport default readBlob;\n","import util from 'util';\nimport {Readable} from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\nimport platform from \"../platform/index.js\";\n\nconst BOUNDARY_ALPHABET = platform.ALPHABET.ALPHA_DIGIT + '-_';\n\nconst textEncoder = typeof TextEncoder === 'function' ? new TextEncoder() : new util.TextEncoder();\n\nconst CRLF = '\\r\\n';\nconst CRLF_BYTES = textEncoder.encode(CRLF);\nconst CRLF_BYTES_COUNT = 2;\n\nclass FormDataPart {\n  constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }\n\n  async *encode(){\n    yield this.headers;\n\n    const {value} = this;\n\n    if(utils.isTypedArray(value)) {\n      yield value;\n    } else {\n      yield* readBlob(value);\n    }\n\n    yield CRLF_BYTES;\n  }\n\n  static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, (match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match]));\n  }\n}\n\nconst formDataToStream = (form, headersHandler, options) => {\n  const {\n    tag = 'form-data-boundary',\n    size = 25,\n    boundary = tag + '-' + platform.generateString(size, BOUNDARY_ALPHABET)\n  } = options || {};\n\n  if(!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long')\n  }\n\n  const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF);\n  let contentLength = footerBytes.byteLength;\n\n  const parts = Array.from(form.entries()).map(([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n\n  contentLength += boundaryBytes.byteLength * parts.length;\n\n  contentLength = utils.toFiniteNumber(contentLength);\n\n  const computedHeaders = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`\n  }\n\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n\n  headersHandler && headersHandler(computedHeaders);\n\n  return Readable.from((async function *() {\n    for(const part of parts) {\n      yield boundaryBytes;\n      yield* part.encode();\n    }\n\n    yield footerBytes;\n  })());\n};\n\nexport default formDataToStream;\n","\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n","import utils from \"../utils.js\";\n\nconst callbackify = (fn, reducer) => {\n  return utils.isAsyncFn(fn) ? function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  } : fn;\n}\n\nexport default callbackify;\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport proxyFromEnv from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport {EventEmitter} from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\nconst flushOnFinish = (stream, [throttled, flush]) => {\n  stream\n    .on('end', flush)\n    .on('error', flush);\n\n  return throttled;\n}\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options, responseDetails) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options, responseDetails);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = proxyFromEnv.getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\nconst resolveFamily = ({address, family}) => {\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n  return ({\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  });\n}\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {address, family});\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, (value) => utils.isArray(value) ? value : [value]);\n      // hotfix to support opt.all option which is required for node 20.x\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          if (err) {\n            return cb(err);\n          }\n\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      }\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    const parsed = new URL(fullPath, platform.hasBrowserEnv ? platform.origin : undefined);\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const {onUploadProgress, onDownloadProgress} = config;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data) || utils.isFile(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', flushOnFinish(\n        data,\n        progressEventDecorator(\n          contentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress), false, 3)\n        )\n      ));\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    // cacheable-lookup integration hotfix\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname.startsWith(\"[\") ? parsed.hostname.slice(1, -1) : parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress || maxDownloadRate) {\n        const transformStream = new AxiosTransformStream({\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', flushOnFinish(\n          transformStream,\n          progressEventDecorator(\n            responseLength,\n            progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)\n          )\n        ));\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'stream has been aborted',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n","/**\r\n * Message roles representing different participants in a conversation\r\n */\r\nexport enum MessageRole {\r\n  User = 'user',           // Messages from the user\r\n  Assistant = 'assistant', // Messages from the AI assistant\r\n  System = 'system'        // System messages (e.g., errors, notifications)\r\n}\r\n\r\n/**\r\n * Supported LLM models\r\n */\r\nexport enum LLMModel {\r\n  // OpenAI models (최신 모델들)\r\n  GPT_4_1_MINI = 'openai/gpt-4.1-mini',            // 기본 모델\r\n  GPT_4_1_PREVIEW = 'openai/gpt-4.1-preview',      // 최신 고성능\r\n  GPT_4O = 'openai/gpt-4o',                        // 고성능\r\n  GPT_3_5_TURBO = 'openai/gpt-3.5-turbo',          // 경제적인 모델\r\n  \r\n  // Anthropic models (Claude 모델들)\r\n  CLAUDE_3_OPUS = 'anthropic/claude-3-opus-20240229',     // 최고 성능 모델\r\n  CLAUDE_3_SONNET = 'anthropic/claude-3-sonnet-20240229', // 균형잡힌 성능\r\n  CLAUDE_3_HAIKU = 'anthropic/claude-3-haiku-20240307',   // 빠른 응답 모델\r\n  \r\n  // 추가 모델들\r\n  GEMINI_PRO = 'google/gemini-pro',                // Google의 최신 모델\r\n  GEMMA_7B = 'google/gemma-7b-it',                 // 소형 오픈소스 모델\r\n  QWEN_72B = 'qwen/qwen-72b-chat',                 // Alibaba의 고성능 모델\r\n  DEEPSEEK = 'deepseek/deepseek-coder',            // 코딩 특화 모델\r\n  \r\n  // 무료 모델들\r\n  MISTRAL_7B = 'mistralai/mistral-7b-instruct',    // 무료 오픈소스 모델\r\n  LLAMA3_8B = 'meta-llama/llama-3-8b-instruct'     // 무료 오픈소스 모델\r\n}\r\n\r\n/**\r\n * Represents a chat message\r\n */\r\nexport interface Message {\r\n  /** Unique identifier for the message */\r\n  id: string;\r\n  \r\n  /** Role of the message sender */\r\n  role: MessageRole;\r\n  \r\n  /** Message content */\r\n  content: string;\r\n  \r\n  /** Timestamp when the message was created */\r\n  timestamp: Date;\r\n  \r\n  /** Additional message metadata (optional) */\r\n  metadata?: MessageMetadata;\r\n}\r\n\r\n/**\r\n * Optional metadata for messages\r\n */\r\nexport interface MessageMetadata {\r\n  /** Related file paths */\r\n  relatedFiles?: string[];\r\n  \r\n  /** Attached files data */\r\n  attachedFiles?: {\r\n    /** File path within workspace */\r\n    path: string;\r\n    /** File name */\r\n    name: string;\r\n    /** File type/extension */\r\n    type: string;\r\n    /** Content if available (optional for large files) */\r\n    content?: string;\r\n  }[];\r\n  \r\n  /** Token count information */\r\n  tokens?: {\r\n    prompt?: number;\r\n    completion?: number;\r\n    total?: number;\r\n  };\r\n  \r\n  /** Model used for this message */\r\n  model?: string;\r\n  \r\n  /** Additional custom metadata */\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Request to the LLM API\r\n */\r\nexport interface LLMRequest {\r\n  /** Messages to send to the LLM */\r\n  messages: Message[];\r\n  \r\n  /** Model to use for this request */\r\n  model: string;\r\n  \r\n  /** Temperature for response generation */\r\n  temperature?: number;\r\n  \r\n  /** Maximum tokens to generate */\r\n  maxTokens?: number;\r\n  \r\n  /** Whether to stream the response */\r\n  stream?: boolean;\r\n  \r\n  /** Additional request parameters */\r\n  parameters?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Response from the LLM API\r\n */\r\nexport interface LLMResponse {\r\n  /** Generated message */\r\n  message: Message;\r\n  \r\n  /** Token usage information */\r\n  usage?: {\r\n    promptTokens: number;\r\n    completionTokens: number;\r\n    totalTokens: number;\r\n  };\r\n  \r\n  /** Additional response metadata */\r\n  metadata?: Record<string, any>;\r\n  \r\n  /** Raw content (for compatibility) */\r\n  content?: string;\r\n}\r\n\r\n/**\r\n * Represents a chat session\r\n */\r\nexport interface ChatSession {\r\n  /** Unique identifier for the session */\r\n  id: string;\r\n  \r\n  /** Human-readable name for the session */\r\n  name: string;\r\n  \r\n  /** When the session was created */\r\n  createdAt: Date;\r\n  \r\n  /** When the session was last updated */\r\n  updatedAt: Date;\r\n  \r\n  /** Messages in this session */\r\n  messages: Message[];\r\n  \r\n  /** Additional session metadata */\r\n  metadata?: {\r\n    /** Related project or workspace */\r\n    project?: string;\r\n    \r\n    /** Session summary */\r\n    summary?: string;\r\n    \r\n    /** Default model for this session */\r\n    defaultModel?: string;\r\n    \r\n    /** Custom session data */\r\n    [key: string]: any;\r\n  };\r\n}\r\n\r\n/**\r\n * Options for LLM API requests\r\n */\r\nexport interface LLMRequestOptions {\r\n  /** Model to use */\r\n  model?: string;\r\n  \r\n  /** Temperature for response generation */\r\n  temperature?: number;\r\n  \r\n  /** Maximum tokens to generate */\r\n  maxTokens?: number;\r\n  \r\n  /** Whether to stream the response */\r\n  stream?: boolean;\r\n  \r\n  /** System prompt to use */\r\n  systemPrompt?: string;\r\n  \r\n  /** Additional context messages */\r\n  contextMessages?: Message[];\r\n  \r\n  /** Additional model parameters */\r\n  modelParameters?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Callback for streaming responses\r\n */\r\nexport type StreamCallback = (chunk: string, done: boolean) => void;","/**\r\n * 서비스 설정 관리자\r\n * \r\n * Git, Jira, S3, SWDP 등의 외부 서비스 연결 설정을 관리합니다.\r\n * 각 서비스별 URL, 인증 정보 등을 VSCode 설정에서 가져오고 검증합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\n\r\n/**\r\n * 서비스 인증 방식 유형\r\n */\r\nexport enum AuthType {\r\n  None = 'none',\r\n  Basic = 'basic',\r\n  OAuth = 'oauth',\r\n  Token = 'token',\r\n  AWS = 'aws'\r\n}\r\n\r\n/**\r\n * 서비스 연결 설정 인터페이스\r\n */\r\nexport interface ServiceConnectionConfig {\r\n  enabled: boolean;\r\n  url: string;\r\n  authType: AuthType;\r\n  username?: string;\r\n  password?: string;\r\n  token?: string;\r\n  useMock: boolean;\r\n  additionalParams?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * 서비스 유형\r\n */\r\nexport enum ServiceType {\r\n  Git = 'git',\r\n  Bitbucket = 'bitbucket',\r\n  Jira = 'jira',\r\n  S3 = 'pocket', // S3/Pocket 서비스\r\n  SWDP = 'swdp',\r\n  Vault = 'vault', // VAULT 서비스\r\n  Unknown = 'unknown'\r\n}\r\n\r\n/**\r\n * 서비스 설정 관리자 클래스\r\n */\r\nexport class ServiceConfigManager implements vscode.Disposable {\r\n  private configs: Map<ServiceType, ServiceConnectionConfig> = new Map();\r\n  private disposables: vscode.Disposable[] = [];\r\n  \r\n  /**\r\n   * 생성자\r\n   * @param context VSCode 확장 컨텍스트\r\n   */\r\n  constructor(private readonly context: vscode.ExtensionContext) {\r\n    // 초기 설정 로드\r\n    this.loadAllConfigs();\r\n    \r\n    // 설정 변경 감지\r\n    this.disposables.push(\r\n      vscode.workspace.onDidChangeConfiguration(e => {\r\n        let configChanged = false;\r\n        \r\n        for (const serviceType of Object.values(ServiceType)) {\r\n          if (e.affectsConfiguration(`ape.${serviceType}`)) {\r\n            this.loadServiceConfig(serviceType as ServiceType);\r\n            configChanged = true;\r\n          }\r\n        }\r\n        \r\n        if (configChanged) {\r\n          // 설정 변경 이벤트 발생\r\n          this.onConfigChange();\r\n        }\r\n      })\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * 설정 변경 시 호출될 이벤트 핸들러\r\n   * @private\r\n   */\r\n  private onConfigChange(): void {\r\n    // 설정 변경 이벤트를 구독자에게 알림\r\n    // 향후 EventEmitter 추가 가능\r\n  }\r\n  \r\n  /**\r\n   * 모든 서비스 설정 로드\r\n   * @private\r\n   */\r\n  private loadAllConfigs(): void {\r\n    for (const serviceType of Object.values(ServiceType)) {\r\n      this.loadServiceConfig(serviceType as ServiceType);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 특정 서비스 설정 로드\r\n   * @param serviceType 서비스 유형\r\n   * @private\r\n   */\r\n  private loadServiceConfig(serviceType: ServiceType): void {\r\n    const config = vscode.workspace.getConfiguration(`ape.${serviceType}`);\r\n    \r\n    const serviceConfig: ServiceConnectionConfig = {\r\n      enabled: config.get('enabled', false),\r\n      url: config.get('url', ''),\r\n      authType: config.get('authType', AuthType.None),\r\n      username: config.get('username', ''),\r\n      password: config.get('password', ''),\r\n      token: config.get('token', ''),\r\n      useMock: config.get('useMock', true),\r\n      additionalParams: {}\r\n    };\r\n    \r\n    // VAULT 서비스인 경우 디렉토리 경로 추가\r\n    if (serviceType === ServiceType.Vault) {\r\n      serviceConfig.additionalParams = {\r\n        vaultDirectory: config.get('vaultDirectory', '.ape-vault')\r\n      };\r\n    } else {\r\n      serviceConfig.additionalParams = config.get('additionalParams', {});\r\n    }\r\n    \r\n    this.configs.set(serviceType, serviceConfig);\r\n  }\r\n  \r\n  /**\r\n   * 서비스 설정 가져오기\r\n   * @param serviceType 서비스 유형\r\n   */\r\n  public getServiceConfig(serviceType: ServiceType): ServiceConnectionConfig {\r\n    // 설정이 없으면 새로 로드\r\n    if (!this.configs.has(serviceType)) {\r\n      this.loadServiceConfig(serviceType);\r\n    }\r\n    \r\n    return this.configs.get(serviceType) as ServiceConnectionConfig;\r\n  }\r\n  \r\n  /**\r\n   * 서비스 설정 업데이트\r\n   * @param serviceType 서비스 유형\r\n   * @param config 새 설정\r\n   */\r\n  public async updateServiceConfig(\r\n    serviceType: ServiceType, \r\n    config: Partial<ServiceConnectionConfig>\r\n  ): Promise<boolean> {\r\n    try {\r\n      const vscodeConfig = vscode.workspace.getConfiguration(`ape.${serviceType}`);\r\n      \r\n      // 각 필드 업데이트\r\n      for (const [key, value] of Object.entries(config)) {\r\n        if (value !== undefined) {\r\n          await vscodeConfig.update(key, value, vscode.ConfigurationTarget.Global);\r\n        }\r\n      }\r\n      \r\n      // 설정 다시 로드\r\n      this.loadServiceConfig(serviceType);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error(`서비스 설정 업데이트 오류 (${serviceType}):`, error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 서비스 설정 검증\r\n   * @param serviceType 서비스 유형\r\n   */\r\n  public validateServiceConfig(serviceType: ServiceType): string[] {\r\n    const config = this.getServiceConfig(serviceType);\r\n    const errors: string[] = [];\r\n    \r\n    // 기본 검증: 서비스가 활성화되어 있는 경우 URL 필수\r\n    if (config.enabled && !config.useMock) {\r\n      if (!config.url) {\r\n        errors.push(`${serviceType} 서비스 URL이 설정되지 않았습니다.`);\r\n      } else if (!this.isValidUrl(config.url)) {\r\n        errors.push(`${serviceType} 서비스 URL 형식이 올바르지 않습니다: ${config.url}`);\r\n      }\r\n      \r\n      // 인증 유형에 따른 검증\r\n      if (config.authType === AuthType.Basic) {\r\n        if (!config.username) {\r\n          errors.push(`${serviceType} 서비스 사용자 이름이 설정되지 않았습니다.`);\r\n        }\r\n        if (!config.password) {\r\n          errors.push(`${serviceType} 서비스 비밀번호가 설정되지 않았습니다.`);\r\n        }\r\n      } else if (config.authType === AuthType.Token) {\r\n        if (!config.token) {\r\n          errors.push(`${serviceType} 서비스 토큰이 설정되지 않았습니다.`);\r\n        }\r\n      } else if (config.authType === AuthType.OAuth) {\r\n        if (!config.token) {\r\n          errors.push(`${serviceType} 서비스 OAuth 토큰이 설정되지 않았습니다.`);\r\n        }\r\n      } else if (config.authType === AuthType.AWS) {\r\n        const params = config.additionalParams || {};\r\n        if (!params.accessKeyId) {\r\n          errors.push(`${serviceType} 서비스 AWS 액세스 키 ID가 설정되지 않았습니다.`);\r\n        }\r\n        if (!params.secretAccessKey) {\r\n          errors.push(`${serviceType} 서비스 AWS 시크릿 액세스 키가 설정되지 않았습니다.`);\r\n        }\r\n        if (!params.region) {\r\n          errors.push(`${serviceType} 서비스 AWS 리전이 설정되지 않았습니다.`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return errors;\r\n  }\r\n  \r\n  /**\r\n   * URL 유효성 검사\r\n   * @param url 검사할 URL\r\n   * @private\r\n   */\r\n  private isValidUrl(url: string): boolean {\r\n    try {\r\n      new URL(url);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 서비스 연결 테스트\r\n   * @param serviceType 서비스 유형\r\n   */\r\n  public async testConnection(serviceType: ServiceType): Promise<{success: boolean, message: string}> {\r\n    const config = this.getServiceConfig(serviceType);\r\n    \r\n    // 모의 모드인 경우 항상 성공\r\n    if (config.useMock) {\r\n      return { \r\n        success: true, \r\n        message: `${serviceType} 서비스가 모의 모드로 설정되어 있습니다. 실제 서버에 연결하지 않습니다.` \r\n      };\r\n    }\r\n    \r\n    // 유효성 검사\r\n    const errors = this.validateServiceConfig(serviceType);\r\n    if (errors.length > 0) {\r\n      return { \r\n        success: false, \r\n        message: `설정 오류: ${errors.join(' ')}` \r\n      };\r\n    }\r\n    \r\n    // 실제 연결 테스트는 각 서비스별 클래스에서 구현\r\n    return { \r\n      success: true, \r\n      message: `${serviceType} 서비스 설정이 유효합니다. 실제 연결 테스트는 각 서비스 클래스에서 수행합니다.` \r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    this.disposables.forEach(d => d.dispose());\r\n    this.disposables = [];\r\n  }\r\n}","/**\r\n * 서비스 오류 모듈\r\n * \r\n * 외부 서비스 연결 및 사용 중 발생하는 오류를 처리하는 기능 제공\r\n * 일관된 오류 처리와 사용자 친화적인 오류 메시지를 위한 유틸리티\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { ServiceType } from './serviceConfig';\r\n\r\n/**\r\n * 서비스 오류 유형 열거형\r\n */\r\nexport enum ServiceErrorType {\r\n  // 연결 관련 오류\r\n  ConnectionFailed = 'connection_failed',\r\n  Timeout = 'timeout',\r\n  \r\n  // 인증 관련 오류\r\n  AuthenticationFailed = 'authentication_failed',\r\n  TokenExpired = 'token_expired',\r\n  PermissionDenied = 'permission_denied',\r\n  \r\n  // 리소스 관련 오류\r\n  ResourceNotFound = 'resource_not_found',\r\n  InvalidResource = 'invalid_resource',\r\n  \r\n  // 요청 관련 오류\r\n  InvalidRequest = 'invalid_request',\r\n  BadRequest = 'bad_request',\r\n  RateLimited = 'rate_limited',\r\n  \r\n  // 서버 관련 오류\r\n  ServerError = 'server_error',\r\n  ServiceUnavailable = 'service_unavailable',\r\n  \r\n  // 환경 관련 오류\r\n  ConfigurationError = 'configuration_error',\r\n  \r\n  // 기타 오류\r\n  Unknown = 'unknown'\r\n}\r\n\r\n/**\r\n * 서비스 오류 인터페이스\r\n */\r\nexport interface IServiceError {\r\n  type: ServiceErrorType;\r\n  serviceType: ServiceType;\r\n  message: string;\r\n  details?: any;\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * 서비스 오류 클래스\r\n */\r\nexport class ServiceError extends Error implements IServiceError {\r\n  type: ServiceErrorType;\r\n  serviceType: ServiceType;\r\n  details?: any;\r\n  timestamp: Date;\r\n\r\n  /**\r\n   * 서비스 오류 생성자\r\n   * @param message 오류 메시지\r\n   * @param originalError 원본 오류 (옵션)\r\n   * @param serviceType 서비스 타입 (기본값: Unknown)\r\n   * @param errorType 오류 타입 (기본값: Unknown)\r\n   */\r\n  constructor(\r\n    message: string, \r\n    originalError?: any, \r\n    serviceType: ServiceType = ServiceType.Unknown, \r\n    errorType: ServiceErrorType = ServiceErrorType.Unknown\r\n  ) {\r\n    super(message);\r\n    this.name = 'ServiceError';\r\n    this.message = message;\r\n    this.type = errorType;\r\n    this.serviceType = serviceType;\r\n    this.details = originalError;\r\n    this.timestamp = new Date();\r\n\r\n    // Error 객체의 프로토타입 체인 유지\r\n    Object.setPrototypeOf(this, ServiceError.prototype);\r\n  }\r\n}\r\n\r\n/**\r\n * 서비스 오류 관리자 클래스\r\n */\r\nexport class ServiceErrorManager {\r\n  private static _lastErrors: Map<ServiceType, IServiceError> = new Map();\r\n  \r\n  /**\r\n   * 오류 생성 및 등록\r\n   * @param serviceType 서비스 유형\r\n   * @param errorType 오류 유형\r\n   * @param message 오류 메시지\r\n   * @param details 추가 세부 정보\r\n   * @returns 생성된 서비스 오류\r\n   */\r\n  public static createError(\r\n    serviceType: ServiceType,\r\n    errorType: ServiceErrorType,\r\n    message: string,\r\n    details?: any\r\n  ): IServiceError {\r\n    const error = new ServiceError(message, details, serviceType, errorType);\r\n    \r\n    // 해당 서비스의 마지막 오류 저장\r\n    this._lastErrors.set(serviceType, error);\r\n    \r\n    // 콘솔에 오류 기록\r\n    console.error(`[${serviceType}] ${errorType}: ${message}`, details || '');\r\n    \r\n    return error;\r\n  }\r\n  \r\n  /**\r\n   * 마지막 오류 가져오기\r\n   * @param serviceType 서비스 유형\r\n   * @returns 마지막 서비스 오류 또는 null\r\n   */\r\n  public static getLastError(serviceType: ServiceType): IServiceError | null {\r\n    return this._lastErrors.get(serviceType) || null;\r\n  }\r\n  \r\n  /**\r\n   * 모든 서비스 오류 가져오기\r\n   * @returns 모든 서비스 오류 맵\r\n   */\r\n  public static getAllErrors(): Map<ServiceType, IServiceError> {\r\n    return new Map(this._lastErrors);\r\n  }\r\n  \r\n  /**\r\n   * 서비스 오류를 사용자 친화적인 메시지로 변환\r\n   * @param error 서비스 오류\r\n   * @returns 사용자 친화적인 오류 메시지\r\n   */\r\n  public static getUserFriendlyMessage(error: IServiceError): string {\r\n    // 서비스 유형별 한글 이름\r\n    const serviceNames: Record<ServiceType, string> = {\r\n      [ServiceType.Git]: 'Git',\r\n      [ServiceType.Bitbucket]: 'Bitbucket',\r\n      [ServiceType.Jira]: 'Jira',\r\n      [ServiceType.S3]: 'Pocket/S3',\r\n      [ServiceType.SWDP]: 'SWDP',\r\n      [ServiceType.Vault]: 'VAULT',\r\n      [ServiceType.Unknown]: '알 수 없는 서비스'\r\n    };\r\n    \r\n    const serviceName = serviceNames[error.serviceType] || error.serviceType;\r\n    \r\n    // 오류 유형별 기본 메시지\r\n    switch (error.type) {\r\n      case ServiceErrorType.ConnectionFailed:\r\n        return `${serviceName} 서버 연결에 실패했습니다. URL을 확인하세요: ${error.details?.url || ''}`;\r\n        \r\n      case ServiceErrorType.Timeout:\r\n        return `${serviceName} 서버 응답 시간이 초과되었습니다. 서버 상태나 네트워크를 확인하세요.`;\r\n        \r\n      case ServiceErrorType.AuthenticationFailed:\r\n        return `${serviceName} 인증에 실패했습니다. 아이디와 비밀번호를 확인하세요.`;\r\n        \r\n      case ServiceErrorType.TokenExpired:\r\n        return `${serviceName} 인증 토큰이 만료되었습니다. 토큰을 갱신하세요.`;\r\n        \r\n      case ServiceErrorType.PermissionDenied:\r\n        return `${serviceName} 접근 권한이 없습니다. 계정 권한을 확인하세요.`;\r\n        \r\n      case ServiceErrorType.ResourceNotFound:\r\n        return `${serviceName}에서 요청한 리소스를 찾을 수 없습니다.`;\r\n        \r\n      case ServiceErrorType.InvalidResource:\r\n        return `${serviceName}에 잘못된 리소스가 요청되었습니다.`;\r\n        \r\n      case ServiceErrorType.InvalidRequest:\r\n      case ServiceErrorType.BadRequest:\r\n        return `${serviceName}에 잘못된 요청이 전송되었습니다.`;\r\n        \r\n      case ServiceErrorType.RateLimited:\r\n        return `${serviceName} 요청 한도를 초과했습니다. 잠시 후 다시 시도하세요.`;\r\n        \r\n      case ServiceErrorType.ServerError:\r\n        return `${serviceName} 서버에 오류가 발생했습니다. 서버 관리자에게 문의하세요.`;\r\n        \r\n      case ServiceErrorType.ServiceUnavailable:\r\n        return `${serviceName} 서비스를 현재 사용할 수 없습니다. 서비스 상태를 확인하세요.`;\r\n        \r\n      case ServiceErrorType.ConfigurationError:\r\n        return `${serviceName} 설정 오류: ${error.message}`;\r\n        \r\n      case ServiceErrorType.Unknown:\r\n      default:\r\n        return `${serviceName} 오류: ${error.message}`;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 오류를 사용자에게 표시\r\n   * @param error 서비스 오류\r\n   * @param showDetailAction 세부 정보 표시 액션 포함 여부\r\n   */\r\n  public static async showErrorToUser(error: IServiceError, showDetailAction: boolean = true): Promise<void> {\r\n    const userMessage = this.getUserFriendlyMessage(error);\r\n    \r\n    if (showDetailAction) {\r\n      const selection = await vscode.window.showErrorMessage(\r\n        userMessage,\r\n        '세부 정보',\r\n        '닫기'\r\n      );\r\n      \r\n      if (selection === '세부 정보') {\r\n        // 세부 정보를 출력 채널에 표시\r\n        const outputChannel = vscode.window.createOutputChannel(`APE ${error.serviceType} 오류`);\r\n        outputChannel.appendLine(`시간: ${error.timestamp.toLocaleString()}`);\r\n        outputChannel.appendLine(`서비스: ${error.serviceType}`);\r\n        outputChannel.appendLine(`오류 유형: ${error.type}`);\r\n        outputChannel.appendLine(`메시지: ${error.message}`);\r\n        \r\n        if (error.details) {\r\n          outputChannel.appendLine('\\n세부 정보:');\r\n          outputChannel.appendLine(JSON.stringify(error.details, null, 2));\r\n        }\r\n        \r\n        outputChannel.show();\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(userMessage);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * HTTP 상태 코드를 ServiceErrorType으로 변환\r\n   * @param statusCode HTTP 상태 코드\r\n   * @returns 대응하는 서비스 오류 유형\r\n   */\r\n  public static errorTypeFromHttpStatus(statusCode: number): ServiceErrorType {\r\n    if (statusCode >= 500) {\r\n      return ServiceErrorType.ServerError;\r\n    }\r\n    \r\n    switch (statusCode) {\r\n      case 400:\r\n        return ServiceErrorType.BadRequest;\r\n      case 401:\r\n        return ServiceErrorType.AuthenticationFailed;\r\n      case 403:\r\n        return ServiceErrorType.PermissionDenied;\r\n      case 404:\r\n        return ServiceErrorType.ResourceNotFound;\r\n      case 408:\r\n        return ServiceErrorType.Timeout;\r\n      case 429:\r\n        return ServiceErrorType.RateLimited;\r\n      default:\r\n        return ServiceErrorType.Unknown;\r\n    }\r\n  }\r\n}","/**\r\n * VAULT 서비스\r\n * \r\n * VAULT 컨텍스트 및 아이템을 관리하는 서비스입니다.\r\n * 컨텍스트 저장, 불러오기, 아이템 관리 기능을 제공합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { ServiceConfigManager, ServiceType } from './serviceConfig';\r\nimport { ServiceError } from './serviceError';\r\n\r\n/**\r\n * VAULT 컨텍스트 타입\r\n */\r\nexport enum VaultContextType {\r\n  System = 'system',\r\n  Project = 'project',\r\n  Personal = 'personal',\r\n  Shared = 'shared',\r\n  Template = 'template'\r\n}\r\n\r\n/**\r\n * VAULT 아이템 인터페이스\r\n */\r\nexport interface VaultItem {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  content: string;\r\n  tags?: string[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  contextType: VaultContextType;\r\n  contextId?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * VAULT 컨텍스트 인터페이스\r\n */\r\nexport interface VaultContext {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  type: VaultContextType;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  items: VaultItem[];\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * VAULT 서비스 클래스\r\n */\r\nexport class VaultService implements vscode.Disposable {\r\n  private _onDidChangeVault = new vscode.EventEmitter<void>();\r\n  readonly onDidChangeVault = this._onDidChangeVault.event;\r\n  \r\n  private contexts: Map<string, VaultContext> = new Map();\r\n  private disposables: vscode.Disposable[] = [];\r\n  private vaultDir: string;\r\n  private fs = require('fs');\r\n  private path = require('path');\r\n  \r\n  /**\r\n   * 생성자\r\n   * @param context VSCode 확장 컨텍스트\r\n   * @param configManager 서비스 설정 관리자\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly configManager: ServiceConfigManager\r\n  ) {\r\n    // VAULT 디렉토리 경로 설정\r\n    const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n    this.vaultDir = config.additionalParams?.vaultDirectory || '.ape-vault';\r\n    \r\n    // 절대 경로가 아니면 홈 디렉토리 기준으로 설정\r\n    if (!this.path.isAbsolute(this.vaultDir)) {\r\n      this.vaultDir = this.path.join(this.getUserHomeDir(), this.vaultDir);\r\n    }\r\n    \r\n    // VAULT 디렉토리 존재 확인 및 생성\r\n    this.ensureVaultDirectory();\r\n    \r\n    // 설정 변경 이벤트 구독\r\n    this.disposables.push(\r\n      vscode.workspace.onDidChangeConfiguration(e => {\r\n        if (e.affectsConfiguration('ape.vault')) {\r\n          // 설정이 변경되면 디렉토리 경로 업데이트\r\n          const newConfig = this.configManager.getServiceConfig(ServiceType.Vault);\r\n          const newDir = newConfig.additionalParams?.vaultDirectory || '.ape-vault';\r\n          \r\n          if (newDir !== this.vaultDir) {\r\n            this.vaultDir = this.path.isAbsolute(newDir) \r\n              ? newDir \r\n              : this.path.join(this.getUserHomeDir(), newDir);\r\n            \r\n            this.ensureVaultDirectory();\r\n            this.loadAllContexts();\r\n          } else {\r\n            this.loadAllContexts();\r\n          }\r\n        }\r\n      })\r\n    );\r\n    \r\n    // 초기 데이터 로드\r\n    this.loadAllContexts();\r\n  }\r\n  \r\n  /**\r\n   * 사용자 홈 디렉토리 가져오기\r\n   */\r\n  private getUserHomeDir(): string {\r\n    return process.env.HOME || process.env.USERPROFILE || '.';\r\n  }\r\n  \r\n  /**\r\n   * VAULT 디렉토리 존재 확인 및 생성\r\n   */\r\n  private ensureVaultDirectory(): void {\r\n    try {\r\n      // 메인 VAULT 디렉토리\r\n      if (!this.fs.existsSync(this.vaultDir)) {\r\n        this.fs.mkdirSync(this.vaultDir, { recursive: true });\r\n        console.log(`VAULT 디렉토리 생성됨: ${this.vaultDir}`);\r\n      }\r\n      \r\n      // 컨텍스트 타입별 하위 디렉토리\r\n      const contextTypeDirs = Object.values(VaultContextType);\r\n      for (const dir of contextTypeDirs) {\r\n        const typePath = this.path.join(this.vaultDir, dir);\r\n        if (!this.fs.existsSync(typePath)) {\r\n          this.fs.mkdirSync(typePath, { recursive: true });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('VAULT 디렉토리 생성 오류:', error);\r\n      vscode.window.showErrorMessage(`VAULT 디렉토리를 생성할 수 없습니다: ${error}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모든 컨텍스트 로드\r\n   */\r\n  private async loadAllContexts(): Promise<void> {\r\n    try {\r\n      this.contexts.clear();\r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (config.useMock) {\r\n        // 모의 데이터 로드\r\n        this.loadMockContexts();\r\n      } else if (config.enabled) {\r\n        // 파일 시스템에서 데이터 로드\r\n        await this.loadContextsFromFileSystem();\r\n        \r\n        // 컨텍스트가 없으면 기본 컨텍스트 생성\r\n        if (this.contexts.size === 0) {\r\n          this.createDefaultContexts();\r\n        }\r\n      }\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n    } catch (error) {\r\n      console.error('VAULT 컨텍스트 로드 오류:', error);\r\n      vscode.window.showErrorMessage(`VAULT 컨텍스트 로드 중 오류가 발생했습니다: ${error}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 파일 시스템에서 컨텍스트 로드\r\n   */\r\n  private async loadContextsFromFileSystem(): Promise<void> {\r\n    try {\r\n      // 각 컨텍스트 타입 디렉토리 처리\r\n      for (const contextType of Object.values(VaultContextType)) {\r\n        const typeDir = this.path.join(this.vaultDir, contextType);\r\n        \r\n        // 디렉토리가 없으면 건너뛰기\r\n        if (!this.fs.existsSync(typeDir)) {\r\n          continue;\r\n        }\r\n        \r\n        // 컨텍스트 메타데이터 파일 목록 가져오기\r\n        const contextFiles = this.fs.readdirSync(typeDir)\r\n          .filter((file: string) => file.endsWith('.context.json'));\r\n        \r\n        // 각 컨텍스트 파일 로드\r\n        for (const fileName of contextFiles) {\r\n          try {\r\n            const filePath = this.path.join(typeDir, fileName);\r\n            const data = this.fs.readFileSync(filePath, 'utf8');\r\n            const contextData = JSON.parse(data);\r\n            \r\n            // 날짜 문자열을 Date 객체로 변환\r\n            contextData.createdAt = new Date(contextData.createdAt);\r\n            contextData.updatedAt = new Date(contextData.updatedAt);\r\n            \r\n            // 컨텍스트 아이템 로드\r\n            contextData.items = await this.loadContextItems(contextData.id, contextType as VaultContextType);\r\n            \r\n            // 컨텍스트 맵에 추가\r\n            this.contexts.set(contextData.id, contextData);\r\n          } catch (error) {\r\n            console.error(`컨텍스트 파일 로드 오류 (${fileName}):`, error);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('파일 시스템에서 컨텍스트 로드 오류:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 특정 컨텍스트의 아이템 로드\r\n   * @param contextId 컨텍스트 ID\r\n   * @param contextType 컨텍스트 타입\r\n   */\r\n  private async loadContextItems(contextId: string, contextType: VaultContextType): Promise<VaultItem[]> {\r\n    const items: VaultItem[] = [];\r\n    const itemsDir = this.path.join(this.vaultDir, contextType, contextId);\r\n    \r\n    // 아이템 디렉토리가 없으면 빈 배열 반환\r\n    if (!this.fs.existsSync(itemsDir)) {\r\n      return items;\r\n    }\r\n    \r\n    // 아이템 파일 목록 가져오기\r\n    const itemFiles = this.fs.readdirSync(itemsDir)\r\n      .filter((file: string) => file.endsWith('.item.json'));\r\n    \r\n    // 각 아이템 파일 로드\r\n    for (const fileName of itemFiles) {\r\n      try {\r\n        const filePath = this.path.join(itemsDir, fileName);\r\n        const data = this.fs.readFileSync(filePath, 'utf8');\r\n        const itemData = JSON.parse(data);\r\n        \r\n        // 날짜 문자열을 Date 객체로 변환\r\n        itemData.createdAt = new Date(itemData.createdAt);\r\n        itemData.updatedAt = new Date(itemData.updatedAt);\r\n        \r\n        // 콘텐츠 파일 로드\r\n        const contentFilePath = this.path.join(itemsDir, `${itemData.id}.content.md`);\r\n        if (this.fs.existsSync(contentFilePath)) {\r\n          itemData.content = this.fs.readFileSync(contentFilePath, 'utf8');\r\n        }\r\n        \r\n        items.push(itemData);\r\n      } catch (error) {\r\n        console.error(`아이템 파일 로드 오류 (${fileName}):`, error);\r\n      }\r\n    }\r\n    \r\n    return items;\r\n  }\r\n  \r\n  /**\r\n   * 기본 컨텍스트 생성\r\n   */\r\n  private createDefaultContexts(): void {\r\n    // 모의 데이터 로드하여 기본 컨텍스트로 저장\r\n    this.loadMockContexts();\r\n    \r\n    // 각 컨텍스트 저장\r\n    this.contexts.forEach(context => {\r\n      this.saveContextToFileSystem(context);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트를 파일 시스템에 저장\r\n   * @param context 저장할 컨텍스트\r\n   */\r\n  private saveContextToFileSystem(context: VaultContext): void {\r\n    try {\r\n      // 컨텍스트 타입 디렉토리 경로\r\n      const typeDir = this.path.join(this.vaultDir, context.type);\r\n      \r\n      // 컨텍스트 메타데이터 저장\r\n      const contextMetadata: any = { ...context };\r\n      delete contextMetadata.items; // 아이템은 별도로 저장\r\n      \r\n      const contextFilePath = this.path.join(typeDir, `${context.id}.context.json`);\r\n      this.fs.writeFileSync(contextFilePath, JSON.stringify(contextMetadata, null, 2), 'utf8');\r\n      \r\n      // 컨텍스트 아이템 디렉토리 생성\r\n      const itemsDir = this.path.join(typeDir, context.id);\r\n      if (!this.fs.existsSync(itemsDir)) {\r\n        this.fs.mkdirSync(itemsDir, { recursive: true });\r\n      }\r\n      \r\n      // 각 아이템 저장\r\n      context.items.forEach(item => {\r\n        this.saveItemToFileSystem(item, context.id, context.type);\r\n      });\r\n    } catch (error) {\r\n      console.error(`컨텍스트 저장 오류 (${context.id}):`, error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 아이템을 파일 시스템에 저장\r\n   * @param item 저장할 아이템\r\n   * @param contextId 컨텍스트 ID\r\n   * @param contextType 컨텍스트 타입\r\n   */\r\n  private saveItemToFileSystem(item: VaultItem, contextId: string, contextType: VaultContextType): void {\r\n    try {\r\n      // 아이템 디렉토리 경로\r\n      const itemsDir = this.path.join(this.vaultDir, contextType, contextId);\r\n      \r\n      // 아이템 메타데이터 저장\r\n      const itemMetadata: any = { ...item };\r\n      const content = itemMetadata.content;\r\n      delete itemMetadata.content; // 내용은 별도 파일로 저장\r\n      \r\n      const itemFilePath = this.path.join(itemsDir, `${item.id}.item.json`);\r\n      this.fs.writeFileSync(itemFilePath, JSON.stringify(itemMetadata, null, 2), 'utf8');\r\n      \r\n      // 아이템 내용 저장\r\n      const contentFilePath = this.path.join(itemsDir, `${item.id}.content.md`);\r\n      this.fs.writeFileSync(contentFilePath, content, 'utf8');\r\n    } catch (error) {\r\n      console.error(`아이템 저장 오류 (${item.id}):`, error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모의 컨텍스트 데이터 로드\r\n   */\r\n  private loadMockContexts(): void {\r\n    this.contexts.clear();\r\n    \r\n    // 시스템 컨텍스트\r\n    const systemContext: VaultContext = {\r\n      id: 'system-context',\r\n      name: '시스템 컨텍스트',\r\n      description: '시스템 기본 컨텍스트입니다.',\r\n      type: VaultContextType.System,\r\n      createdAt: new Date('2023-01-01'),\r\n      updatedAt: new Date('2023-01-01'),\r\n      items: [\r\n        {\r\n          id: 'system-item-1',\r\n          name: '기본 시스템 프롬프트',\r\n          description: '표준 시스템 프롬프트입니다.',\r\n          content: 'You are an AI assistant. Answer questions concisely and accurately.',\r\n          createdAt: new Date('2023-01-01'),\r\n          updatedAt: new Date('2023-01-01'),\r\n          contextType: VaultContextType.System,\r\n          contextId: 'system-context',\r\n          tags: ['system', 'default', 'prompt']\r\n        },\r\n        {\r\n          id: 'system-item-2',\r\n          name: '코드 리뷰 프롬프트',\r\n          description: '코드 리뷰용 시스템 프롬프트입니다.',\r\n          content: 'You are a code review assistant. Analyze the provided code and give feedback.',\r\n          createdAt: new Date('2023-01-02'),\r\n          updatedAt: new Date('2023-01-02'),\r\n          contextType: VaultContextType.System,\r\n          contextId: 'system-context',\r\n          tags: ['system', 'code-review', 'prompt']\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 프로젝트 컨텍스트\r\n    const projectContext: VaultContext = {\r\n      id: 'project-context',\r\n      name: 'APE 프로젝트 컨텍스트',\r\n      description: 'APE 프로젝트 관련 컨텍스트입니다.',\r\n      type: VaultContextType.Project,\r\n      createdAt: new Date('2023-02-01'),\r\n      updatedAt: new Date('2023-02-01'),\r\n      items: [\r\n        {\r\n          id: 'project-item-1',\r\n          name: '프로젝트 아키텍처',\r\n          description: 'APE 프로젝트 아키텍처 설명입니다.',\r\n          content: 'APE 프로젝트는 다음과 같은 구조로 이루어져 있습니다. Core 모듈, UI 모듈, 서비스 모듈...',\r\n          createdAt: new Date('2023-02-01'),\r\n          updatedAt: new Date('2023-02-01'),\r\n          contextType: VaultContextType.Project,\r\n          contextId: 'project-context',\r\n          tags: ['project', 'architecture', 'documentation']\r\n        },\r\n        {\r\n          id: 'project-item-2',\r\n          name: '개발 가이드라인',\r\n          description: '프로젝트 개발 가이드라인입니다.',\r\n          content: '코드 작성 시 다음 가이드라인을 따라주세요. 1. 함수는 단일 책임을 가집니다...',\r\n          createdAt: new Date('2023-02-02'),\r\n          updatedAt: new Date('2023-02-02'),\r\n          contextType: VaultContextType.Project,\r\n          contextId: 'project-context',\r\n          tags: ['project', 'guidelines', 'development']\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 개인 컨텍스트\r\n    const personalContext: VaultContext = {\r\n      id: 'personal-context',\r\n      name: '개인 컨텍스트',\r\n      description: '개인적인 작업 맥락입니다.',\r\n      type: VaultContextType.Personal,\r\n      createdAt: new Date('2023-03-01'),\r\n      updatedAt: new Date('2023-03-01'),\r\n      items: [\r\n        {\r\n          id: 'personal-item-1',\r\n          name: '내 작업 메모',\r\n          description: '현재 작업 메모입니다.',\r\n          content: '트리뷰 기능 구현 중이며, 다음 단계로 컨텍스트 처리 기능 구현 예정...',\r\n          createdAt: new Date('2023-03-01'),\r\n          updatedAt: new Date('2023-03-01'),\r\n          contextType: VaultContextType.Personal,\r\n          contextId: 'personal-context',\r\n          tags: ['personal', 'memo', 'work']\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 공유 컨텍스트\r\n    const sharedContext: VaultContext = {\r\n      id: 'shared-context',\r\n      name: '팀 공유 컨텍스트',\r\n      description: '팀 간 공유되는 컨텍스트입니다.',\r\n      type: VaultContextType.Shared,\r\n      createdAt: new Date('2023-04-01'),\r\n      updatedAt: new Date('2023-04-01'),\r\n      items: [\r\n        {\r\n          id: 'shared-item-1',\r\n          name: '팀 회의록',\r\n          description: '최근 팀 회의록입니다.',\r\n          content: '날짜: 2023-04-01\\n참석자: ...\\n안건: 프로젝트 진행 상황 공유 및 이슈 논의...',\r\n          createdAt: new Date('2023-04-01'),\r\n          updatedAt: new Date('2023-04-01'),\r\n          contextType: VaultContextType.Shared,\r\n          contextId: 'shared-context',\r\n          tags: ['shared', 'meeting', 'team']\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 템플릿 컨텍스트\r\n    const templateContext: VaultContext = {\r\n      id: 'template-context',\r\n      name: '템플릿 컨텍스트',\r\n      description: '재사용 가능한 템플릿 모음입니다.',\r\n      type: VaultContextType.Template,\r\n      createdAt: new Date('2023-05-01'),\r\n      updatedAt: new Date('2023-05-01'),\r\n      items: [\r\n        {\r\n          id: 'template-item-1',\r\n          name: '코드 생성 템플릿',\r\n          description: '표준 코드 생성 템플릿입니다.',\r\n          content: '다음 템플릿을 사용하여 [기능명]을 구현하는 코드를 생성해주세요...',\r\n          createdAt: new Date('2023-05-01'),\r\n          updatedAt: new Date('2023-05-01'),\r\n          contextType: VaultContextType.Template,\r\n          contextId: 'template-context',\r\n          tags: ['template', 'code-generation']\r\n        },\r\n        {\r\n          id: 'template-item-2',\r\n          name: '문서 템플릿',\r\n          description: '기술 문서 템플릿입니다.',\r\n          content: '# [문서 제목]\\n\\n## 개요\\n\\n## 아키텍처\\n\\n## 기능 설명\\n\\n## 주의사항',\r\n          createdAt: new Date('2023-05-02'),\r\n          updatedAt: new Date('2023-05-02'),\r\n          contextType: VaultContextType.Template,\r\n          contextId: 'template-context',\r\n          tags: ['template', 'documentation']\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 컨텍스트 맵에 추가\r\n    this.contexts.set(systemContext.id, systemContext);\r\n    this.contexts.set(projectContext.id, projectContext);\r\n    this.contexts.set(personalContext.id, personalContext);\r\n    this.contexts.set(sharedContext.id, sharedContext);\r\n    this.contexts.set(templateContext.id, templateContext);\r\n  }\r\n  \r\n  /**\r\n   * 모든 컨텍스트 가져오기\r\n   */\r\n  public getAllContexts(): VaultContext[] {\r\n    return Array.from(this.contexts.values());\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트 타입별 컨텍스트 가져오기\r\n   * @param type 컨텍스트 타입\r\n   */\r\n  public getContextsByType(type: VaultContextType): VaultContext[] {\r\n    return Array.from(this.contexts.values()).filter(context => context.type === type);\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트 ID로 컨텍스트 가져오기\r\n   * @param contextId 컨텍스트 ID\r\n   */\r\n  public getContextById(contextId: string): VaultContext | undefined {\r\n    return this.contexts.get(contextId);\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트 생성\r\n   * @param name 컨텍스트 이름\r\n   * @param type 컨텍스트 타입\r\n   * @param description 설명 (선택)\r\n   */\r\n  public async createContext(\r\n    name: string,\r\n    type: VaultContextType,\r\n    description?: string\r\n  ): Promise<VaultContext> {\r\n    try {\r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (!config.enabled) {\r\n        throw new ServiceError('VAULT 서비스가 비활성화되어 있습니다.', 'vault-disabled');\r\n      }\r\n      \r\n      const newContext: VaultContext = {\r\n        id: `${type}-${Date.now()}`,\r\n        name,\r\n        description,\r\n        type,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        items: []\r\n      };\r\n      \r\n      if (!config.useMock) {\r\n        // 파일 시스템에 컨텍스트 저장\r\n        this.saveContextToFileSystem(newContext);\r\n      }\r\n      \r\n      // 컨텍스트 맵에 추가\r\n      this.contexts.set(newContext.id, newContext);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n      \r\n      return newContext;\r\n    } catch (error) {\r\n      console.error('VAULT 컨텍스트 생성 오류:', error);\r\n      throw new ServiceError(\r\n        `VAULT 컨텍스트 생성 중 오류가 발생했습니다: ${error}`,\r\n        'vault-context-creation-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트 업데이트\r\n   * @param contextId 컨텍스트 ID\r\n   * @param updates 업데이트할 필드\r\n   */\r\n  public async updateContext(\r\n    contextId: string,\r\n    updates: Partial<Pick<VaultContext, 'name' | 'description' | 'metadata'>>\r\n  ): Promise<VaultContext> {\r\n    try {\r\n      const context = this.contexts.get(contextId);\r\n      \r\n      if (!context) {\r\n        throw new ServiceError(`ID가 ${contextId}인 컨텍스트를 찾을 수 없습니다.`, 'vault-context-not-found');\r\n      }\r\n      \r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (!config.enabled) {\r\n        throw new ServiceError('VAULT 서비스가 비활성화되어 있습니다.', 'vault-disabled');\r\n      }\r\n      \r\n      // 컨텍스트 업데이트\r\n      const updatedContext: VaultContext = {\r\n        ...context,\r\n        ...updates,\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      if (!config.useMock) {\r\n        // 파일 시스템에 업데이트된 컨텍스트 저장\r\n        this.saveContextToFileSystem(updatedContext);\r\n      }\r\n      \r\n      // 컨텍스트 맵 업데이트\r\n      this.contexts.set(contextId, updatedContext);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n      \r\n      return updatedContext;\r\n    } catch (error) {\r\n      console.error('VAULT 컨텍스트 업데이트 오류:', error);\r\n      throw new ServiceError(\r\n        `VAULT 컨텍스트 업데이트 중 오류가 발생했습니다: ${error}`,\r\n        'vault-context-update-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트 삭제\r\n   * @param contextId 컨텍스트 ID\r\n   */\r\n  public async deleteContext(contextId: string): Promise<boolean> {\r\n    try {\r\n      const context = this.contexts.get(contextId);\r\n      \r\n      if (!context) {\r\n        throw new ServiceError(`ID가 ${contextId}인 컨텍스트를 찾을 수 없습니다.`, 'vault-context-not-found');\r\n      }\r\n      \r\n      // 시스템 컨텍스트는 삭제 불가\r\n      if (context.type === VaultContextType.System) {\r\n        throw new ServiceError('시스템 컨텍스트는 삭제할 수 없습니다.', 'vault-system-context-deletion-forbidden');\r\n      }\r\n      \r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (!config.enabled) {\r\n        throw new ServiceError('VAULT 서비스가 비활성화되어 있습니다.', 'vault-disabled');\r\n      }\r\n      \r\n      if (!config.useMock) {\r\n        // 파일 시스템에서 컨텍스트 삭제\r\n        this.deleteContextFromFileSystem(context);\r\n      }\r\n      \r\n      // 컨텍스트 맵에서 제거\r\n      this.contexts.delete(contextId);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('VAULT 컨텍스트 삭제 오류:', error);\r\n      throw new ServiceError(\r\n        `VAULT 컨텍스트 삭제 중 오류가 발생했습니다: ${error}`,\r\n        'vault-context-deletion-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 파일 시스템에서 컨텍스트 삭제\r\n   * @param context 삭제할 컨텍스트\r\n   */\r\n  private deleteContextFromFileSystem(context: VaultContext): void {\r\n    try {\r\n      // 컨텍스트 타입 디렉토리 경로\r\n      const typeDir = this.path.join(this.vaultDir, context.type);\r\n      \r\n      // 컨텍스트 메타데이터 파일 삭제\r\n      const contextFilePath = this.path.join(typeDir, `${context.id}.context.json`);\r\n      if (this.fs.existsSync(contextFilePath)) {\r\n        this.fs.unlinkSync(contextFilePath);\r\n      }\r\n      \r\n      // 컨텍스트 아이템 디렉토리 삭제 (재귀적으로)\r\n      const itemsDir = this.path.join(typeDir, context.id);\r\n      if (this.fs.existsSync(itemsDir)) {\r\n        this.deleteDirectoryRecursive(itemsDir);\r\n      }\r\n    } catch (error) {\r\n      console.error(`컨텍스트 파일 삭제 오류 (${context.id}):`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 디렉토리 재귀적 삭제\r\n   * @param dirPath 삭제할 디렉토리 경로\r\n   */\r\n  private deleteDirectoryRecursive(dirPath: string): void {\r\n    if (this.fs.existsSync(dirPath)) {\r\n      this.fs.readdirSync(dirPath).forEach((file: string) => {\r\n        const curPath = this.path.join(dirPath, file);\r\n        if (this.fs.lstatSync(curPath).isDirectory()) {\r\n          // 재귀적 호출로 하위 디렉토리 삭제\r\n          this.deleteDirectoryRecursive(curPath);\r\n        } else {\r\n          // 파일 삭제\r\n          this.fs.unlinkSync(curPath);\r\n        }\r\n      });\r\n      \r\n      // 디렉토리 자체 삭제\r\n      this.fs.rmdirSync(dirPath);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 아이템 생성\r\n   * @param contextId 컨텍스트 ID\r\n   * @param item 아이템 정보\r\n   */\r\n  public async createItem(\r\n    contextId: string,\r\n    item: Omit<VaultItem, 'id' | 'createdAt' | 'updatedAt' | 'contextId'>\r\n  ): Promise<VaultItem> {\r\n    try {\r\n      const context = this.contexts.get(contextId);\r\n      \r\n      if (!context) {\r\n        throw new ServiceError(`ID가 ${contextId}인 컨텍스트를 찾을 수 없습니다.`, 'vault-context-not-found');\r\n      }\r\n      \r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (!config.enabled) {\r\n        throw new ServiceError('VAULT 서비스가 비활성화되어 있습니다.', 'vault-disabled');\r\n      }\r\n      \r\n      const newItem: VaultItem = {\r\n        ...item,\r\n        id: `${contextId}-item-${Date.now()}`,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        contextId: contextId\r\n      };\r\n      \r\n      if (!config.useMock) {\r\n        // 파일 시스템에 아이템 저장\r\n        this.saveItemToFileSystem(newItem, contextId, context.type);\r\n      }\r\n      \r\n      // 컨텍스트 아이템 추가\r\n      context.items.push(newItem);\r\n      context.updatedAt = new Date();\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n      \r\n      return newItem;\r\n    } catch (error) {\r\n      console.error('VAULT 아이템 생성 오류:', error);\r\n      throw new ServiceError(\r\n        `VAULT 아이템 생성 중 오류가 발생했습니다: ${error}`,\r\n        'vault-item-creation-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 아이템 업데이트\r\n   * @param contextId 컨텍스트 ID\r\n   * @param itemId 아이템 ID\r\n   * @param updates 업데이트할 필드\r\n   */\r\n  public async updateItem(\r\n    contextId: string,\r\n    itemId: string,\r\n    updates: Partial<Pick<VaultItem, 'name' | 'description' | 'content' | 'tags' | 'metadata'>>\r\n  ): Promise<VaultItem> {\r\n    try {\r\n      const context = this.contexts.get(contextId);\r\n      \r\n      if (!context) {\r\n        throw new ServiceError(`ID가 ${contextId}인 컨텍스트를 찾을 수 없습니다.`, 'vault-context-not-found');\r\n      }\r\n      \r\n      const itemIndex = context.items.findIndex(item => item.id === itemId);\r\n      \r\n      if (itemIndex === -1) {\r\n        throw new ServiceError(`ID가 ${itemId}인 아이템을 찾을 수 없습니다.`, 'vault-item-not-found');\r\n      }\r\n      \r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (!config.enabled) {\r\n        throw new ServiceError('VAULT 서비스가 비활성화되어 있습니다.', 'vault-disabled');\r\n      }\r\n      \r\n      // 아이템 업데이트\r\n      const item = context.items[itemIndex];\r\n      const updatedItem: VaultItem = {\r\n        ...item,\r\n        ...updates,\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      if (!config.useMock) {\r\n        // 파일 시스템에 업데이트된 아이템 저장\r\n        this.saveItemToFileSystem(updatedItem, contextId, context.type);\r\n      }\r\n      \r\n      // 컨텍스트 아이템 업데이트\r\n      context.items[itemIndex] = updatedItem;\r\n      context.updatedAt = new Date();\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n      \r\n      return updatedItem;\r\n    } catch (error) {\r\n      console.error('VAULT 아이템 업데이트 오류:', error);\r\n      throw new ServiceError(\r\n        `VAULT 아이템 업데이트 중 오류가 발생했습니다: ${error}`,\r\n        'vault-item-update-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 아이템 삭제\r\n   * @param contextId 컨텍스트 ID\r\n   * @param itemId 아이템 ID\r\n   */\r\n  public async deleteItem(contextId: string, itemId: string): Promise<boolean> {\r\n    try {\r\n      const context = this.contexts.get(contextId);\r\n      \r\n      if (!context) {\r\n        throw new ServiceError(`ID가 ${contextId}인 컨텍스트를 찾을 수 없습니다.`, 'vault-context-not-found');\r\n      }\r\n      \r\n      const itemIndex = context.items.findIndex(item => item.id === itemId);\r\n      \r\n      if (itemIndex === -1) {\r\n        throw new ServiceError(`ID가 ${itemId}인 아이템을 찾을 수 없습니다.`, 'vault-item-not-found');\r\n      }\r\n      \r\n      const config = this.configManager.getServiceConfig(ServiceType.Vault);\r\n      \r\n      if (!config.enabled) {\r\n        throw new ServiceError('VAULT 서비스가 비활성화되어 있습니다.', 'vault-disabled');\r\n      }\r\n      \r\n      if (!config.useMock) {\r\n        // 파일 시스템에서 아이템 삭제\r\n        this.deleteItemFromFileSystem(context.items[itemIndex], contextId, context.type);\r\n      }\r\n      \r\n      // 컨텍스트 아이템 삭제\r\n      context.items.splice(itemIndex, 1);\r\n      context.updatedAt = new Date();\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeVault.fire();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('VAULT 아이템 삭제 오류:', error);\r\n      throw new ServiceError(\r\n        `VAULT 아이템 삭제 중 오류가 발생했습니다: ${error}`,\r\n        'vault-item-deletion-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 파일 시스템에서 아이템 삭제\r\n   * @param item 삭제할 아이템\r\n   * @param contextId 컨텍스트 ID\r\n   * @param contextType 컨텍스트 타입\r\n   */\r\n  private deleteItemFromFileSystem(item: VaultItem, contextId: string, contextType: VaultContextType): void {\r\n    try {\r\n      // 아이템 디렉토리 경로\r\n      const itemsDir = this.path.join(this.vaultDir, contextType, contextId);\r\n      \r\n      // 아이템 메타데이터 파일 삭제\r\n      const itemFilePath = this.path.join(itemsDir, `${item.id}.item.json`);\r\n      if (this.fs.existsSync(itemFilePath)) {\r\n        this.fs.unlinkSync(itemFilePath);\r\n      }\r\n      \r\n      // 아이템 내용 파일 삭제\r\n      const contentFilePath = this.path.join(itemsDir, `${item.id}.content.md`);\r\n      if (this.fs.existsSync(contentFilePath)) {\r\n        this.fs.unlinkSync(contentFilePath);\r\n      }\r\n    } catch (error) {\r\n      console.error(`아이템 파일 삭제 오류 (${item.id}):`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 아이템 검색\r\n   * @param query 검색어\r\n   * @param filters 필터 (컨텍스트 타입, 태그 등)\r\n   */\r\n  public searchItems(\r\n    query: string,\r\n    filters?: {\r\n      contextTypes?: VaultContextType[];\r\n      tags?: string[];\r\n      contextIds?: string[];\r\n    }\r\n  ): VaultItem[] {\r\n    const allContexts = this.getAllContexts();\r\n    let filteredContexts = allContexts;\r\n    \r\n    // 컨텍스트 타입 필터링\r\n    if (filters?.contextTypes && filters.contextTypes.length > 0) {\r\n      filteredContexts = filteredContexts.filter(context => \r\n        filters.contextTypes!.includes(context.type)\r\n      );\r\n    }\r\n    \r\n    // 컨텍스트 ID 필터링\r\n    if (filters?.contextIds && filters.contextIds.length > 0) {\r\n      filteredContexts = filteredContexts.filter(context => \r\n        filters.contextIds!.includes(context.id)\r\n      );\r\n    }\r\n    \r\n    // 모든 아이템 가져오기\r\n    let items = filteredContexts.flatMap(context => context.items);\r\n    \r\n    // 태그 필터링\r\n    if (filters?.tags && filters.tags.length > 0) {\r\n      items = items.filter(item => {\r\n        if (!item.tags) return false;\r\n        return filters.tags!.some(tag => item.tags!.includes(tag));\r\n      });\r\n    }\r\n    \r\n    // 검색어가 있는 경우 아이템 검색\r\n    if (query) {\r\n      const lowerQuery = query.toLowerCase();\r\n      items = items.filter(item => \r\n        item.name.toLowerCase().includes(lowerQuery) ||\r\n        (item.description && item.description.toLowerCase().includes(lowerQuery)) ||\r\n        item.content.toLowerCase().includes(lowerQuery) ||\r\n        (item.tags && item.tags.some(tag => tag.toLowerCase().includes(lowerQuery)))\r\n      );\r\n    }\r\n    \r\n    return items;\r\n  }\r\n  \r\n  /**\r\n   * 아이템을 LLM 컨텍스트로 변환\r\n   * @param item 아이템\r\n   */\r\n  public itemToLLMContext(item: VaultItem): string {\r\n    // 기본 형식: 아이템 내용 그대로 반환\r\n    return item.content;\r\n  }\r\n  \r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    this.disposables.forEach(d => d.dispose());\r\n    this.disposables = [];\r\n  }\r\n}","/**\r\n * VAULT 서비스와 LLM 서비스 통합 모듈\r\n * \r\n * VAULT 컨텍스트를 LLM 요청에 적용하는 기능을 제공합니다.\r\n */\r\n\r\nimport { LLMRequestOptions, Message, MessageRole } from '../../types/chat';\r\nimport { VaultService, VaultContextType, VaultItem } from '../services/vaultService';\r\n\r\n/**\r\n * VAULT 컨텍스트 적용 옵션\r\n */\r\nexport interface VaultContextOptions {\r\n  // 사용할 컨텍스트 ID 목록\r\n  contextIds?: string[];\r\n  \r\n  // 사용할 컨텍스트 유형 목록\r\n  contextTypes?: VaultContextType[];\r\n  \r\n  // 사용할 아이템 ID 목록\r\n  itemIds?: string[];\r\n  \r\n  // 아이템 태그 필터\r\n  tags?: string[];\r\n  \r\n  // 검색어 (아이템 콘텐츠 내 검색)\r\n  searchQuery?: string;\r\n  \r\n  // 결합 방식: 'prepend'(앞에 추가), 'append'(뒤에 추가), 'replace'(대체)\r\n  combinationMode?: 'prepend' | 'append' | 'replace';\r\n}\r\n\r\n/**\r\n * LLMRequestOptions를 확장하여 VAULT 옵션 추가\r\n */\r\nexport interface LLMRequestOptionsWithVault extends LLMRequestOptions {\r\n  vaultOptions?: VaultContextOptions;\r\n}\r\n\r\n/**\r\n * VAULT 컨텍스트를 LLM 요청에 적용\r\n * @param messages 원본 메시지 배열\r\n * @param vaultService VAULT 서비스 인스턴스\r\n * @param options VAULT 컨텍스트 적용 옵션\r\n * @returns VAULT 컨텍스트가 적용된 메시지 배열\r\n */\r\nexport function applyVaultContext(\r\n  messages: Message[],\r\n  vaultService: VaultService,\r\n  options: VaultContextOptions\r\n): Message[] {\r\n  if (!options) {\r\n    return messages;\r\n  }\r\n  \r\n  // 조건에 맞는 아이템 검색\r\n  const items = findRelevantVaultItems(vaultService, options);\r\n  \r\n  if (items.length === 0) {\r\n    return messages;\r\n  }\r\n  \r\n  // 컨텍스트 메시지 생성\r\n  const contextMessages = createContextMessages(items);\r\n  \r\n  // 결합 방식에 따라 메시지 배열 업데이트\r\n  return combineMessages(messages, contextMessages, options.combinationMode || 'prepend');\r\n}\r\n\r\n/**\r\n * 조건에 맞는 VAULT 아이템 찾기\r\n */\r\nfunction findRelevantVaultItems(\r\n  vaultService: VaultService,\r\n  options: VaultContextOptions\r\n): VaultItem[] {\r\n  let result: VaultItem[] = [];\r\n  \r\n  // 1. 아이템 ID로 직접 조회 (가장 우선순위 높음)\r\n  if (options.itemIds && options.itemIds.length > 0) {\r\n    const allContexts = vaultService.getAllContexts();\r\n    \r\n    for (const context of allContexts) {\r\n      const matchingItems = context.items.filter(item => \r\n        options.itemIds!.includes(item.id)\r\n      );\r\n      \r\n      result.push(...matchingItems);\r\n    }\r\n    \r\n    // 아이템 ID가 지정된 경우 다른 필터는 적용하지 않음\r\n    return result;\r\n  }\r\n  \r\n  // 2. 컨텍스트 ID로 해당 컨텍스트의 모든 아이템 조회\r\n  if (options.contextIds && options.contextIds.length > 0) {\r\n    for (const contextId of options.contextIds) {\r\n      const context = vaultService.getContextById(contextId);\r\n      if (context) {\r\n        result.push(...context.items);\r\n      }\r\n    }\r\n    \r\n    // 여기서 바로 반환하지 않고 아래 필터를 추가로 적용\r\n  }\r\n  \r\n  // 3. 컨텍스트 유형으로 조회 (contextIds가 없는 경우)\r\n  if ((!options.contextIds || options.contextIds.length === 0) && \r\n      options.contextTypes && options.contextTypes.length > 0) {\r\n    for (const contextType of options.contextTypes) {\r\n      const contexts = vaultService.getContextsByType(contextType);\r\n      for (const context of contexts) {\r\n        result.push(...context.items);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // 4. 아무 컨텍스트도 지정되지 않은 경우, 검색어나 태그가 있으면 전체 검색\r\n  if ((!options.contextIds || options.contextIds.length === 0) && \r\n      (!options.contextTypes || options.contextTypes.length === 0) &&\r\n      (options.searchQuery || (options.tags && options.tags.length > 0))) {\r\n    result = vaultService.searchItems(\r\n      options.searchQuery || '', \r\n      { tags: options.tags }\r\n    );\r\n  }\r\n  \r\n  // 추가 필터: 태그로 필터링 (이미 다른 기준으로 필터된 아이템들에 대해)\r\n  if (options.tags && options.tags.length > 0) {\r\n    result = result.filter(item => {\r\n      if (!item.tags) return false;\r\n      return options.tags!.some(tag => item.tags!.includes(tag));\r\n    });\r\n  }\r\n  \r\n  // 추가 필터: 검색어로 필터링 (이미 다른 기준으로 필터된 아이템들에 대해)\r\n  if (options.searchQuery) {\r\n    const query = options.searchQuery.toLowerCase();\r\n    result = result.filter(item => \r\n      item.name.toLowerCase().includes(query) ||\r\n      (item.description && item.description.toLowerCase().includes(query)) ||\r\n      item.content.toLowerCase().includes(query) ||\r\n      (item.tags && item.tags.some(tag => tag.toLowerCase().includes(query)))\r\n    );\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * VAULT 아이템들로부터 컨텍스트 메시지 생성\r\n */\r\nfunction createContextMessages(items: VaultItem[]): Message[] {\r\n  const contextMessages: Message[] = [];\r\n  \r\n  // 각 아이템마다 메시지 생성\r\n  for (const item of items) {\r\n    // 아이템의 컨텍스트 유형에 따라 적절한 역할 지정\r\n    let role = MessageRole.System;\r\n    \r\n    if (item.contextType === VaultContextType.Personal ||\r\n        item.contextType === VaultContextType.Project ||\r\n        item.contextType === VaultContextType.Shared) {\r\n      role = MessageRole.User;\r\n    }\r\n    \r\n    contextMessages.push({\r\n      id: `vault_${item.id}_${Date.now()}`,\r\n      role,\r\n      content: formatItemContent(item),\r\n      timestamp: new Date(),\r\n      metadata: {\r\n        isVaultContext: true,\r\n        vaultItemId: item.id,\r\n        vaultContextType: item.contextType,\r\n        vaultTags: item.tags\r\n      }\r\n    });\r\n  }\r\n  \r\n  return contextMessages;\r\n}\r\n\r\n/**\r\n * VAULT 아이템 콘텐츠 포맷팅\r\n */\r\nfunction formatItemContent(item: VaultItem): string {\r\n  // 기본적으로 콘텐츠를 그대로 사용\r\n  let content = item.content;\r\n  \r\n  // 아이템 유형에 따라 특별한 포맷팅 적용\r\n  if (item.contextType === VaultContextType.System) {\r\n    // 시스템 프롬프트로 사용\r\n    return content;\r\n  } else if (item.contextType === VaultContextType.Template) {\r\n    // 템플릿은 그대로 사용\r\n    return content;\r\n  } else {\r\n    // 다른 유형들은 메타데이터 추가\r\n    const header = `VAULT 컨텍스트: ${item.name}\\n`;\r\n    const tags = item.tags?.length ? `태그: ${item.tags.join(', ')}\\n` : '';\r\n    return `${header}${tags}${content}`;\r\n  }\r\n}\r\n\r\n/**\r\n * 원본 메시지와 컨텍스트 메시지 결합\r\n */\r\nfunction combineMessages(\r\n  originalMessages: Message[],\r\n  contextMessages: Message[],\r\n  mode: 'prepend' | 'append' | 'replace'\r\n): Message[] {\r\n  if (mode === 'replace') {\r\n    return contextMessages;\r\n  } else if (mode === 'append') {\r\n    return [...originalMessages, ...contextMessages];\r\n  } else { // prepend (기본값)\r\n    return [...contextMessages, ...originalMessages];\r\n  }\r\n}","/**\r\n * Rules 통합 모듈\r\n * \r\n * LLM 서비스에 Rules 기능을 통합하는 모듈입니다.\r\n * LLM 요청 시 Rules 시스템 프롬프트를 적용합니다.\r\n */\r\n\r\nimport { Message, MessageRole, LLMRequestOptions } from '../../types/chat';\r\nimport { RulesService } from '../services/rulesService';\r\n\r\n/**\r\n * Rules 옵션 인터페이스\r\n */\r\nexport interface LLMRequestOptionsWithRules extends LLMRequestOptions {\r\n  rulesOptions?: {\r\n    includeRules?: boolean;   // Rules 포함 여부 (기본값: true)\r\n  };\r\n}\r\n\r\n/**\r\n * Rules 시스템 프롬프트를 메시지에 적용\r\n * @param messages 메시지 배열\r\n * @param rulesService Rules 서비스\r\n * @param options Rules 옵션\r\n * @returns Rules가 적용된 메시지 배열\r\n */\r\nexport function applyRulesContext(\r\n  messages: Message[],\r\n  rulesService: RulesService,\r\n  options?: LLMRequestOptionsWithRules['rulesOptions']\r\n): Message[] {\r\n  // Rules 옵션이 명시적으로 false가 아니면 Rules 적용\r\n  const includeRules = options?.includeRules !== false;\r\n  \r\n  if (!includeRules || !rulesService) {\r\n    return messages;\r\n  }\r\n  \r\n  try {\r\n    // 활성화된 Rules가 있는지 확인\r\n    const activeRules = rulesService.getActiveRules();\r\n    if (activeRules.length === 0) {\r\n      return messages;\r\n    }\r\n    \r\n    // Rules 시스템 프롬프트 생성\r\n    const rulesPrompt = rulesService.getRulesAsSystemPrompt();\r\n    if (!rulesPrompt) {\r\n      return messages;\r\n    }\r\n    \r\n    // 기존 시스템 메시지가 있는지 확인\r\n    const systemMessageIndex = messages.findIndex(msg => msg.role === MessageRole.System);\r\n    \r\n    if (systemMessageIndex >= 0) {\r\n      // 기존 시스템 메시지가 있으면 Rules 프롬프트를 추가\r\n      const updatedMessages = [...messages];\r\n      const existingSystemMessage = updatedMessages[systemMessageIndex];\r\n      \r\n      updatedMessages[systemMessageIndex] = {\r\n        ...existingSystemMessage,\r\n        content: `${rulesPrompt}\\n\\n${existingSystemMessage.content}`\r\n      };\r\n      \r\n      return updatedMessages;\r\n    } else {\r\n      // 시스템 메시지가 없으면 새 시스템 메시지를 추가\r\n      return [\r\n        {\r\n          id: `system_rules_${Date.now()}`,\r\n          role: MessageRole.System,\r\n          content: rulesPrompt,\r\n          timestamp: new Date()\r\n        },\r\n        ...messages\r\n      ];\r\n    }\r\n  } catch (error) {\r\n    console.error('Rules 적용 중 오류 발생:', error);\r\n    return messages;\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { WebSocket } from 'ws';\r\nimport { \r\n  Message, \r\n  MessageRole, \r\n  LLMRequest, \r\n  LLMResponse, \r\n  LLMRequestOptions,\r\n  StreamCallback,\r\n  LLMModel\r\n} from '../../types/chat';\r\nimport { ModelManager } from './modelManager';\r\nimport { VaultService } from '../services/vaultService';\r\nimport { RulesService } from '../services/rulesService';\r\nimport { \r\n  LLMRequestOptionsWithVault, \r\n  VaultContextOptions, \r\n  applyVaultContext \r\n} from './vaultIntegration';\r\nimport {\r\n  LLMRequestOptionsWithRules,\r\n  applyRulesContext\r\n} from './rulesIntegration';\r\n\r\n// Define constants for WebSocket states\r\nconst WS_OPEN = 1;\r\n\r\n/**\r\n * LLM connection type\r\n */\r\nexport enum ConnectionType {\r\n  HTTP = 'http',\r\n  WebSocket = 'websocket'\r\n}\r\n\r\n/**\r\n * Result of an LLM operation including status and optional error\r\n */\r\nexport interface LLMResult<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: Error;\r\n}\r\n\r\n/**\r\n * Service for interacting with LLM APIs\r\n */\r\nexport class LLMService implements vscode.Disposable {\r\n  private _endpoint: string;\r\n  private _connectionType: ConnectionType;\r\n  private _wsConnection: WebSocket | null = null;\r\n  private _cancelTokenSource: CancelTokenSource | null = null;\r\n  private _configListener: vscode.Disposable;\r\n  private _modelChangeListener: vscode.Disposable;\r\n  \r\n  /**\r\n   * Creates a new LLMService instance\r\n   * @param _context The VSCode extension context\r\n   * @param _modelManager The model manager service\r\n   */\r\n  private _vaultService: VaultService | null = null;\r\n  private _rulesService: RulesService | null = null;\r\n  \r\n  /**\r\n   * 생성자\r\n   * @param _context VSCode 확장 컨텍스트\r\n   * @param _modelManager 모델 관리자\r\n   */\r\n  constructor(\r\n    private readonly _context: vscode.ExtensionContext,\r\n    private readonly _modelManager: ModelManager\r\n  ) {\r\n    // Initialize properties\r\n    this._endpoint = '';\r\n    this._connectionType = ConnectionType.HTTP;\r\n    \r\n    console.log('LLMService 초기화 시작...');\r\n    \r\n    // Load configuration\r\n    this._loadConfiguration();\r\n    \r\n    // Listen for configuration changes\r\n    this._configListener = vscode.workspace.onDidChangeConfiguration(event => {\r\n      if (event.affectsConfiguration('ape.llm') && \r\n          !event.affectsConfiguration('ape.llm.defaultModel')) { // Only handle non-model configs\r\n        console.log('LLM 설정 변경 감지:', event);\r\n        this._loadConfiguration();\r\n      }\r\n    });\r\n    \r\n    // Listen for model changes from ModelManager\r\n    this._modelChangeListener = this._modelManager.onDidChangeModel(event => {\r\n      console.log(`모델 변경 감지: ${event.oldModel} -> ${event.newModel}`);\r\n      // No need to update internal state as we'll always use modelManager.getActiveModel()\r\n    });\r\n    \r\n    console.log('LLMService 초기화 완료, 기본 모델:', this.getActiveModel());\r\n  }\r\n  \r\n  /**\r\n   * VAULT 서비스 설정\r\n   * @param vaultService VAULT 서비스 인스턴스\r\n   */\r\n  public setVaultService(vaultService: VaultService): void {\r\n    this._vaultService = vaultService;\r\n  }\r\n  \r\n  /**\r\n   * Rules 서비스 설정\r\n   * @param rulesService Rules 서비스 인스턴스\r\n   */\r\n  public setRulesService(rulesService: RulesService): void {\r\n    this._rulesService = rulesService;\r\n  }\r\n  \r\n  /**\r\n   * Reloads configuration from VSCode settings\r\n   */\r\n  private _apiKey = '';\r\n  \r\n  private _loadConfiguration(): void {\r\n    const config = vscode.workspace.getConfiguration('ape.llm');\r\n    const newEndpoint = config.get('endpoint', 'https://openrouter.ai/api/v1/chat/completions');\r\n    const newApiKey = config.get('apiKey', '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');\r\n    \r\n    // Only update endpoint and API key if changed\r\n    if (this._endpoint !== newEndpoint) {\r\n      this._endpoint = newEndpoint;\r\n    }\r\n    \r\n    if (this._apiKey !== newApiKey) {\r\n      this._apiKey = newApiKey;\r\n    }\r\n    \r\n    // Update connection type\r\n    const newConnectionType = this._endpoint && this._endpoint.startsWith('ws') \r\n      ? ConnectionType.WebSocket \r\n      : ConnectionType.HTTP;\r\n    \r\n    if (this._connectionType !== newConnectionType) {\r\n      this._connectionType = newConnectionType;\r\n      \r\n      // Handle WebSocket connection changes\r\n      if (this._connectionType === ConnectionType.WebSocket && this._wsConnection) {\r\n        this._wsConnection.close();\r\n        this._wsConnection = null;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets the currently active LLM model\r\n   * @returns The active LLM model\r\n   */\r\n  public getActiveModel(): LLMModel {\r\n    return this._modelManager.getActiveModel();\r\n  }\r\n  \r\n  /**\r\n   * Changes the active LLM model\r\n   * @param model The model to switch to\r\n   */\r\n  public async setActiveModel(model: LLMModel): Promise<boolean> {\r\n    return this._modelManager.setActiveModel(model);\r\n  }\r\n  \r\n  /**\r\n   * Gets all available LLM models\r\n   * @returns Array of available LLM models\r\n   */\r\n  public getAvailableModels(): LLMModel[] {\r\n    return this._modelManager.getAvailableModels();\r\n  }\r\n  \r\n  /**\r\n   * Gets a user-friendly display name for a model\r\n   * @param modelId The model ID\r\n   * @returns A formatted display name\r\n   */\r\n  public getModelDisplayName(modelId: string): string {\r\n    return this._modelManager.getModelDisplayName(modelId);\r\n  }\r\n  \r\n  /**\r\n   * Sends a request to the LLM and gets a response\r\n   * @param messages Messages to send\r\n   * @param options Request options\r\n   * @returns Promise that resolves to LLMResult containing the LLM response\r\n   */\r\n  public async sendRequest(\r\n    messages: Message[],\r\n    options?: LLMRequestOptions\r\n  ): Promise<LLMResult<LLMResponse>> {\r\n    try {\r\n      // 모델 지정 (디버깅 목적으로 사용됩니다)\r\n      // options?.model || this.getActiveModel();\r\n      \r\n      if (this._connectionType === ConnectionType.WebSocket) {\r\n        const response = await this._sendWebSocketRequest(messages, options);\r\n        return { success: true, data: response };\r\n      } else {\r\n        const response = await this._sendHttpRequest(messages, options);\r\n        return { success: true, data: response };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending LLM request:', error);\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error \r\n          ? error\r\n          : new Error(`Failed to communicate with LLM service: ${String(error)}`)\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Streams a response from the LLM\r\n   * @param messages Messages to send\r\n   * @param streamCallback Callback for streaming chunks and completion\r\n   * @param options Request options\r\n   * @returns Promise that resolves to LLMResult indicating streaming success or failure\r\n   */\r\n  public async streamResponse(\r\n    messages: Message[],\r\n    streamCallback: StreamCallback,\r\n    options?: LLMRequestOptions\r\n  ): Promise<LLMResult<void>> {\r\n    try {\r\n      // 모델 지정 (디버깅 목적으로 사용됩니다)\r\n      // options?.model || this.getActiveModel();\r\n      \r\n      if (this._connectionType === ConnectionType.WebSocket) {\r\n        await this._streamWebSocketResponse(messages, streamCallback, options);\r\n        return { success: true };\r\n      } else {\r\n        await this._streamHttpResponse(messages, streamCallback, options);\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error streaming LLM response:', error);\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error \r\n          ? error\r\n          : new Error(`Failed to stream from LLM service: ${String(error)}`)\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Cancels an ongoing streaming response\r\n   */\r\n  public cancelStream(): void {\r\n    if (this._connectionType === ConnectionType.HTTP && this._cancelTokenSource) {\r\n      this._cancelTokenSource.cancel('Operation canceled by user');\r\n      this._cancelTokenSource = null;\r\n    } else if (this._connectionType === ConnectionType.WebSocket && this._wsConnection) {\r\n      // Send cancel message if supported\r\n      this._wsConnection.send(JSON.stringify({ type: 'cancel' }));\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * HTTP implementation of sendRequest\r\n   * @param messages Messages to send\r\n   * @param options Request options\r\n   * @returns Promise that resolves to the LLM response\r\n   */\r\n  private async _sendHttpRequest(\r\n    messages: Message[],\r\n    options?: LLMRequestOptions\r\n  ): Promise<LLMResponse> {\r\n    const formattedMessages = this._formatMessagesForAPI(messages, options);\r\n    \r\n    // OpenRouter API 요청 형식으로 변환\r\n    const openRouterMessages = formattedMessages.map(msg => ({\r\n      role: msg.role,\r\n      content: msg.content\r\n    }));\r\n    \r\n    const request = {\r\n      model: options?.model || this.getActiveModel(),\r\n      messages: openRouterMessages,\r\n      temperature: options?.temperature || 0.7,\r\n      max_tokens: options?.maxTokens || 1000,\r\n      stream: false\r\n    };\r\n    \r\n    // OpenRouter API 요청에 필요한 헤더 추가\r\n    const headers: any = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this._apiKey}`,\r\n      'HTTP-Referer': 'APE-Extension',\r\n      'X-Title': 'APE (Agentic Pipeline Engine)'\r\n    };\r\n    \r\n    console.log(\"LLM 요청:\", JSON.stringify(request, null, 2));\r\n    const response = await axios.post(this._endpoint, request, { headers });\r\n    console.log(\"LLM 응답:\", JSON.stringify(response.data, null, 2));\r\n    \r\n    return this._processHttpResponse(response.data);\r\n  }\r\n  \r\n  /**\r\n   * WebSocket implementation of sendRequest\r\n   * @param messages Messages to send\r\n   * @param options Request options\r\n   * @returns Promise that resolves to the LLM response\r\n   */\r\n  private async _sendWebSocketRequest(\r\n    messages: Message[],\r\n    options?: LLMRequestOptions\r\n  ): Promise<LLMResponse> {\r\n    return new Promise((resolve, reject) => {\r\n      this._ensureWebSocketConnection();\r\n      \r\n      if (!this._wsConnection) {\r\n        reject(new Error('Failed to establish WebSocket connection'));\r\n        return;\r\n      }\r\n      \r\n      const formattedMessages = this._formatMessagesForAPI(messages, options);\r\n      \r\n      const request: LLMRequest = {\r\n        messages: formattedMessages,\r\n        model: options?.model || this.getActiveModel(),\r\n        temperature: options?.temperature,\r\n        maxTokens: options?.maxTokens,\r\n        stream: false,\r\n        parameters: options?.modelParameters\r\n      };\r\n      \r\n      // Generate a unique request ID\r\n      const requestId = `req_${Date.now()}`;\r\n      \r\n      // Set up one-time message handler for this request\r\n      const messageHandler = (data: any) => {\r\n        try {\r\n          const dataStr = data.toString();\r\n          const response = JSON.parse(dataStr);\r\n          \r\n          // Check if this is the response to our request\r\n          if (response.requestId === requestId) {\r\n            // Remove the listener once we get our response\r\n            if (this._wsConnection) {\r\n              this._wsConnection.removeListener('message', messageHandler);\r\n            }\r\n            \r\n            if (response.error) {\r\n              reject(new Error(response.error));\r\n            } else {\r\n              resolve(this._processWebSocketResponse(response));\r\n            }\r\n          }\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      };\r\n      \r\n      // Add the message handler\r\n      this._wsConnection.on('message', messageHandler);\r\n      \r\n      // Send the request with the request ID\r\n      this._wsConnection.send(JSON.stringify({\r\n        ...request,\r\n        requestId\r\n      }));\r\n      \r\n      // Set a timeout in case of no response\r\n      const timeoutId = setTimeout(() => {\r\n        if (this._wsConnection) {\r\n          this._wsConnection.removeListener('message', messageHandler);\r\n        }\r\n        reject(new Error('Request timed out'));\r\n      }, 30000); // 30 seconds timeout\r\n      \r\n      // Also set up an error handler\r\n      const errorHandler = (error: Error) => {\r\n        clearTimeout(timeoutId);\r\n        this._wsConnection?.removeListener('message', messageHandler);\r\n        this._wsConnection?.removeListener('error', errorHandler);\r\n        reject(error);\r\n      };\r\n      \r\n      this._wsConnection.on('error', errorHandler);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * HTTP implementation of streamResponse\r\n   * @param messages Messages to send\r\n   * @param streamCallback Callback for streaming chunks and completion\r\n   * @param options Request options\r\n   */\r\n  private async _streamHttpResponse(\r\n    messages: Message[],\r\n    streamCallback: StreamCallback,\r\n    options?: LLMRequestOptions\r\n  ): Promise<void> {\r\n    const formattedMessages = this._formatMessagesForAPI(messages, options);\r\n    \r\n    // OpenRouter API 요청 형식으로 변환\r\n    const openRouterMessages = formattedMessages.map(msg => ({\r\n      role: msg.role,\r\n      content: msg.content\r\n    }));\r\n    \r\n    const request = {\r\n      model: options?.model || this.getActiveModel(),\r\n      messages: openRouterMessages,\r\n      temperature: options?.temperature || 0.7,\r\n      max_tokens: options?.maxTokens || 1000,\r\n      stream: true\r\n    };\r\n    \r\n    // OpenRouter API 요청에 필요한 헤더 추가\r\n    const headers: any = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this._apiKey}`,\r\n      'HTTP-Referer': 'APE-Extension',\r\n      'X-Title': 'APE (Agentic Pipeline Engine)'\r\n    };\r\n    \r\n    // Create a cancellation token\r\n    this._cancelTokenSource = axios.CancelToken.source();\r\n    \r\n    try {\r\n      // 누적 텍스트는 디버깅 목적으로 사용될 수 있음\r\n      \r\n      const response = await axios.post(this._endpoint, request, {\r\n        responseType: 'stream',\r\n        cancelToken: this._cancelTokenSource.token,\r\n        headers: headers\r\n      });\r\n      \r\n      response.data.on('data', (chunk: Buffer) => {\r\n        const lines = chunk.toString().split('\\n').filter(Boolean);\r\n        \r\n        for (const line of lines) {\r\n          if (line.startsWith('data: ')) {\r\n            const data = line.substring('data: '.length);\r\n            if (data === '[DONE]') {\r\n              streamCallback('', true); // 스트림 완료 신호\r\n            } else {\r\n              try {\r\n                const parsed = JSON.parse(data);\r\n                if (parsed.choices && parsed.choices.length > 0) {\r\n                  const content = parsed.choices[0].delta?.content || \r\n                                 parsed.choices[0].message?.content || '';\r\n                  if (content) {\r\n                    streamCallback(content, false);\r\n                  }\r\n                }\r\n              } catch (err) {\r\n                console.error('Stream parsing error:', err);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      response.data.on('end', () => {\r\n        this._cancelTokenSource = null;\r\n        streamCallback('', true); // 스트림 완료 신호\r\n      });\r\n      \r\n      response.data.on('error', (err: Error) => {\r\n        this._cancelTokenSource = null;\r\n        console.error('Stream error:', err);\r\n        streamCallback('', true);\r\n      });\r\n    } catch (error) {\r\n      this._cancelTokenSource = null;\r\n      if (axios.isCancel(error)) {\r\n        // Request was canceled intentionally\r\n        streamCallback('', true); // Signal completion with empty chunk and done=true\r\n      } else {\r\n        // Real error\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * WebSocket implementation of streamResponse\r\n   * @param messages Messages to send\r\n   * @param streamCallback Callback for streaming chunks and completion\r\n   * @param options Request options\r\n   */\r\n  private async _streamWebSocketResponse(\r\n    messages: Message[],\r\n    streamCallback: StreamCallback,\r\n    options?: LLMRequestOptions\r\n  ): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this._ensureWebSocketConnection();\r\n      \r\n      if (!this._wsConnection) {\r\n        reject(new Error('Failed to establish WebSocket connection'));\r\n        return;\r\n      }\r\n      \r\n      const formattedMessages = this._formatMessagesForAPI(messages, options);\r\n      \r\n      const request: LLMRequest = {\r\n        messages: formattedMessages,\r\n        model: options?.model || this.getActiveModel(),\r\n        temperature: options?.temperature,\r\n        maxTokens: options?.maxTokens,\r\n        stream: true,\r\n        parameters: options?.modelParameters\r\n      };\r\n      \r\n      // Generate a unique request ID\r\n      const requestId = `req_${Date.now()}`;\r\n      \r\n      // Set up message handler for streaming\r\n      const messageHandler = (data: any) => {\r\n        try {\r\n          const dataStr = data.toString();\r\n          const response = JSON.parse(dataStr);\r\n          \r\n          // Check if this is a response to our request\r\n          if (response.requestId === requestId) {\r\n            if (response.error) {\r\n              // Error response\r\n              if (this._wsConnection) {\r\n                this._wsConnection.removeListener('message', messageHandler);\r\n              }\r\n              reject(new Error(response.error));\r\n            } else if (response.type === 'chunk') {\r\n              // Streaming chunk\r\n              streamCallback(response.content || '', false);\r\n            } else if (response.type === 'complete') {\r\n              // Stream complete\r\n              if (this._wsConnection) {\r\n                this._wsConnection.removeListener('message', messageHandler);\r\n              }\r\n              streamCallback('', true); // Signal completion\r\n              resolve();\r\n            }\r\n          }\r\n        } catch (error) {\r\n          if (this._wsConnection) {\r\n            this._wsConnection.removeListener('message', messageHandler);\r\n          }\r\n          reject(error);\r\n        }\r\n      };\r\n      \r\n      // Add the message handler\r\n      this._wsConnection.on('message', messageHandler);\r\n      \r\n      // Send the streaming request\r\n      this._wsConnection.send(JSON.stringify({\r\n        ...request,\r\n        requestId\r\n      }));\r\n      \r\n      // Set a timeout for the entire streaming session\r\n      const timeoutId = setTimeout(() => {\r\n        if (this._wsConnection) {\r\n          this._wsConnection.removeListener('message', messageHandler);\r\n        }\r\n        reject(new Error('Streaming request timed out'));\r\n      }, 300000); // 5 minutes timeout for streaming\r\n      \r\n      // Also set up an error handler\r\n      const errorHandler = (error: Error) => {\r\n        clearTimeout(timeoutId);\r\n        this._wsConnection?.removeListener('message', messageHandler);\r\n        this._wsConnection?.removeListener('error', errorHandler);\r\n        reject(error);\r\n      };\r\n      \r\n      this._wsConnection.on('error', errorHandler);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Ensures a WebSocket connection is established\r\n   */\r\n  private _ensureWebSocketConnection(): void {\r\n    if (this._connectionType !== ConnectionType.WebSocket) {\r\n      return;\r\n    }\r\n    \r\n    if (!this._wsConnection || this._wsConnection.readyState !== WS_OPEN) {\r\n      try {\r\n        // Create a new WebSocket connection\r\n        this._wsConnection = new WebSocket(this._endpoint);\r\n        \r\n        // Set up event handlers\r\n        if (this._wsConnection) {\r\n          this._wsConnection.on('error', (error) => {\r\n            console.error('WebSocket error:', error);\r\n            this._wsConnection = null;\r\n          });\r\n          \r\n          this._wsConnection.on('close', () => {\r\n            this._wsConnection = null;\r\n          });\r\n          \r\n          // Wait for connection to be established\r\n          this._wsConnection.on('open', () => {\r\n            console.log('WebSocket connection established');\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to create WebSocket connection:', error);\r\n        this._wsConnection = null;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Formats messages for the API\r\n   * @param messages Messages to format\r\n   * @param options Optional request options\r\n   * @returns Formatted messages array\r\n   */\r\n  private _formatMessagesForAPI(messages: Message[], options?: LLMRequestOptions): Message[] {\r\n    let formattedMessages: Message[] = [...messages];\r\n    \r\n    // Add system prompt as a system message if provided\r\n    if (options?.systemPrompt) {\r\n      formattedMessages.unshift({\r\n        id: `system_${Date.now()}`,\r\n        role: MessageRole.System,\r\n        content: options.systemPrompt,\r\n        timestamp: new Date()\r\n      });\r\n    }\r\n    \r\n    // Add context messages if provided\r\n    if (options?.contextMessages && options.contextMessages.length > 0) {\r\n      formattedMessages = [...options.contextMessages, ...formattedMessages];\r\n    }\r\n    \r\n    // Apply VAULT context if available and requested\r\n    if (this._vaultService && (options as LLMRequestOptionsWithVault)?.vaultOptions) {\r\n      const vaultOptions = (options as LLMRequestOptionsWithVault).vaultOptions;\r\n      // vaultOptions가 undefined일 수 없지만 타입 에러를 해결하기 위해 기본 객체 제공\r\n      formattedMessages = applyVaultContext(formattedMessages, this._vaultService, vaultOptions || {});\r\n    }\r\n    \r\n    // Apply Rules if available\r\n    if (this._rulesService) {\r\n      const rulesOptions = (options as LLMRequestOptionsWithRules)?.rulesOptions;\r\n      formattedMessages = applyRulesContext(formattedMessages, this._rulesService, rulesOptions);\r\n    }\r\n    \r\n    // Return formatted messages\r\n    return formattedMessages;\r\n  }\r\n  \r\n  /**\r\n   * Processes an HTTP API response\r\n   * @param responseData Raw response data\r\n   * @returns Processed LLM response\r\n   */\r\n  private _processHttpResponse(responseData: any): LLMResponse {\r\n    // OpenRouter/OpenAI 형식 응답 처리 (choices 배열 사용)\r\n    if (responseData.choices && Array.isArray(responseData.choices)) {\r\n      const content = responseData.choices[0]?.message?.content || '';\r\n      \r\n      return {\r\n        message: {\r\n          id: responseData.id || `msg_${Date.now()}`,\r\n          role: MessageRole.Assistant,\r\n          content: content,\r\n          timestamp: new Date(),\r\n          metadata: {\r\n            model: responseData.model || this.getActiveModel()\r\n          }\r\n        },\r\n        usage: responseData.usage || {\r\n          promptTokens: 0,\r\n          completionTokens: 0,\r\n          totalTokens: 0\r\n        },\r\n        metadata: responseData.metadata || {},\r\n        content: content // 호환성을 위해 추가\r\n      };\r\n    } \r\n    // 기존 응답 형식 처리\r\n    else {\r\n      return {\r\n        message: {\r\n          id: responseData.message?.id || `msg_${Date.now()}`,\r\n          role: MessageRole.Assistant,\r\n          content: responseData.content || responseData.message?.content || '',\r\n          timestamp: new Date(),\r\n          metadata: responseData.message?.metadata || {\r\n            model: responseData.model || this.getActiveModel()\r\n          }\r\n        },\r\n        usage: responseData.usage || {\r\n          promptTokens: 0,\r\n          completionTokens: 0,\r\n          totalTokens: 0\r\n        },\r\n        metadata: responseData.metadata || {}\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Processes a WebSocket API response\r\n   * @param responseData Raw response data\r\n   * @returns Processed LLM response\r\n   */\r\n  private _processWebSocketResponse(responseData: any): LLMResponse {\r\n    // Process according to the WebSocket response format\r\n    return {\r\n      message: {\r\n        id: responseData.message?.id || `msg_${Date.now()}`,\r\n        role: MessageRole.Assistant,\r\n        content: responseData.content || responseData.message?.content || '',\r\n        timestamp: new Date(),\r\n        metadata: responseData.message?.metadata || {\r\n          model: responseData.model || this.getActiveModel()\r\n        }\r\n      },\r\n      usage: responseData.usage || {\r\n        promptTokens: 0,\r\n        completionTokens: 0,\r\n        totalTokens: 0\r\n      },\r\n      metadata: responseData.metadata || {}\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Processes a streaming chunk\r\n   * @param chunk Raw chunk data\r\n   * @returns Processed chunk as a string\r\n   */\r\n  private _processStreamChunk(chunk: any): string {\r\n    // Process based on the API's streaming format\r\n    try {\r\n      if (typeof chunk === 'string') {\r\n        // Try to parse as JSON if it's a string\r\n        const data = JSON.parse(chunk);\r\n        return data.content || data.text || data.chunk || '';\r\n      } else if (typeof chunk === 'object') {\r\n        // Already a parsed object\r\n        return chunk.content || chunk.text || chunk.chunk || '';\r\n      }\r\n    } catch {\r\n      // If parsing fails, return as is\r\n      return chunk.toString();\r\n    }\r\n    \r\n    return '';\r\n  }\r\n  \r\n  /**\r\n   * Gets a simple completion from the LLM for a prompt\r\n   * @param prompt The prompt to send to the LLM\r\n   * @param options Optional request options\r\n   * @returns Promise that resolves to LLMResult containing the completion text\r\n   */\r\n  public async getCompletion(\r\n    prompt: string,\r\n    options?: LLMRequestOptions\r\n  ): Promise<LLMResult<string>> {\r\n    try {\r\n      // Create a simple message with the prompt\r\n      const messages: Message[] = [\r\n        {\r\n          id: `user_${Date.now()}`,\r\n          role: MessageRole.User,\r\n          content: prompt,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      \r\n      // Send the request\r\n      const result = await this.sendRequest(messages, options);\r\n      \r\n      if (result.success && result.data) {\r\n        return {\r\n          success: true,\r\n          data: result.data.message.content\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: result.error || new Error('Failed to get completion')\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting completion:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error \r\n          ? error\r\n          : new Error(`Failed to get completion: ${String(error)}`)\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Disposes resources\r\n   */\r\n  public dispose(): void {\r\n    // Dispose event listeners\r\n    this._configListener.dispose();\r\n    this._modelChangeListener.dispose();\r\n    \r\n    // Cancel any ongoing operations\r\n    if (this._cancelTokenSource) {\r\n      this._cancelTokenSource.cancel('Extension deactivated');\r\n      this._cancelTokenSource = null;\r\n    }\r\n    \r\n    // Close WebSocket connection\r\n    if (this._wsConnection) {\r\n      this._wsConnection.close();\r\n      this._wsConnection = null;\r\n    }\r\n  }\r\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs/promises\");","import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs/promises';\r\nimport { existsSync, mkdirSync } from 'fs';\r\nimport { Message, MessageRole, ChatSession } from '../../types/chat';\r\n\r\n/**\r\n * Result of a memory operation including status and optional error\r\n */\r\nexport interface MemoryResult<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: Error;\r\n}\r\n\r\n/**\r\n * Options for session creation\r\n */\r\nexport interface SessionOptions {\r\n  /** Session metadata */\r\n  metadata?: {\r\n    /** Related project or workspace */\r\n    project?: string;\r\n    /** Default model for this session */\r\n    defaultModel?: string;\r\n    /** Custom session data */\r\n    [key: string]: any;\r\n  };\r\n}\r\n\r\n/**\r\n * Session summary for UI display\r\n */\r\nexport interface SessionSummary {\r\n  id: string;\r\n  name: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  messageCount: number;\r\n  summary?: string;\r\n}\r\n\r\n/**\r\n * Memory service manages storing and retrieving conversation data\r\n */\r\nexport class MemoryService implements vscode.Disposable {\r\n  private _sessions: Map<string, ChatSession> = new Map();\r\n  private _currentSessionId: string | null = null;\r\n  private _storageDir: string;\r\n  private _maxMessages: number;\r\n  private _sessionDuration: number;\r\n  private _configListener: vscode.Disposable;\r\n  \r\n  /**\r\n   * Creates a new MemoryService instance\r\n   * @param _context The VSCode extension context\r\n   */\r\n  constructor(private readonly _context: vscode.ExtensionContext) {\r\n    // Initialize properties\r\n    this._maxMessages = 30;\r\n    this._sessionDuration = 240;\r\n    \r\n    // Create storage directory\r\n    this._storageDir = path.join(_context.globalStoragePath, 'memory');\r\n    this._ensureStorageDirectory();\r\n    \r\n    // Load configuration\r\n    this._loadConfiguration();\r\n    \r\n    // Initialize with default session\r\n    this._initializeDefaultSession();\r\n    \r\n    // Listen for configuration changes\r\n    this._configListener = vscode.workspace.onDidChangeConfiguration(e => {\r\n      if (e.affectsConfiguration('ape.memory')) {\r\n        this._loadConfiguration();\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Loads configuration from VSCode settings\r\n   */\r\n  private _loadConfiguration(): void {\r\n    const config = vscode.workspace.getConfiguration('ape.memory');\r\n    this._maxMessages = config.get('maxMessages', 30);\r\n    this._sessionDuration = config.get('sessionDuration', 240); // minutes\r\n  }\r\n  \r\n  /**\r\n   * Creates storage directory if it doesn't exist\r\n   */\r\n  private _ensureStorageDirectory(): void {\r\n    if (!existsSync(this._storageDir)) {\r\n      mkdirSync(this._storageDir, { recursive: true });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Initializes default session\r\n   */\r\n  private async _initializeDefaultSession(): Promise<void> {\r\n    const defaultSessionId = 'default';\r\n\r\n    try {\r\n      // Check if default session exists\r\n      const existingSession = await this._loadSession(defaultSessionId);\r\n\r\n      if (existingSession) {\r\n        this._sessions.set(defaultSessionId, existingSession);\r\n\r\n        // 기존 세션을 워크스페이스에도 저장\r\n        await this._saveSessionToWorkspace(existingSession);\r\n      } else {\r\n        // Create new default session\r\n        const newSession: ChatSession = {\r\n          id: defaultSessionId,\r\n          name: 'Default Session',\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          messages: []\r\n        };\r\n\r\n        this._sessions.set(defaultSessionId, newSession);\r\n        await this._saveSession(newSession);\r\n      }\r\n\r\n      this._currentSessionId = defaultSessionId;\r\n    } catch (error) {\r\n      console.error('Failed to initialize default session:', error);\r\n      // Create an in-memory default session as fallback\r\n      this._sessions.set(defaultSessionId, {\r\n        id: defaultSessionId,\r\n        name: 'Default Session',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        messages: []\r\n      });\r\n      this._currentSessionId = defaultSessionId;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets the current session ID\r\n   * @returns Current session ID or null if no session is active\r\n   */\r\n  public getCurrentSessionId(): string | null {\r\n    return this._currentSessionId;\r\n  }\r\n  \r\n  /**\r\n   * Gets the current session\r\n   * @returns Current session or null if no session is active\r\n   */\r\n  public getCurrentSession(): ChatSession | null {\r\n    if (!this._currentSessionId) {\r\n      return null;\r\n    }\r\n    \r\n    return this._sessions.get(this._currentSessionId) || null;\r\n  }\r\n  \r\n  /**\r\n   * Gets messages from the current session\r\n   * @returns Promise that resolves to a MemoryResult containing messages\r\n   */\r\n  public async getMessages(): Promise<MemoryResult<Message[]>> {\r\n    try {\r\n      if (!this._currentSessionId) {\r\n        return { success: true, data: [] };\r\n      }\r\n      \r\n      const session = this._sessions.get(this._currentSessionId);\r\n      return {\r\n        success: true,\r\n        data: session ? session.messages : []\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Adds a message to the current session\r\n   * @param message Message to add\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async addMessage(message: Message): Promise<MemoryResult<void>> {\r\n    try {\r\n      if (!this._currentSessionId) {\r\n        return { \r\n          success: false, \r\n          error: new Error('No active session')\r\n        };\r\n      }\r\n      \r\n      const session = this._sessions.get(this._currentSessionId);\r\n      if (session) {\r\n        // Add message to the session\r\n        session.messages.push(message);\r\n        \r\n        // Limit messages if needed\r\n        if (this._maxMessages > 0 && session.messages.length > this._maxMessages) {\r\n          // Keep the most recent messages\r\n          session.messages = session.messages.slice(-this._maxMessages);\r\n        }\r\n        \r\n        // Update session timestamp\r\n        session.updatedAt = new Date();\r\n        \r\n        // Save session\r\n        await this._saveSession(session);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        return { \r\n          success: false, \r\n          error: new Error('Session not found')\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Saves messages to the current session\r\n   * @param messages Messages to save\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async saveMessages(messages: Message[]): Promise<MemoryResult<void>> {\r\n    try {\r\n      if (!this._currentSessionId) {\r\n        return { \r\n          success: false, \r\n          error: new Error('No active session')\r\n        };\r\n      }\r\n      \r\n      const session = this._sessions.get(this._currentSessionId);\r\n      if (session) {\r\n        // Replace messages in the session\r\n        session.messages = messages;\r\n        \r\n        // Limit messages if needed\r\n        if (this._maxMessages > 0 && session.messages.length > this._maxMessages) {\r\n          // Keep the most recent messages\r\n          session.messages = session.messages.slice(-this._maxMessages);\r\n        }\r\n        \r\n        // Update session timestamp\r\n        session.updatedAt = new Date();\r\n        \r\n        // Save session\r\n        await this._saveSession(session);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        return { \r\n          success: false, \r\n          error: new Error('Session not found')\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Creates a new chat session\r\n   * @param name Session name\r\n   * @param options Optional session options\r\n   * @returns Promise that resolves to a MemoryResult containing the session ID\r\n   */\r\n  public async createSession(name: string, options?: SessionOptions): Promise<MemoryResult<string>> {\r\n    try {\r\n      const sessionId = `session_${Date.now()}`;\r\n      \r\n      const newSession: ChatSession = {\r\n        id: sessionId,\r\n        name,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        messages: [],\r\n        metadata: options?.metadata\r\n      };\r\n      \r\n      this._sessions.set(sessionId, newSession);\r\n      await this._saveSession(newSession);\r\n      \r\n      return { \r\n        success: true, \r\n        data: sessionId\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Switches to a different session\r\n   * @param sessionId Session ID to switch to\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async switchSession(sessionId: string): Promise<MemoryResult<boolean>> {\r\n    try {\r\n      // If session is not loaded, try to load it\r\n      if (!this._sessions.has(sessionId)) {\r\n        const session = await this._loadSession(sessionId);\r\n        if (!session) {\r\n          return { \r\n            success: false, \r\n            error: new Error(`Session ${sessionId} not found`)\r\n          };\r\n        }\r\n        this._sessions.set(sessionId, session);\r\n      }\r\n      \r\n      this._currentSessionId = sessionId;\r\n      return {\r\n        success: true,\r\n        data: true\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets all available sessions\r\n   * @returns Promise that resolves to a MemoryResult containing session summaries\r\n   */\r\n  public async getSessions(): Promise<MemoryResult<SessionSummary[]>> {\r\n    try {\r\n      // Load all sessions from storage\r\n      await this._loadAllSessions();\r\n      \r\n      const sessionSummaries: SessionSummary[] = Array.from(this._sessions.values()).map(session => ({\r\n        id: session.id,\r\n        name: session.name,\r\n        createdAt: session.createdAt,\r\n        updatedAt: session.updatedAt,\r\n        messageCount: session.messages.length,\r\n        summary: session.metadata?.summary || this._summarizeConversation(session.messages)\r\n      }));\r\n      \r\n      return {\r\n        success: true,\r\n        data: sessionSummaries\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets a specific session by ID\r\n   * @param sessionId Session ID to get\r\n   * @returns Promise that resolves to a MemoryResult containing the session\r\n   */\r\n  public async getSession(sessionId: string): Promise<MemoryResult<ChatSession>> {\r\n    try {\r\n      // If session is not loaded, try to load it\r\n      if (!this._sessions.has(sessionId)) {\r\n        const session = await this._loadSession(sessionId);\r\n        if (!session) {\r\n          return { \r\n            success: false, \r\n            error: new Error(`Session ${sessionId} not found`)\r\n          };\r\n        }\r\n        this._sessions.set(sessionId, session);\r\n      }\r\n      \r\n      const session = this._sessions.get(sessionId);\r\n      if (!session) {\r\n        return { \r\n          success: false, \r\n          error: new Error(`Session ${sessionId} not found`)\r\n        };\r\n      }\r\n      \r\n      return {\r\n        success: true,\r\n        data: session\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Updates a session's properties (not including messages)\r\n   * @param sessionId Session ID to update\r\n   * @param updates Object containing updates to apply\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async updateSession(\r\n    sessionId: string, \r\n    updates: Partial<Pick<ChatSession, 'name' | 'metadata'>>\r\n  ): Promise<MemoryResult<void>> {\r\n    try {\r\n      const sessionResult = await this.getSession(sessionId);\r\n      if (!sessionResult.success || !sessionResult.data) {\r\n        return { \r\n          success: false, \r\n          error: sessionResult.error || new Error(`Session ${sessionId} not found`)\r\n        };\r\n      }\r\n      \r\n      const session = sessionResult.data;\r\n      \r\n      // Apply updates\r\n      if (updates.name) {\r\n        session.name = updates.name;\r\n      }\r\n      \r\n      if (updates.metadata) {\r\n        session.metadata = {\r\n          ...session.metadata,\r\n          ...updates.metadata\r\n        };\r\n      }\r\n      \r\n      // Update timestamp\r\n      session.updatedAt = new Date();\r\n      \r\n      // Save session\r\n      await this._saveSession(session);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Deletes a session\r\n   * @param sessionId Session ID to delete\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async deleteSession(sessionId: string): Promise<MemoryResult<void>> {\r\n    try {\r\n      // Don't allow deleting the default session\r\n      if (sessionId === 'default') {\r\n        return {\r\n          success: false,\r\n          error: new Error('Cannot delete the default session')\r\n        };\r\n      }\r\n      \r\n      // Remove from memory\r\n      this._sessions.delete(sessionId);\r\n      \r\n      // If this was the current session, switch to default\r\n      if (this._currentSessionId === sessionId) {\r\n        await this.switchSession('default');\r\n      }\r\n      \r\n      // Remove from disk\r\n      const sessionFile = path.join(this._storageDir, `${sessionId}.json`);\r\n      if (existsSync(sessionFile)) {\r\n        await fs.unlink(sessionFile);\r\n      }\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Clears messages from the current session\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async clearMessages(): Promise<MemoryResult<void>> {\r\n    try {\r\n      if (!this._currentSessionId) {\r\n        return { \r\n          success: false, \r\n          error: new Error('No active session')\r\n        };\r\n      }\r\n      \r\n      const session = this._sessions.get(this._currentSessionId);\r\n      if (session) {\r\n        session.messages = [];\r\n        session.updatedAt = new Date();\r\n        \r\n        await this._saveSession(session);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        return { \r\n          success: false, \r\n          error: new Error('Session not found')\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Archives old sessions based on session duration configuration\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async archiveOldSessions(): Promise<MemoryResult<number>> {\r\n    try {\r\n      // Load all sessions from storage\r\n      await this._loadAllSessions();\r\n      \r\n      const now = new Date();\r\n      const archiveThreshold = new Date(now.getTime() - this._sessionDuration * 60 * 1000);\r\n      let archivedCount = 0;\r\n      \r\n      for (const [sessionId, session] of this._sessions.entries()) {\r\n        // Skip the default session and current session\r\n        if (sessionId === 'default' || sessionId === this._currentSessionId) {\r\n          continue;\r\n        }\r\n        \r\n        // Archive sessions older than the threshold\r\n        if (session.updatedAt < archiveThreshold) {\r\n          // Create an archive copy\r\n          const archiveDir = path.join(this._storageDir, 'archive');\r\n          if (!existsSync(archiveDir)) {\r\n            mkdirSync(archiveDir, { recursive: true });\r\n          }\r\n          \r\n          // Generate summary if not already present\r\n          if (!session.metadata) {\r\n            session.metadata = {};\r\n          }\r\n          \r\n          if (!session.metadata.summary) {\r\n            session.metadata.summary = this._summarizeConversation(session.messages);\r\n          }\r\n          \r\n          // Save to archive\r\n          const archiveFile = path.join(archiveDir, `${session.id}_${Math.floor(session.updatedAt.getTime() / 1000)}.json`);\r\n          await fs.writeFile(archiveFile, JSON.stringify(session, null, 2), 'utf-8');\r\n          \r\n          // Remove from active sessions\r\n          this._sessions.delete(sessionId);\r\n          \r\n          // Remove from disk\r\n          const sessionFile = path.join(this._storageDir, `${sessionId}.json`);\r\n          if (existsSync(sessionFile)) {\r\n            await fs.unlink(sessionFile);\r\n          }\r\n          \r\n          archivedCount++;\r\n        }\r\n      }\r\n      \r\n      return {\r\n        success: true,\r\n        data: archivedCount\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Exports a session to a file\r\n   * @param sessionId Session ID to export\r\n   * @param filePath File path to export to\r\n   * @returns Promise that resolves to a MemoryResult indicating success or failure\r\n   */\r\n  public async exportSession(sessionId: string, filePath: string): Promise<MemoryResult<void>> {\r\n    try {\r\n      const sessionResult = await this.getSession(sessionId);\r\n      if (!sessionResult.success || !sessionResult.data) {\r\n        return { \r\n          success: false, \r\n          error: sessionResult.error || new Error(`Session ${sessionId} not found`)\r\n        };\r\n      }\r\n      \r\n      const session = sessionResult.data;\r\n      \r\n      // Export to file\r\n      await fs.writeFile(filePath, JSON.stringify(session, null, 2), 'utf-8');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Imports a session from a file\r\n   * @param filePath File path to import from\r\n   * @param setAsCurrent Whether to set the imported session as current\r\n   * @returns Promise that resolves to a MemoryResult containing the session ID\r\n   */\r\n  public async importSession(filePath: string, setAsCurrent: boolean = false): Promise<MemoryResult<string>> {\r\n    try {\r\n      // Read and parse file\r\n      const data = await fs.readFile(filePath, 'utf-8');\r\n      const sessionData = JSON.parse(data);\r\n      \r\n      // Validate session data\r\n      if (!sessionData.id || !sessionData.name || !sessionData.createdAt || !sessionData.updatedAt) {\r\n        return {\r\n          success: false,\r\n          error: new Error('Invalid session data')\r\n        };\r\n      }\r\n      \r\n      // Convert date strings to Date objects\r\n      sessionData.createdAt = new Date(sessionData.createdAt);\r\n      sessionData.updatedAt = new Date(sessionData.updatedAt);\r\n      \r\n      if (sessionData.messages) {\r\n        sessionData.messages.forEach((message: any) => {\r\n          message.timestamp = new Date(message.timestamp);\r\n        });\r\n      }\r\n      \r\n      // Generate a new ID to avoid conflicts\r\n      const originalId = sessionData.id;\r\n      sessionData.id = `imported_${Date.now()}`;\r\n      \r\n      // Add a note about the import\r\n      if (!sessionData.metadata) {\r\n        sessionData.metadata = {};\r\n      }\r\n      \r\n      sessionData.metadata.importedFrom = originalId;\r\n      sessionData.metadata.importedAt = new Date();\r\n      \r\n      // Save the session\r\n      this._sessions.set(sessionData.id, sessionData);\r\n      await this._saveSession(sessionData);\r\n      \r\n      // Switch to the imported session if requested\r\n      if (setAsCurrent) {\r\n        this._currentSessionId = sessionData.id;\r\n      }\r\n      \r\n      return {\r\n        success: true,\r\n        data: sessionData.id\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error : new Error(String(error))\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Loads a specific session from storage\r\n   * @param sessionId Session ID to load\r\n   * @returns Promise that resolves to a ChatSession or null\r\n   */\r\n  private async _loadSession(sessionId: string): Promise<ChatSession | null> {\r\n    const sessionFile = path.join(this._storageDir, `${sessionId}.json`);\r\n    \r\n    try {\r\n      if (existsSync(sessionFile)) {\r\n        const data = await fs.readFile(sessionFile, 'utf-8');\r\n        const sessionData = JSON.parse(data);\r\n        \r\n        // Convert date strings back to Date objects\r\n        sessionData.createdAt = new Date(sessionData.createdAt);\r\n        sessionData.updatedAt = new Date(sessionData.updatedAt);\r\n        \r\n        if (sessionData.messages) {\r\n          sessionData.messages.forEach((message: any) => {\r\n            message.timestamp = new Date(message.timestamp);\r\n          });\r\n        }\r\n        \r\n        return sessionData as ChatSession;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error loading session ${sessionId}:`, error);\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Saves a session to storage\r\n   * @param session Session to save\r\n   * @returns Promise that resolves when the session is saved\r\n   */\r\n  private async _saveSession(session: ChatSession): Promise<void> {\r\n    const sessionFile = path.join(this._storageDir, `${session.id}.json`);\r\n\r\n    try {\r\n      const sessionJson = JSON.stringify(session, null, 2);\r\n      await fs.writeFile(sessionFile, sessionJson, 'utf-8');\r\n\r\n      // 워크스페이스 .ape/vault/chat-history 디렉토리에도 저장\r\n      await this._saveSessionToWorkspace(session);\r\n    } catch (error) {\r\n      console.error(`Error saving session ${session.id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 세션을 워크스페이스의 .ape/vault/chat-history 디렉토리에 저장\r\n   */\r\n  private async _saveSessionToWorkspace(session: ChatSession): Promise<void> {\r\n    try {\r\n      // 워크스페이스 폴더 확인\r\n      const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n      if (!workspaceFolder) {\r\n        return; // 워크스페이스가 없으면 종료\r\n      }\r\n\r\n      // .ape/vault/chat-history 디렉토리 경로\r\n      const chatHistoryDir = path.join(workspaceFolder.uri.fsPath, '.ape', 'vault', 'chat-history');\r\n\r\n      // 디렉토리가 없으면 생성\r\n      if (!existsSync(chatHistoryDir)) {\r\n        mkdirSync(chatHistoryDir, { recursive: true });\r\n      }\r\n\r\n      // 메타데이터 파일 경로\r\n      const metaFile = path.join(chatHistoryDir, `${session.id}.meta.json`);\r\n\r\n      // 세션 내용 파일 경로\r\n      const contentFile = path.join(chatHistoryDir, `${session.id}.json`);\r\n\r\n      // 요약 생성 (첫 번째 사용자 메시지 기반)\r\n      const firstUserMessage = session.messages.find(m => m.role === MessageRole.User);\r\n      const summary = firstUserMessage\r\n        ? firstUserMessage.content.substring(0, 50) + (firstUserMessage.content.length > 50 ? '...' : '')\r\n        : '새 대화';\r\n\r\n      // 세션 제목 설정\r\n      const title = session.metadata?.summary || session.name || summary || `대화 (${new Date().toLocaleString()})`;\r\n\r\n      // 메타데이터 생성\r\n      const metadata = {\r\n        id: session.id,\r\n        title: title,\r\n        createdAt: session.createdAt,\r\n        updatedAt: session.updatedAt,\r\n        messageCount: session.messages.length,\r\n        summary: summary\r\n      };\r\n\r\n      // 파일 저장\r\n      await fs.writeFile(metaFile, JSON.stringify(metadata, null, 2), 'utf-8');\r\n      await fs.writeFile(contentFile, JSON.stringify(session, null, 2), 'utf-8');\r\n    } catch (error) {\r\n      console.error(`Error saving session to workspace ${session.id}:`, error);\r\n      // 워크스페이스 저장 실패는 무시하고 계속 진행\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Loads all sessions from storage\r\n   * @returns Promise that resolves when all sessions are loaded\r\n   */\r\n  private async _loadAllSessions(): Promise<void> {\r\n    try {\r\n      if (!existsSync(this._storageDir)) {\r\n        return;\r\n      }\r\n      \r\n      const files = await fs.readdir(this._storageDir);\r\n      \r\n      for (const file of files) {\r\n        if (file.endsWith('.json')) {\r\n          const sessionId = path.basename(file, '.json');\r\n          \r\n          // Don't reload sessions we already have in memory\r\n          if (!this._sessions.has(sessionId)) {\r\n            const session = await this._loadSession(sessionId);\r\n            if (session) {\r\n              this._sessions.set(sessionId, session);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading sessions:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Summarizes a conversation for long-term memory\r\n   * @param messages Messages to summarize\r\n   * @returns Summary of the conversation\r\n   */\r\n  private _summarizeConversation(messages: Message[]): string {\r\n    if (messages.length === 0) {\r\n      return 'Empty conversation';\r\n    }\r\n    \r\n    // Find the first user message\r\n    const firstUserMessage = messages.find(m => m.role === MessageRole.User);\r\n    if (!firstUserMessage) {\r\n      return `Conversation with ${messages.length} messages`;\r\n    }\r\n    \r\n    // Get first user message content\r\n    const content = firstUserMessage.content;\r\n    const truncatedContent = content.substring(0, 50) + (content.length > 50 ? '...' : '');\r\n    \r\n    // Count messages by role\r\n    const userMessages = messages.filter(m => m.role === MessageRole.User).length;\r\n    const assistantMessages = messages.filter(m => m.role === MessageRole.Assistant).length;\r\n    \r\n    return `Conversation with ${userMessages} user and ${assistantMessages} assistant messages. Started with: \"${truncatedContent}\"`;\r\n  }\r\n  \r\n  /**\r\n   * Disposes resources\r\n   */\r\n  public dispose(): void {\r\n    // Dispose configuration change listener\r\n    this._configListener.dispose();\r\n    \r\n    // Save any unsaved sessions\r\n    for (const session of this._sessions.values()) {\r\n      this._saveSession(session).catch(error => {\r\n        console.error(`Error saving session ${session.id} during disposal:`, error);\r\n      });\r\n    }\r\n  }\r\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","/**\r\n * Git Conflict Solver\r\n * \r\n * Git 충돌을 자동으로 해결하는 고급 모듈\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { promisify } from 'util';\r\nimport { exec } from 'child_process';\r\nimport { LLMService } from '../llm/llmService';\r\nimport { Message, MessageRole } from '../../types/chat';\r\n\r\nconst execAsync = promisify(exec);\r\n\r\n/**\r\n * 충돌 해결 전략 유형\r\n */\r\nexport enum ConflictStrategy {\r\n  AUTO = 'auto',\r\n  OURS = 'ours',    // 현재 브랜치 변경사항 선택\r\n  THEIRS = 'theirs', // 다른 브랜치 변경사항 선택\r\n  MERGE = 'merge',   // 두 변경사항 병합\r\n  LLM = 'llm'        // LLM 기반 지능형 병합\r\n}\r\n\r\n/**\r\n * 충돌 정보\r\n */\r\ninterface ConflictInfo {\r\n  filePath: string;\r\n  conflicts: {\r\n    ours: string;\r\n    theirs: string;\r\n    marker: string;\r\n    branch: string;\r\n    startLine: number;\r\n    endLine: number;\r\n  }[];\r\n}\r\n\r\n/**\r\n * 병합 결과\r\n */\r\ninterface MergeResult {\r\n  success: boolean;\r\n  resolvedContent?: string;\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * Git 충돌 해결기\r\n */\r\nexport class ConflictSolver {\r\n  private workspaceRoot: string | undefined;\r\n  \r\n  /**\r\n   * 생성자\r\n   */\r\n  constructor(\r\n    private readonly llmService: LLMService\r\n  ) {\r\n    // 워크스페이스 루트 설정\r\n    this.workspaceRoot = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\r\n  }\r\n  \r\n  /**\r\n   * 현재 저장소의 충돌 파일 목록 가져오기\r\n   */\r\n  public async getConflictingFiles(): Promise<string[]> {\r\n    if (!this.workspaceRoot) {\r\n      return [];\r\n    }\r\n    \r\n    try {\r\n      // Git 충돌 파일 목록 가져오기\r\n      const { stdout } = await execAsync('git diff --name-only --diff-filter=U', {\r\n        cwd: this.workspaceRoot\r\n      });\r\n      \r\n      return stdout.trim().split('\\n').filter(file => file.trim() !== '');\r\n    } catch (error) {\r\n      console.error('충돌 파일 조회 오류:', error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 지정된 전략으로 모든 충돌 해결\r\n   */\r\n  public async resolveAllConflicts(strategy: ConflictStrategy = ConflictStrategy.AUTO): Promise<number> {\r\n    const conflictFiles = await this.getConflictingFiles();\r\n    \r\n    if (conflictFiles.length === 0) {\r\n      return 0;\r\n    }\r\n    \r\n    let resolvedCount = 0;\r\n    \r\n    // 진행 상황 UI\r\n    const progressOptions = {\r\n      location: vscode.ProgressLocation.Notification,\r\n      title: '충돌 해결 중...',\r\n      cancellable: true\r\n    };\r\n    \r\n    await vscode.window.withProgress(progressOptions, async (progress, token) => {\r\n      let i = 0;\r\n      \r\n      for (const file of conflictFiles) {\r\n        if (token.isCancellationRequested) {\r\n          break;\r\n        }\r\n        \r\n        progress.report({\r\n          message: `${file} (${i + 1}/${conflictFiles.length})`,\r\n          increment: 100 / conflictFiles.length\r\n        });\r\n        \r\n        const resolveSuccess = await this.resolveConflictsInFile(\r\n          path.join(this.workspaceRoot!, file),\r\n          strategy\r\n        );\r\n        \r\n        if (resolveSuccess) {\r\n          resolvedCount++;\r\n        }\r\n        \r\n        i++;\r\n      }\r\n      \r\n      return resolvedCount;\r\n    });\r\n    \r\n    return resolvedCount;\r\n  }\r\n  \r\n  /**\r\n   * 단일 파일의 충돌 해결\r\n   */\r\n  public async resolveConflictsInFile(\r\n    filePath: string,\r\n    strategy: ConflictStrategy = ConflictStrategy.AUTO\r\n  ): Promise<boolean> {\r\n    try {\r\n      // 파일 내용 읽기\r\n      const content = fs.readFileSync(filePath, 'utf-8');\r\n      \r\n      // 충돌 정보 파싱\r\n      const conflictInfo = this.parseConflicts(filePath, content);\r\n      \r\n      if (conflictInfo.conflicts.length === 0) {\r\n        return false;\r\n      }\r\n      \r\n      // 파일 확장자 확인\r\n      const fileExt = path.extname(filePath).substring(1);\r\n      \r\n      // 충돌 해결\r\n      const resolvedContent = await this.resolveContent(content, conflictInfo, strategy, fileExt);\r\n      \r\n      // 해결된 내용 저장\r\n      fs.writeFileSync(filePath, resolvedContent, 'utf-8');\r\n      \r\n      // Git에 추가\r\n      if (this.workspaceRoot) {\r\n        await execAsync(`git add \"${filePath}\"`, { cwd: this.workspaceRoot });\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error(`파일 충돌 해결 오류 (${filePath}):`, error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 충돌 정보 파싱\r\n   */\r\n  private parseConflicts(filePath: string, content: string): ConflictInfo {\r\n    const result: ConflictInfo = {\r\n      filePath,\r\n      conflicts: []\r\n    };\r\n    \r\n    // 충돌 패턴\r\n    const conflictPattern = /<<<<<<< HEAD\\r?\\n([\\s\\S]*?)\\r?\\n=======\\r?\\n([\\s\\S]*?)\\r?\\n>>>>>>> (.*?)(\\r?\\n|$)/g;\r\n    \r\n    // 라인 수 계산은 별도로 필요할 때 구현\r\n    \r\n    let match;\r\n    while ((match = conflictPattern.exec(content)) !== null) {\r\n      const fullMatch = match[0];\r\n      const ours = match[1];\r\n      const theirs = match[2];\r\n      const branch = match[3];\r\n      \r\n      // 시작 및 종료 라인 번호 계산\r\n      const startPos = content.substring(0, match.index).split(/\\r?\\n/).length - 1;\r\n      const endPos = startPos + fullMatch.split(/\\r?\\n/).length - 1;\r\n      \r\n      result.conflicts.push({\r\n        ours,\r\n        theirs,\r\n        marker: fullMatch,\r\n        branch,\r\n        startLine: startPos,\r\n        endLine: endPos\r\n      });\r\n    }\r\n    \r\n    return result;\r\n  }\r\n  \r\n  /**\r\n   * 충돌 내용 해결\r\n   */\r\n  private async resolveContent(\r\n    content: string,\r\n    conflictInfo: ConflictInfo,\r\n    strategy: ConflictStrategy,\r\n    fileType: string\r\n  ): Promise<string> {\r\n    let resolvedContent = content;\r\n    \r\n    // 각 충돌 부분에 대해 처리\r\n    for (const conflict of conflictInfo.conflicts) {\r\n      // 실제 전략이 AUTO인 경우 파일 유형과 충돌 내용에 따라 최적 전략 선택\r\n      const actualStrategy = strategy === ConflictStrategy.AUTO\r\n        ? this.determineStrategy(conflict, fileType)\r\n        : strategy;\r\n      \r\n      // 전략에 따른 충돌 해결\r\n      const mergeResult = await this.applyStrategy(conflict, actualStrategy, fileType);\r\n      \r\n      if (mergeResult.success && mergeResult.resolvedContent) {\r\n        // 충돌 마커를 해결된 내용으로 교체\r\n        resolvedContent = resolvedContent.replace(conflict.marker, mergeResult.resolvedContent);\r\n      }\r\n    }\r\n    \r\n    return resolvedContent;\r\n  }\r\n  \r\n  /**\r\n   * 충돌에 가장 적합한 전략 결정\r\n   */\r\n  private determineStrategy(\r\n    conflict: ConflictInfo['conflicts'][0],\r\n    fileType: string\r\n  ): ConflictStrategy {\r\n    // 두 변경 사항이 동일한 경우\r\n    if (conflict.ours.trim() === conflict.theirs.trim()) {\r\n      return ConflictStrategy.OURS;\r\n    }\r\n    \r\n    // 한쪽이 다른 쪽을 포함하는 경우\r\n    if (conflict.ours.includes(conflict.theirs)) {\r\n      return ConflictStrategy.OURS;\r\n    }\r\n    if (conflict.theirs.includes(conflict.ours)) {\r\n      return ConflictStrategy.THEIRS;\r\n    }\r\n    \r\n    // 양쪽 변경사항의 규모 비교\r\n    const oursLines = conflict.ours.split(/\\r?\\n/).length;\r\n    const theirsLines = conflict.theirs.split(/\\r?\\n/).length;\r\n    \r\n    // 크기 차이가 크면 큰 쪽 선택\r\n    if (oursLines > theirsLines * 2) {\r\n      return ConflictStrategy.OURS;\r\n    }\r\n    if (theirsLines > oursLines * 2) {\r\n      return ConflictStrategy.THEIRS;\r\n    }\r\n    \r\n    // 코드 파일인 경우 지능형 병합 시도\r\n    if (['js', 'ts', 'jsx', 'tsx', 'py', 'java', 'c', 'cpp', 'cs', 'go', 'rb', 'php'].includes(fileType)) {\r\n      return ConflictStrategy.LLM;\r\n    }\r\n    \r\n    // 기타 파일의 경우 단순 병합\r\n    return ConflictStrategy.MERGE;\r\n  }\r\n  \r\n  /**\r\n   * 충돌 해결 전략 적용\r\n   */\r\n  private async applyStrategy(\r\n    conflict: ConflictInfo['conflicts'][0],\r\n    strategy: ConflictStrategy,\r\n    fileType: string\r\n  ): Promise<MergeResult> {\r\n    switch (strategy) {\r\n      case ConflictStrategy.OURS:\r\n        return {\r\n          success: true,\r\n          resolvedContent: conflict.ours\r\n        };\r\n        \r\n      case ConflictStrategy.THEIRS:\r\n        return {\r\n          success: true,\r\n          resolvedContent: conflict.theirs\r\n        };\r\n        \r\n      case ConflictStrategy.MERGE:\r\n        return this.mergeChanges(conflict);\r\n        \r\n      case ConflictStrategy.LLM:\r\n        return await this.llmBasedMerge(conflict, fileType);\r\n        \r\n      default:\r\n        return {\r\n          success: false,\r\n          message: '지원되지 않는 전략'\r\n        };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 기본 병합 전략\r\n   */\r\n  private mergeChanges(conflict: ConflictInfo['conflicts'][0]): MergeResult {\r\n    // 줄 단위 병합 수행\r\n    const oursLines = conflict.ours.split(/\\r?\\n/);\r\n    const theirsLines = conflict.theirs.split(/\\r?\\n/);\r\n    \r\n    // 공통 줄 찾기\r\n    const commonLines = oursLines.filter(line => theirsLines.includes(line));\r\n    \r\n    // 두 변경사항의 고유 줄 추출\r\n    const uniqueOurs = oursLines.filter(line => !theirsLines.includes(line));\r\n    const uniqueTheirs = theirsLines.filter(line => !oursLines.includes(line));\r\n    \r\n    // 중복 없이 모든 줄 결합\r\n    const combinedLines = [...commonLines, ...uniqueOurs, ...uniqueTheirs];\r\n    \r\n    return {\r\n      success: true,\r\n      resolvedContent: combinedLines.join('\\n')\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * LLM 기반 지능형 병합\r\n   */\r\n  private async llmBasedMerge(\r\n    conflict: ConflictInfo['conflicts'][0],\r\n    fileType: string\r\n  ): Promise<MergeResult> {\r\n    try {\r\n      // LLM 서비스에 프롬프트 생성\r\n      const prompt = `\r\n두 코드 변경사항을 병합해야 합니다. 파일 타입은 ${fileType}입니다.\r\n충돌이 발생한 코드 부분에 대해 최선의 병합 결과를 생성해주세요.\r\n코드의 의미와 기능을 유지하면서 두 변경사항을 통합해야 합니다.\r\n\r\n현재 브랜치 코드:\r\n\\`\\`\\`${fileType}\r\n${conflict.ours}\r\n\\`\\`\\`\r\n\r\n다른 브랜치 (${conflict.branch}) 코드:\r\n\\`\\`\\`${fileType}\r\n${conflict.theirs}\r\n\\`\\`\\`\r\n\r\n병합 결과를 직접 제공해주세요. 병합 마커나 설명 없이 코드만 결과로 반환해주세요.`;\r\n\r\n      // LLM에 요청\r\n      const messages: Message[] = [\r\n        {\r\n          id: `msg_conflict_${Date.now()}`,\r\n          role: MessageRole.User,\r\n          content: prompt,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      \r\n      const response = await this.llmService.sendRequest(messages);\r\n      \r\n      if (response.success && response.data) {\r\n        // 코드 블록에서 코드 추출\r\n        const codeBlockRegex = /```(?:[a-z]*\\n)?([\\s\\S]*?)```/;\r\n        const content = response.data.content || '';\r\n        const contentMatch = content.match(codeBlockRegex);\r\n        \r\n        const resolvedContent = contentMatch \r\n          ? contentMatch[1].trim() \r\n          : content.trim();\r\n        \r\n        return {\r\n          success: true,\r\n          resolvedContent\r\n        };\r\n      } else {\r\n        throw new Error('LLM 서비스 응답 실패');\r\n      }\r\n    } catch (error) {\r\n      console.error('LLM 기반 병합 오류:', error);\r\n      \r\n      // LLM 오류 시 기본 병합 전략으로 대체\r\n      return this.mergeChanges(conflict);\r\n    }\r\n  }\r\n}","/**\r\n * Git 명령어 모듈\r\n * \r\n * Git 관련 명령어들을 정의합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { SlashCommand } from '../commands/slashCommand';\r\nimport { ConflictStrategy } from './conflictSolver';\r\n\r\n/**\r\n * Git 명령어 목록 생성\r\n */\r\nexport function createGitCommands(): SlashCommand[] {\r\n  const commands: SlashCommand[] = [];\r\n  \r\n  // Git 명령어 정의\r\n  commands.push({\r\n    name: 'git',\r\n    aliases: ['g', '깃', '깃작업'],\r\n    description: 'Git 작업을 수행합니다',\r\n    examples: ['/git status', '/git commit', '/git auto', '/git consolidate', '/깃 상태', '/깃 통합'],\r\n    category: 'git',\r\n    priority: 3,\r\n    execute: async (context) => {\r\n      const subCommand = context.args[0]?.toLowerCase();\r\n\r\n      if (!subCommand) {\r\n        // Git 하위 명령어 목록 표시 (슬랙/디스코드 스타일 자동완성)\r\n        const gitSubcommands = [\r\n          { command: 'status', description: 'Git 저장소 상태를 확인합니다' },\r\n          { command: 'commit', description: '변경 사항을 커밋합니다' },\r\n          { command: 'auto', description: '자동 커밋 기능을 켜거나 끕니다' },\r\n          { command: 'auto-on', description: '자동 커밋 기능을 켭니다' },\r\n          { command: 'auto-off', description: '자동 커밋 기능을 끕니다' },\r\n          { command: 'consolidate', description: '임시 커밋들을 하나의 정식 커밋으로 통합합니다' },\r\n          { command: 'solve', description: '웹뷰를 통한 Git 충돌 해결 제안을 제공합니다' },\r\n          { command: 'solve-auto', description: '모든 Git 충돌을 자동으로 해결합니다' },\r\n          { command: 'solve-ours', description: '모든 Git 충돌을 현재 브랜치의 코드로 해결합니다' },\r\n          { command: 'solve-theirs', description: '모든 Git 충돌을 다른 브랜치의 코드로 해결합니다' },\r\n          { command: 'solve-llm', description: 'LLM을 사용해 Git 충돌을 지능적으로 해결합니다' }\r\n        ];\r\n\r\n        // 명령어 제안을 채팅 인터페이스의 자동완성 UI에 표시\r\n        const suggestions = gitSubcommands.map(cmd => ({\r\n          label: `/git ${cmd.command}`,\r\n          description: cmd.description,\r\n          category: 'git',\r\n          insertText: `/git ${cmd.command} `\r\n        }));\r\n\r\n        // 명령어 제안 표시 - 채팅 입력창 자동완성 UI에 표시\r\n        vscode.commands.executeCommand('ape.showCommandSuggestions', suggestions);\r\n\r\n        // VSCode의 퀵픽 UI도 함께 표시 (백업 방법)\r\n        vscode.window.showQuickPick(\r\n          gitSubcommands.map(cmd => ({\r\n            label: cmd.command,\r\n            description: cmd.description,\r\n            detail: `Git 하위 명령어: ${cmd.command}`\r\n          })),\r\n          {\r\n            placeHolder: 'Git 명령어를 선택하세요',\r\n            matchOnDescription: true\r\n          }\r\n        ).then(selected => {\r\n          if (selected) {\r\n            // 선택한 명령어를 채팅 입력창에 삽입\r\n            vscode.commands.executeCommand('ape.insertToChatInput', `/git ${selected.label}`);\r\n          }\r\n        });\r\n      } else if (subCommand === 'status' || subCommand === '상태') {\r\n        // Git 상태 확인\r\n        await vscode.commands.executeCommand('ape.git.showStatus');\r\n      } else if (subCommand === 'commit' || subCommand === '커밋' || subCommand === '저장') {\r\n        // Git 커밋\r\n        await vscode.commands.executeCommand('ape.git.commit');\r\n      } else if (subCommand === 'auto' || subCommand === '자동' || subCommand === '자동커밋') {\r\n        // 자동 커밋 토글\r\n        await vscode.commands.executeCommand('ape.git.toggleAutoCommit');\r\n      } else if (subCommand === 'auto-on' || subCommand === 'autoon' || subCommand === '자동켜기' || subCommand === '자동커밋켜기') {\r\n        // 자동 커밋 켜기\r\n        await vscode.workspace.getConfiguration('ape.git')\r\n          .update('autoCommit', true, vscode.ConfigurationTarget.Workspace);\r\n        vscode.window.showInformationMessage('자동 커밋이 켜졌습니다');\r\n      } else if (subCommand === 'auto-off' || subCommand === 'autooff' || subCommand === '자동끄기' || subCommand === '자동커밋끄기') {\r\n        // 자동 커밋 끄기\r\n        await vscode.workspace.getConfiguration('ape.git')\r\n          .update('autoCommit', false, vscode.ConfigurationTarget.Workspace);\r\n        vscode.window.showInformationMessage('자동 커밋이 꺼졌습니다');\r\n      } else if (subCommand === 'consolidate' || subCommand === 'squash' || subCommand === '통합' || subCommand === '임시통합' || subCommand === '통합커밋') {\r\n        // 임시 커밋 통합\r\n        await vscode.commands.executeCommand('ape.git.consolidateTemporaryCommits');\r\n      } else if (subCommand === 'solve' || subCommand === 'conflict' || subCommand === 'conflicts' || subCommand === '충돌' || subCommand === '충돌해결') {\r\n        // 충돌 해결 - 웹뷰 버전 (새로 추가)\r\n        await vscode.commands.executeCommand('ape.git.solveConflictsWithReport');\r\n      } else if (subCommand === 'solve-auto' || subCommand === '충돌자동해결') {\r\n        // 충돌 자동 해결 (기존 방식)\r\n        await vscode.commands.executeCommand('ape.git.resolveConflict');\r\n      } else if (subCommand === 'solve-ours' || subCommand === '충돌내것선택') {\r\n        // 충돌 해결 - 현재 브랜치 선택\r\n        await vscode.commands.executeCommand('ape.git.resolveConflictWithStrategy', ConflictStrategy.OURS);\r\n      } else if (subCommand === 'solve-theirs' || subCommand === '충돌저것선택') {\r\n        // 충돌 해결 - 대상 브랜치 선택\r\n        await vscode.commands.executeCommand('ape.git.resolveConflictWithStrategy', ConflictStrategy.THEIRS);\r\n      } else if (subCommand === 'solve-llm' || subCommand === '충돌지능해결') {\r\n        // 충돌 해결 - LLM 지능형 병합\r\n        await vscode.commands.executeCommand('ape.git.resolveConflictWithStrategy', ConflictStrategy.LLM);\r\n      } else {\r\n        vscode.window.showErrorMessage('알 수 없는 Git 하위 명령어입니다');\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      const subCommands = [\r\n        // 기존 명령어\r\n        'status', 'commit', 'auto', 'auto-on', 'auto-off', 'consolidate', 'squash',\r\n        \r\n        // 충돌 해결 관련 명령어\r\n        'solve', 'conflict', 'conflicts', 'solve-auto', 'solve-ours', 'solve-theirs', 'solve-llm',\r\n        \r\n        // 한국어 명령어\r\n        '상태', '커밋', '저장', '자동', '자동커밋', '자동켜기', '자동끄기', '자동커밋켜기', '자동커밋끄기', '통합', '임시통합', '통합커밋',\r\n        '충돌', '충돌해결', '충돌자동해결', '충돌내것선택', '충돌저것선택', '충돌지능해결'\r\n      ];\r\n      \r\n      // 첫 번째 인자 자동완성\r\n      if (!partialArgs.includes(' ')) {\r\n        return subCommands.filter(cmd => \r\n          cmd.startsWith(partialArgs.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n  \r\n  return commands;\r\n}","/**\r\n * VAULT 관련 슬래시 커맨드 정의\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { SlashCommand, CommandContext } from './slashCommand';\r\nimport { VaultContextType } from '../services/vaultService';\r\n\r\n/**\r\n * VAULT 명령어 생성\r\n * @param vaultService VAULT 서비스 인스턴스\r\n */\r\nexport function createVaultCommands(vaultService: any): SlashCommand[] {\r\n  const commands: SlashCommand[] = [];\r\n  \r\n  // VAULT 메인 명령어\r\n  commands.push({\r\n    name: 'vault',\r\n    aliases: ['컨텍스트', '볼트', 'ctx', 'context'],\r\n    description: 'VAULT 컨텍스트 및 아이템을 관리합니다',\r\n    examples: ['/vault list', '/vault show system-context', '/vault use system-item-1', '/vault create personal 내 작업 메모'],\r\n    category: 'utility',\r\n    priority: 5,\r\n    execute: async (context: CommandContext) => {\r\n      const subCommand = context.args[0]?.toLowerCase();\r\n\r\n      if (!subCommand) {\r\n        // Vault 하위 명령어 목록 표시 (슬랙/디스코드 스타일 자동완성)\r\n        const vaultSubcommands = [\r\n          { command: 'list', description: '모든 컨텍스트 및 아이템 목록을 표시합니다' },\r\n          { command: 'show', description: '특정 컨텍스트 또는 아이템 내용을 표시합니다' },\r\n          { command: 'use', description: '아이템을 사용하여 채팅창에 내용을 삽입합니다' },\r\n          { command: 'create', description: '새 컨텍스트 또는 아이템을 생성합니다' },\r\n          { command: 'delete', description: '컨텍스트 또는 아이템을 삭제합니다' },\r\n          { command: 'search', description: '컨텍스트 내에서 아이템을 검색합니다' }\r\n        ];\r\n\r\n        // 명령어 제안을 채팅 인터페이스의 자동완성 UI에 표시\r\n        const suggestions = vaultSubcommands.map(cmd => ({\r\n          label: `/vault ${cmd.command}`,\r\n          description: cmd.description,\r\n          category: 'utility',\r\n          insertText: `/vault ${cmd.command} `\r\n        }));\r\n\r\n        // 명령어 제안 표시 - 채팅 입력창 자동완성 UI에 표시\r\n        vscode.commands.executeCommand('ape.showCommandSuggestions', suggestions);\r\n\r\n        // VSCode의 퀵픽 UI도 함께 표시 (백업 방법)\r\n        vscode.window.showQuickPick(\r\n          vaultSubcommands.map(cmd => ({\r\n            label: cmd.command,\r\n            description: cmd.description,\r\n            detail: `Vault 하위 명령어: ${cmd.command}`\r\n          })),\r\n          {\r\n            placeHolder: 'Vault 명령어를 선택하세요',\r\n            matchOnDescription: true\r\n          }\r\n        ).then(selected => {\r\n          if (selected) {\r\n            // 선택한 명령어를 채팅 입력창에 삽입\r\n            vscode.commands.executeCommand('ape.insertToChatInput', `/vault ${selected.label}`);\r\n          }\r\n        });\r\n      } else if (subCommand === 'list' || subCommand === '목록') {\r\n        // 컨텍스트 목록 표시\r\n        await showContextList(vaultService);\r\n      } else if (subCommand === 'show' || subCommand === '보기' || subCommand === 'view') {\r\n        // 컨텍스트 또는 아이템 상세 보기\r\n        const id = context.args[1];\r\n        if (!id) {\r\n          vscode.window.showErrorMessage('표시할 컨텍스트 또는 아이템 ID를 지정해주세요');\r\n          return;\r\n        }\r\n\r\n        await showContextOrItem(vaultService, id);\r\n      } else if (subCommand === 'use' || subCommand === '사용') {\r\n        // 아이템 사용 (채팅창에 내용 삽입)\r\n        const itemId = context.args[1];\r\n        if (!itemId) {\r\n          vscode.window.showErrorMessage('사용할 아이템 ID를 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        await useVaultItem(vaultService, itemId);\r\n      } else if (subCommand === 'create' || subCommand === '생성' || subCommand === 'new' || subCommand === '새로만들기') {\r\n        // 새 컨텍스트 또는 아이템 생성\r\n        const type = context.args[1]?.toLowerCase();\r\n        const name = context.args.slice(2).join(' ');\r\n        \r\n        if (!type || !name) {\r\n          vscode.window.showErrorMessage('컨텍스트 유형과 이름을 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        await createContextOrItem(vaultService, type, name);\r\n      } else if (subCommand === 'delete' || subCommand === '삭제' || subCommand === 'remove') {\r\n        // 컨텍스트 또는 아이템 삭제\r\n        const id = context.args[1];\r\n        if (!id) {\r\n          vscode.window.showErrorMessage('삭제할 컨텍스트 또는 아이템 ID를 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        await deleteContextOrItem(vaultService, id);\r\n      } else if (subCommand === 'search' || subCommand === '검색') {\r\n        // 아이템 검색\r\n        const query = context.args.slice(1).join(' ');\r\n        if (!query) {\r\n          vscode.window.showErrorMessage('검색어를 입력해주세요');\r\n          return;\r\n        }\r\n        \r\n        await searchVaultItems(vaultService, query);\r\n      } else {\r\n        vscode.window.showErrorMessage(`알 수 없는 VAULT 하위 명령어입니다: ${subCommand}`);\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      const parts = partialArgs.split(' ');\r\n      \r\n      // 첫 번째 인자 자동완성 (하위 명령어)\r\n      if (parts.length <= 1) {\r\n        const options = ['list', 'show', 'use', 'create', 'delete', 'search', '목록', '보기', '사용', '생성', '삭제', '검색'];\r\n        return options.filter(option => \r\n          option.toLowerCase().startsWith(parts[0].toLowerCase() || '')\r\n        );\r\n      }\r\n      \r\n      // 두 번째 인자 자동완성\r\n      if (parts.length === 2) {\r\n        const subCommand = parts[0].toLowerCase();\r\n        \r\n        if (subCommand === 'create' || subCommand === '생성' || subCommand === 'new' || subCommand === '새로만들기') {\r\n          // 컨텍스트 유형 제안\r\n          const typeOptions = ['system', 'project', 'personal', 'shared', 'template', '시스템', '프로젝트', '개인', '공유', '템플릿'];\r\n          return typeOptions.filter(option => \r\n            option.toLowerCase().startsWith(parts[1].toLowerCase() || '')\r\n          );\r\n        } else if (subCommand === 'show' || subCommand === '보기' || subCommand === 'view' || \r\n                  subCommand === 'use' || subCommand === '사용' ||\r\n                  subCommand === 'delete' || subCommand === '삭제' || subCommand === 'remove') {\r\n          // 컨텍스트/아이템 ID 제안 - 실제로는 vaultService에서 가져와야 함\r\n          // 모의 데이터 사용\r\n          const idOptions = ['system-context', 'project-context', 'personal-context', 'shared-context', 'template-context', \r\n                            'system-item-1', 'system-item-2', 'project-item-1', 'project-item-2', 'personal-item-1'];\r\n          return idOptions.filter(option => \r\n            option.toLowerCase().startsWith(parts[1].toLowerCase() || '')\r\n          );\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n  \r\n  return commands;\r\n}\r\n\r\n/**\r\n * 컨텍스트 목록 표시\r\n */\r\nasync function showContextList(vaultService: any, context?: CommandContext): Promise<void> {\r\n  try {\r\n    const allContexts = vaultService.getAllContexts();\r\n    \r\n    if (allContexts.length === 0) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: 'VAULT에 저장된 컨텍스트가 없습니다.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    let content = '## VAULT 컨텍스트 목록\\n\\n';\r\n    \r\n    // 컨텍스트 타입별 그룹화\r\n    const groupedContexts: Record<string, any[]> = {\r\n      'system': [],\r\n      'project': [],\r\n      'personal': [],\r\n      'shared': [],\r\n      'template': []\r\n    };\r\n    \r\n    allContexts.forEach((ctx: any) => {\r\n      groupedContexts[ctx.type].push(ctx);\r\n    });\r\n    \r\n    // 타입별로 표시\r\n    for (const [type, contexts] of Object.entries(groupedContexts)) {\r\n      if (contexts.length > 0) {\r\n        // 타입명 한글로 변환\r\n        let typeKorean = '';\r\n        switch (type) {\r\n          case 'system': typeKorean = '시스템'; break;\r\n          case 'project': typeKorean = '프로젝트'; break;\r\n          case 'personal': typeKorean = '개인'; break;\r\n          case 'shared': typeKorean = '공유'; break;\r\n          case 'template': typeKorean = '템플릿'; break;\r\n          default: typeKorean = type;\r\n        }\r\n        \r\n        content += `### ${typeKorean} 컨텍스트\\n\\n`;\r\n        \r\n        contexts.forEach(context => {\r\n          content += `- **${context.name}** (ID: \\`${context.id}\\`): ${context.items.length}개 항목`;\r\n          if (context.description) {\r\n            content += ` - ${context.description}`;\r\n          }\r\n          content += '\\n';\r\n          \r\n          // 해당 컨텍스트의 아이템들 표시\r\n          if (context.items.length > 0) {\r\n            content += '  - 아이템 목록:\\n';\r\n            context.items.forEach((item: any) => {\r\n              content += `    - ${item.name} (ID: \\`${item.id}\\`)`;\r\n              if (item.description) {\r\n                content += ` - ${item.description}`;\r\n              }\r\n              content += '\\n';\r\n            });\r\n          }\r\n          content += '\\n';\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 컨텍스트를 사용하는 방법 안내\r\n    content += '\\n### 사용 방법\\n\\n';\r\n    content += '- 컨텍스트 상세 정보 보기: `/vault show [컨텍스트ID]`\\n';\r\n    content += '- 아이템 내용 보기: `/vault show [아이템ID]`\\n';\r\n    content += '- 아이템 사용하기: `/vault use [아이템ID]`\\n';\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    console.error('컨텍스트 목록 표시 오류:', error);\r\n    vscode.window.showErrorMessage('컨텍스트 목록을 가져오는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 컨텍스트 또는 아이템 상세 보기\r\n */\r\nasync function showContextOrItem(vaultService: any, id: string): Promise<void> {\r\n  try {\r\n    // 먼저 컨텍스트 검색\r\n    const context = vaultService.getContextById(id);\r\n    \r\n    if (context) {\r\n      // 컨텍스트 정보 표시\r\n      let content = `## 컨텍스트: ${context.name}\\n\\n`;\r\n      content += `- **ID**: \\`${context.id}\\`\\n`;\r\n      content += `- **유형**: ${getContextTypeKorean(context.type)}\\n`;\r\n      if (context.description) {\r\n        content += `- **설명**: ${context.description}\\n`;\r\n      }\r\n      content += `- **생성일**: ${formatDate(context.createdAt)}\\n`;\r\n      content += `- **수정일**: ${formatDate(context.updatedAt)}\\n`;\r\n      content += `- **항목 수**: ${context.items.length}개\\n\\n`;\r\n      \r\n      if (context.items.length > 0) {\r\n        content += '### 포함된 아이템\\n\\n';\r\n        context.items.forEach((item: any) => {\r\n          content += `- **${item.name}** (ID: \\`${item.id}\\`)`;\r\n          if (item.description) {\r\n            content += ` - ${item.description}`;\r\n          }\r\n          content += '\\n';\r\n        });\r\n      }\r\n      \r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 아이템 검색\r\n    const allContexts = vaultService.getAllContexts();\r\n    for (const context of allContexts) {\r\n      const item = context.items.find((item: any) => item.id === id);\r\n      if (item) {\r\n        // 아이템 정보 표시\r\n        let content = `## 아이템: ${item.name}\\n\\n`;\r\n        content += `- **ID**: \\`${item.id}\\`\\n`;\r\n        content += `- **컨텍스트**: ${context.name} (${getContextTypeKorean(context.type)})\\n`;\r\n        if (item.description) {\r\n          content += `- **설명**: ${item.description}\\n`;\r\n        }\r\n        content += `- **생성일**: ${formatDate(item.createdAt)}\\n`;\r\n        content += `- **수정일**: ${formatDate(item.updatedAt)}\\n`;\r\n        \r\n        if (item.tags && item.tags.length > 0) {\r\n          content += `- **태그**: ${item.tags.join(', ')}\\n`;\r\n        }\r\n        \r\n        content += '\\n### 내용\\n\\n';\r\n        content += '```\\n' + item.content + '\\n```\\n\\n';\r\n        \r\n        content += '이 아이템을 사용하려면 `/vault use ' + item.id + '` 명령어를 실행하세요.';\r\n        \r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // 컨텍스트나 아이템을 찾지 못한 경우\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `ID가 \\`${id}\\`인 컨텍스트나 아이템을 찾을 수 없습니다.`\r\n    });\r\n  } catch (error) {\r\n    console.error('컨텍스트/아이템 표시 오류:', error);\r\n    vscode.window.showErrorMessage('컨텍스트 또는 아이템 정보를 가져오는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 아이템 사용 (채팅창에 내용 삽입)\r\n */\r\nasync function useVaultItem(vaultService: any, itemId: string): Promise<void> {\r\n  try {\r\n    // 아이템 검색\r\n    const allContexts = vaultService.getAllContexts();\r\n    for (const context of allContexts) {\r\n      const item = context.items.find((item: any) => item.id === itemId);\r\n      if (item) {\r\n        // 아이템 내용을 LLM에게 제공\r\n        await vscode.commands.executeCommand('ape.sendUserMessage', {\r\n          content: item.content\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // 아이템을 찾지 못한 경우\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `ID가 \\`${itemId}\\`인 아이템을 찾을 수 없습니다.`\r\n    });\r\n  } catch (error) {\r\n    console.error('아이템 사용 오류:', error);\r\n    vscode.window.showErrorMessage('아이템을 사용하는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 새 컨텍스트 또는 아이템 생성\r\n */\r\nasync function createContextOrItem(vaultService: any, typeStr: string, name: string): Promise<void> {\r\n  try {\r\n    // 컨텍스트 유형 결정\r\n    let contextType: VaultContextType | undefined;\r\n    \r\n    switch (typeStr.toLowerCase()) {\r\n      case 'system':\r\n      case '시스템':\r\n        contextType = VaultContextType.System;\r\n        break;\r\n      case 'project':\r\n      case '프로젝트':\r\n        contextType = VaultContextType.Project;\r\n        break;\r\n      case 'personal':\r\n      case '개인':\r\n        contextType = VaultContextType.Personal;\r\n        break;\r\n      case 'shared':\r\n      case '공유':\r\n        contextType = VaultContextType.Shared;\r\n        break;\r\n      case 'template':\r\n      case '템플릿':\r\n        contextType = VaultContextType.Template;\r\n        break;\r\n      default:\r\n        // 컨텍스트 ID인지 확인 (아이템 생성 모드)\r\n        const context = vaultService.getContextById(typeStr);\r\n        if (context) {\r\n          // 아이템 생성 모드\r\n          await createItem(vaultService, context, name);\r\n          return;\r\n        }\r\n        \r\n        // 유효하지 않은 유형\r\n        vscode.window.showErrorMessage('유효하지 않은 컨텍스트 유형이나 ID입니다');\r\n        return;\r\n    }\r\n    \r\n    // 컨텍스트 생성\r\n    await createContext(vaultService, contextType, name);\r\n  } catch (error) {\r\n    console.error('컨텍스트/아이템 생성 오류:', error);\r\n    vscode.window.showErrorMessage('컨텍스트 또는 아이템을 생성하는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 새 컨텍스트 생성\r\n */\r\nasync function createContext(vaultService: any, type: VaultContextType, name: string): Promise<void> {\r\n  try {\r\n    // 설명 입력 받기\r\n    const description = await vscode.window.showInputBox({\r\n      prompt: '컨텍스트 설명을 입력하세요 (선택사항)',\r\n      placeHolder: '컨텍스트에 대한 설명'\r\n    });\r\n    \r\n    // 컨텍스트 생성\r\n    const newContext = await vaultService.createContext(name, type, description);\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `${getContextTypeKorean(type)} 컨텍스트 \"${name}\"가 생성되었습니다. (ID: \\`${newContext.id}\\`)`\r\n    });\r\n  } catch (error) {\r\n    console.error('컨텍스트 생성 오류:', error);\r\n    vscode.window.showErrorMessage('컨텍스트를 생성하는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 새 아이템 생성\r\n */\r\nasync function createItem(vaultService: any, context: any, name: string): Promise<void> {\r\n  try {\r\n    // 설명 입력 받기\r\n    const description = await vscode.window.showInputBox({\r\n      prompt: '아이템 설명을 입력하세요 (선택사항)',\r\n      placeHolder: '아이템에 대한 설명'\r\n    });\r\n    \r\n    // 태그 입력 받기\r\n    const tagsInput = await vscode.window.showInputBox({\r\n      prompt: '태그를 입력하세요 (쉼표로 구분, 선택사항)',\r\n      placeHolder: 'tag1, tag2, tag3'\r\n    });\r\n    \r\n    const tags = tagsInput ? tagsInput.split(',').map(tag => tag.trim()) : undefined;\r\n    \r\n    // 내용 입력 받기 (에디터 열기)\r\n    const document = await vscode.workspace.openTextDocument({\r\n      content: '',\r\n      language: 'markdown'\r\n    });\r\n    \r\n    const editor = await vscode.window.showTextDocument(document);\r\n    \r\n    // 사용자가 내용 편집을 완료할 때까지 대기\r\n    const content = await new Promise<string>(resolve => {\r\n      const disposable = vscode.workspace.onDidCloseTextDocument(\r\n        closedDoc => {\r\n          if (closedDoc === document) {\r\n            resolve(document.getText());\r\n            disposable.dispose();\r\n          }\r\n        }\r\n      );\r\n    });\r\n    \r\n    if (!content.trim()) {\r\n      vscode.window.showErrorMessage('아이템 내용이 비어 있습니다. 아이템 생성이 취소되었습니다.');\r\n      return;\r\n    }\r\n    \r\n    // 아이템 생성\r\n    const newItem = await vaultService.createItem(context.id, {\r\n      name,\r\n      description,\r\n      content,\r\n      tags,\r\n      contextType: context.type\r\n    });\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `\"${context.name}\" 컨텍스트에 \"${name}\" 아이템이 생성되었습니다. (ID: \\`${newItem.id}\\`)`\r\n    });\r\n  } catch (error) {\r\n    console.error('아이템 생성 오류:', error);\r\n    vscode.window.showErrorMessage('아이템을 생성하는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 컨텍스트 또는 아이템 삭제\r\n */\r\nasync function deleteContextOrItem(vaultService: any, id: string): Promise<void> {\r\n  try {\r\n    // 컨텍스트인지 확인\r\n    const context = vaultService.getContextById(id);\r\n    \r\n    if (context) {\r\n      // 컨텍스트 삭제 확인\r\n      const confirmed = await vscode.window.showWarningMessage(\r\n        `\"${context.name}\" 컨텍스트를 삭제하시겠습니까? 이 작업은 되돌릴 수 없으며, 포함된 모든 아이템이 함께 삭제됩니다.`,\r\n        { modal: true },\r\n        '삭제'\r\n      );\r\n      \r\n      if (confirmed !== '삭제') {\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: '컨텍스트 삭제가 취소되었습니다.'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // 컨텍스트 삭제\r\n      await vaultService.deleteContext(id);\r\n      \r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `\"${context.name}\" 컨텍스트가 삭제되었습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 아이템 검색\r\n    const allContexts = vaultService.getAllContexts();\r\n    for (const ctx of allContexts) {\r\n      const itemIndex = ctx.items.findIndex((item: any) => item.id === id);\r\n      if (itemIndex !== -1) {\r\n        const item = ctx.items[itemIndex];\r\n        \r\n        // 아이템 삭제 확인\r\n        const confirmed = await vscode.window.showWarningMessage(\r\n          `\"${item.name}\" 아이템을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`,\r\n          { modal: true },\r\n          '삭제'\r\n        );\r\n        \r\n        if (confirmed !== '삭제') {\r\n          await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n            role: 'assistant',\r\n            content: '아이템 삭제가 취소되었습니다.'\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 아이템 삭제\r\n        await vaultService.deleteItem(ctx.id, id);\r\n        \r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: `\"${item.name}\" 아이템이 삭제되었습니다.`\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // 컨텍스트나 아이템을 찾지 못한 경우\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `ID가 \\`${id}\\`인 컨텍스트나 아이템을 찾을 수 없습니다.`\r\n    });\r\n  } catch (error) {\r\n    console.error('컨텍스트/아이템 삭제 오류:', error);\r\n    vscode.window.showErrorMessage('컨텍스트 또는 아이템을 삭제하는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 아이템 검색\r\n */\r\nasync function searchVaultItems(vaultService: any, query: string): Promise<void> {\r\n  try {\r\n    // 아이템 검색\r\n    const items = vaultService.searchItems(query);\r\n    \r\n    if (items.length === 0) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `\"${query}\" 검색어와 일치하는 아이템이 없습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 결과 표시\r\n    let content = `## \"${query}\" 검색 결과\\n\\n`;\r\n    content += `총 ${items.length}개의 아이템이 검색되었습니다.\\n\\n`;\r\n    \r\n    // 아이템 그룹화 (컨텍스트별)\r\n    const groupedItems: Record<string, any[]> = {};\r\n    \r\n    items.forEach((item: any) => {\r\n      if (!groupedItems[item.contextId || 'unknown']) {\r\n        groupedItems[item.contextId || 'unknown'] = [];\r\n      }\r\n      groupedItems[item.contextId || 'unknown'].push(item);\r\n    });\r\n    \r\n    // 컨텍스트별로 표시\r\n    for (const [contextId, ctxItems] of Object.entries(groupedItems)) {\r\n      const context = vaultService.getContextById(contextId);\r\n      \r\n      if (context) {\r\n        content += `### ${context.name} (${getContextTypeKorean(context.type)})\\n\\n`;\r\n        \r\n        ctxItems.forEach((item: any) => {\r\n          content += `- **${item.name}** (ID: \\`${item.id}\\`)`;\r\n          if (item.description) {\r\n            content += ` - ${item.description}`;\r\n          }\r\n          content += '\\n';\r\n          \r\n          if (item.tags && item.tags.length > 0) {\r\n            content += `  - 태그: ${item.tags.join(', ')}\\n`;\r\n          }\r\n          \r\n          // 내용 일부 표시 (최대 100자)\r\n          const previewContent = item.content.length > 100 \r\n            ? item.content.substring(0, 100) + '...' \r\n            : item.content;\r\n          content += `  - 내용 미리보기: ${previewContent.replace(/\\n/g, ' ')}\\n\\n`;\r\n        });\r\n      }\r\n    }\r\n    \r\n    content += '자세히 보려면 `/vault show [아이템ID]` 명령어를 사용하세요.';\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    console.error('아이템 검색 오류:', error);\r\n    vscode.window.showErrorMessage('아이템을 검색하는 중 오류가 발생했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 컨텍스트 유형의 한글 이름 가져오기\r\n */\r\nfunction getContextTypeKorean(type: VaultContextType): string {\r\n  switch (type) {\r\n    case VaultContextType.System: return '시스템';\r\n    case VaultContextType.Project: return '프로젝트';\r\n    case VaultContextType.Personal: return '개인';\r\n    case VaultContextType.Shared: return '공유';\r\n    case VaultContextType.Template: return '템플릿';\r\n    default: return String(type);\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜 포맷팅\r\n */\r\nfunction formatDate(date: Date | string): string {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return d.toLocaleDateString() + ' ' + d.toLocaleTimeString();\r\n}","/**\r\n * Rules 슬래시 커맨드 정의\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { SlashCommand } from './slashCommand';\r\nimport { RulesService } from '../services/rulesService';\r\n\r\n/**\r\n * Rules 슬래시 커맨드 목록 생성\r\n */\r\nexport function createRulesCommands(rulesService: RulesService): SlashCommand[] {\r\n  if (!rulesService) {\r\n    return [];\r\n  }\r\n  \r\n  const commands: SlashCommand[] = [];\r\n  \r\n  // rules 명령어: Rules 관리 기능 제공\r\n  commands.push({\r\n    name: 'rules',\r\n    aliases: ['rule', 'ape-rules', '룰', '규칙', '규칙관리'],\r\n    description: 'APE Rules를 관리합니다 (목록, 활성화, 비활성화, 생성, 삭제)',\r\n    examples: [\r\n      '/rules list', \r\n      '/rules active', \r\n      '/rules inactive', \r\n      '/rules activate 규칙이름', \r\n      '/rules deactivate 규칙이름',\r\n      '/rules create 규칙이름',\r\n      '/rules delete 규칙이름',\r\n      '/rules open 규칙이름',\r\n      '/rules info'\r\n    ],\r\n    category: 'advanced',\r\n    priority: 15,\r\n    execute: async (context) => {\r\n      const subCommand = context.args[0]?.toLowerCase();\r\n\r\n      if (!subCommand) {\r\n        // Rules 하위 명령어 목록 표시 (슬랙/디스코드 스타일 자동완성)\r\n        const rulesSubcommands = [\r\n          { command: 'list', description: '모든 Rules 목록을 표시합니다' },\r\n          { command: 'active', description: '활성화된 Rules 목록을 표시합니다' },\r\n          { command: 'inactive', description: '비활성화된 Rules 목록을 표시합니다' },\r\n          { command: 'activate', description: '지정한 Rule을 활성화합니다' },\r\n          { command: 'deactivate', description: '지정한 Rule을 비활성화합니다' },\r\n          { command: 'create', description: '새 Rule을 생성합니다' },\r\n          { command: 'delete', description: '지정한 Rule을 삭제합니다' },\r\n          { command: 'open', description: '지정한 Rule 파일을 엽니다' },\r\n          { command: 'info', description: 'Rules 시스템 정보를 표시합니다' }\r\n        ];\r\n\r\n        // 명령어 제안을 채팅 인터페이스의 자동완성 UI에 표시\r\n        const suggestions = rulesSubcommands.map(cmd => ({\r\n          label: `/rules ${cmd.command}`,\r\n          description: cmd.description,\r\n          category: 'advanced',\r\n          insertText: `/rules ${cmd.command} `\r\n        }));\r\n\r\n        // 명령어 제안 표시 - 채팅 입력창 자동완성 UI에 표시\r\n        vscode.commands.executeCommand('ape.showCommandSuggestions', suggestions);\r\n\r\n        // VSCode의 퀵픽 UI도 함께 표시 (백업 방법)\r\n        vscode.window.showQuickPick(\r\n          rulesSubcommands.map(cmd => ({\r\n            label: cmd.command,\r\n            description: cmd.description,\r\n            detail: `Rules 하위 명령어: ${cmd.command}`\r\n          })),\r\n          {\r\n            placeHolder: 'Rules 명령어를 선택하세요',\r\n            matchOnDescription: true\r\n          }\r\n        ).then(selected => {\r\n          if (selected) {\r\n            // 선택한 명령어를 채팅 입력창에 삽입\r\n            vscode.commands.executeCommand('ape.insertToChatInput', `/rules ${selected.label}`);\r\n          }\r\n        });\r\n      } else if (subCommand === 'list' || subCommand === '목록') {\r\n        // Rules 목록 표시\r\n        await listRules(rulesService);\r\n      } else if (subCommand === 'active' || subCommand === '활성' || subCommand === '활성화목록') {\r\n        // 활성화된 Rules 목록 표시\r\n        await listActiveRules(rulesService);\r\n      } else if (subCommand === 'inactive' || subCommand === '비활성' || subCommand === '비활성화목록') {\r\n        // 비활성화된 Rules 목록 표시\r\n        await listInactiveRules(rulesService);\r\n      } else if (subCommand === 'activate' || subCommand === '활성화') {\r\n        // Rule 활성화\r\n        const ruleName = context.args.slice(1).join(' ');\r\n        if (ruleName) {\r\n          await activateRule(rulesService, ruleName);\r\n        } else {\r\n          vscode.window.showErrorMessage('활성화할 Rule 이름을 지정해주세요');\r\n        }\r\n      } else if (subCommand === 'deactivate' || subCommand === '비활성화') {\r\n        // Rule 비활성화\r\n        const ruleName = context.args.slice(1).join(' ');\r\n        if (ruleName) {\r\n          await deactivateRule(rulesService, ruleName);\r\n        } else {\r\n          vscode.window.showErrorMessage('비활성화할 Rule 이름을 지정해주세요');\r\n        }\r\n      } else if (subCommand === 'create' || subCommand === '생성' || subCommand === '만들기') {\r\n        // Rule 생성\r\n        const ruleName = context.args.slice(1).join(' ');\r\n        if (ruleName) {\r\n          await createRule(rulesService, ruleName);\r\n        } else {\r\n          vscode.window.showErrorMessage('새 Rule 이름을 지정해주세요');\r\n        }\r\n      } else if (subCommand === 'delete' || subCommand === '삭제') {\r\n        // Rule 삭제\r\n        const ruleName = context.args.slice(1).join(' ');\r\n        if (ruleName) {\r\n          await deleteRule(rulesService, ruleName);\r\n        } else {\r\n          vscode.window.showErrorMessage('삭제할 Rule 이름을 지정해주세요');\r\n        }\r\n      } else if (subCommand === 'open' || subCommand === '열기') {\r\n        // Rule 파일 열기\r\n        const ruleName = context.args.slice(1).join(' ');\r\n        if (ruleName) {\r\n          await openRuleFile(rulesService, ruleName);\r\n        } else {\r\n          vscode.window.showErrorMessage('열 Rule 이름을 지정해주세요');\r\n        }\r\n      } else if (subCommand === 'info' || subCommand === '정보') {\r\n        // Rules 정보 표시\r\n        await showRulesInfo(rulesService);\r\n      } else {\r\n        vscode.window.showErrorMessage(`알 수 없는 Rules 하위 명령어입니다: ${subCommand}`);\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs: string) => {\r\n      const subCommands = [\r\n        'list', 'active', 'inactive', 'activate', 'deactivate', 'create', 'delete', 'open', 'info',\r\n        '목록', '활성', '비활성', '활성화', '비활성화', '생성', '만들기', '삭제', '열기', '정보'\r\n      ];\r\n      \r\n      const parts = partialArgs.split(' ');\r\n      \r\n      // 첫 번째 인자 자동완성 (하위 명령어)\r\n      if (parts.length <= 1) {\r\n        return subCommands.filter(cmd => \r\n          cmd.toLowerCase().startsWith(parts[0]?.toLowerCase() || '')\r\n        );\r\n      }\r\n      \r\n      // 두 번째 인자 자동완성 (Rule 이름)\r\n      if (parts.length === 2 && ['activate', 'deactivate', 'delete', 'open', '활성화', '비활성화', '삭제', '열기'].includes(parts[0])) {\r\n        // 현재는 비어있는 배열 반환\r\n        // 모든 활성화된/비활성화된 Rule 목록을 가져오는 방법은 아직 구현되지 않음\r\n        return [];\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n  \r\n  \r\n  return commands;\r\n}\r\n\r\n/**\r\n * Rules 목록 표시\r\n */\r\nasync function listRules(rulesService: RulesService): Promise<void> {\r\n  try {\r\n    const rules = rulesService.getAllRules();\r\n    \r\n    if (rules.length === 0) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: '등록된 Rule이 없습니다. `/rules create 이름`으로 새 Rule을 생성하세요.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    let content = '## APE Rules 목록\\n\\n';\r\n    \r\n    // 활성화된 Rules 먼저 표시\r\n    const activeRules = rules.filter(rule => rule.status === 'active');\r\n    const inactiveRules = rules.filter(rule => rule.status === 'inactive');\r\n    \r\n    if (activeRules.length > 0) {\r\n      content += '### 🟢 활성화된 Rules\\n\\n';\r\n      activeRules.forEach(rule => {\r\n        content += `- **${rule.name}** - \\`${rule.id}.md\\`\\n`;\r\n      });\r\n      content += '\\n';\r\n    }\r\n    \r\n    if (inactiveRules.length > 0) {\r\n      content += '### ⚪ 비활성화된 Rules\\n\\n';\r\n      inactiveRules.forEach(rule => {\r\n        content += `- **${rule.name}** - \\`${rule.id}.md\\`\\n`;\r\n      });\r\n      content += '\\n';\r\n    }\r\n    \r\n    content += '\\n**Rules 관리 명령어**:\\n';\r\n    content += '- `/rules activate 규칙이름` - Rule 활성화\\n';\r\n    content += '- `/rules deactivate 규칙이름` - Rule 비활성화\\n';\r\n    content += '- `/rules create 규칙이름` - 새 Rule 생성\\n';\r\n    content += '- `/rules delete 규칙이름` - Rule 삭제\\n';\r\n    content += '- `/rules open 규칙이름` - Rule 파일 열기\\n';\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rules 목록 조회 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 활성화된 Rules 목록 표시\r\n */\r\nasync function listActiveRules(rulesService: RulesService): Promise<void> {\r\n  try {\r\n    const activeRules = rulesService.getActiveRules();\r\n    \r\n    if (activeRules.length === 0) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: '현재 활성화된 Rule이 없습니다. `/rules activate 이름`으로 Rule을 활성화하세요.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    let content = '## 🟢 활성화된 APE Rules\\n\\n';\r\n    \r\n    activeRules.forEach(rule => {\r\n      // 첫 100자 내용만 표시\r\n      const previewContent = rule.content.length > 100 \r\n        ? rule.content.substring(0, 100) + '...' \r\n        : rule.content;\r\n      \r\n      content += `### ${rule.name}\\n\\n`;\r\n      content += `- **ID**: \\`${rule.id}\\`\\n`;\r\n      content += `- **파일**: \\`${rule.filePath.split('/').pop()}\\`\\n`;\r\n      content += `- **내용 미리보기**:\\n\\n\\`\\`\\`\\n${previewContent}\\n\\`\\`\\`\\n\\n`;\r\n    });\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`활성화된 Rules 목록 조회 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 비활성화된 Rules 목록 표시\r\n */\r\nasync function listInactiveRules(rulesService: RulesService): Promise<void> {\r\n  try {\r\n    const allRules = rulesService.getAllRules();\r\n    const activeRules = rulesService.getActiveRules();\r\n    \r\n    const inactiveRules = allRules.filter(rule => \r\n      !activeRules.some(activeRule => activeRule.id === rule.id)\r\n    );\r\n    \r\n    if (inactiveRules.length === 0) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: '현재 비활성화된 Rule이 없습니다. 모든 Rules가 활성화 상태입니다.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    let content = '## ⚪ 비활성화된 APE Rules\\n\\n';\r\n    \r\n    inactiveRules.forEach(rule => {\r\n      // 첫 100자 내용만 표시\r\n      const previewContent = rule.content.length > 100 \r\n        ? rule.content.substring(0, 100) + '...' \r\n        : rule.content;\r\n      \r\n      content += `### ${rule.name}\\n\\n`;\r\n      content += `- **ID**: \\`${rule.id}\\`\\n`;\r\n      content += `- **파일**: \\`${rule.filePath.split('/').pop()}\\`\\n`;\r\n      content += `- **내용 미리보기**:\\n\\n\\`\\`\\`\\n${previewContent}\\n\\`\\`\\`\\n\\n`;\r\n    });\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`비활성화된 Rules 목록 조회 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Rule 활성화\r\n */\r\nasync function activateRule(rulesService: RulesService, ruleName: string): Promise<void> {\r\n  try {\r\n    const rules = rulesService.getAllRules();\r\n    \r\n    // 이름 또는 ID로 Rule 찾기\r\n    const rule = rules.find(r => \r\n      r.name.toLowerCase() === ruleName.toLowerCase() || \r\n      r.id.toLowerCase() === ruleName.toLowerCase()\r\n    );\r\n    \r\n    if (!rule) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${ruleName}' 이름 또는 ID를 가진 Rule을 찾을 수 없습니다. '/rules list'로 사용 가능한 Rules를 확인하세요.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 이미 활성화된 경우\r\n    if (rule.status === 'active') {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${rule.name}' Rule은 이미 활성화되어 있습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Rule 활성화\r\n    await rulesService.activateRule(rule.id);\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `'${rule.name}' Rule이 활성화되었습니다. 이제 LLM 시스템 프롬프트에 적용됩니다.`\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rule 활성화 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Rule 비활성화\r\n */\r\nasync function deactivateRule(rulesService: RulesService, ruleName: string): Promise<void> {\r\n  try {\r\n    const rules = rulesService.getAllRules();\r\n    \r\n    // 이름 또는 ID로 Rule 찾기\r\n    const rule = rules.find(r => \r\n      r.name.toLowerCase() === ruleName.toLowerCase() || \r\n      r.id.toLowerCase() === ruleName.toLowerCase()\r\n    );\r\n    \r\n    if (!rule) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${ruleName}' 이름 또는 ID를 가진 Rule을 찾을 수 없습니다. '/rules list'로 사용 가능한 Rules를 확인하세요.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 이미 비활성화된 경우\r\n    if (rule.status === 'inactive') {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${rule.name}' Rule은 이미 비활성화되어 있습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Rule 비활성화\r\n    await rulesService.deactivateRule(rule.id);\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `'${rule.name}' Rule이 비활성화되었습니다. 더 이상 LLM 시스템 프롬프트에 적용되지 않습니다.`\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rule 비활성화 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 새 Rule 생성\r\n */\r\nasync function createRule(rulesService: RulesService, ruleName: string): Promise<void> {\r\n  try {\r\n    // Rule 내용 템플릿\r\n    const ruleContent = `# ${ruleName}\\n\\n여기에 LLM에 적용할 규칙 내용을 작성하세요.\\n\\n규칙은 마크다운 형식으로 작성됩니다.\\n\\n## 예시\\n\\n1. 항상 코드에 주석을 추가해주세요.\\n2. 응답은 간결하게 유지해주세요.\\n3. 에러 처리를 항상 포함해주세요.`;\r\n    \r\n    // Rule 생성\r\n    const rule = await rulesService.createRule(ruleName, ruleContent, false);\r\n    \r\n    // Rule 파일 열기\r\n    await rulesService.openRuleFile(rule.id);\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `'${rule.name}' Rule이 생성되었습니다. 파일을 수정한 후 저장하고, '/rules activate ${rule.name}'로 활성화할 수 있습니다.`\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rule 생성 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Rule 삭제\r\n */\r\nasync function deleteRule(rulesService: RulesService, ruleName: string): Promise<void> {\r\n  try {\r\n    const rules = rulesService.getAllRules();\r\n    \r\n    // 이름 또는 ID로 Rule 찾기\r\n    const rule = rules.find(r => \r\n      r.name.toLowerCase() === ruleName.toLowerCase() || \r\n      r.id.toLowerCase() === ruleName.toLowerCase()\r\n    );\r\n    \r\n    if (!rule) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${ruleName}' 이름 또는 ID를 가진 Rule을 찾을 수 없습니다. '/rules list'로 사용 가능한 Rules를 확인하세요.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 삭제 확인 (프롬프트 대화상자 사용)\r\n    const confirmation = await vscode.window.showWarningMessage(\r\n      `'${rule.name}' Rule을 삭제하시겠습니까?`,\r\n      { modal: true },\r\n      '삭제',\r\n      '취소'\r\n    );\r\n    \r\n    if (confirmation !== '삭제') {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${rule.name}' Rule 삭제가 취소되었습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Rule 삭제\r\n    await rulesService.deleteRule(rule.id);\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `'${rule.name}' Rule이 삭제되었습니다.`\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rule 삭제 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Rule 파일 열기\r\n */\r\nasync function openRuleFile(rulesService: RulesService, ruleName: string): Promise<void> {\r\n  try {\r\n    const rules = rulesService.getAllRules();\r\n    \r\n    // 이름 또는 ID로 Rule 찾기\r\n    const rule = rules.find(r => \r\n      r.name.toLowerCase() === ruleName.toLowerCase() || \r\n      r.id.toLowerCase() === ruleName.toLowerCase()\r\n    );\r\n    \r\n    if (!rule) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `'${ruleName}' 이름 또는 ID를 가진 Rule을 찾을 수 없습니다. '/rules list'로 사용 가능한 Rules를 확인하세요.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Rule 파일 열기\r\n    await rulesService.openRuleFile(rule.id);\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `'${rule.name}' Rule 파일이 열렸습니다.`\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rule 파일 열기 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Rules 정보 표시\r\n */\r\nasync function showRulesInfo(rulesService: RulesService): Promise<void> {\r\n  try {\r\n    const rules = rulesService.getAllRules();\r\n    const activeRules = rulesService.getActiveRules();\r\n    \r\n    let content = '## APE Rules 정보\\n\\n';\r\n    \r\n    content += `- **총 Rules 수**: ${rules.length}개\\n`;\r\n    content += `- **활성화된 Rules**: ${activeRules.length}개\\n`;\r\n    content += `- **비활성화된 Rules**: ${rules.length - activeRules.length}개\\n\\n`;\r\n    \r\n    content += '### Rules 시스템에 대하여\\n\\n';\r\n    content += 'APE Rules는 LLM에 적용되는 규칙을 관리하는 시스템입니다. 각 Rule은 마크다운 형식의 파일로 저장되며, 활성화된 Rules는 LLM 시스템 프롬프트에 자동으로 추가됩니다.\\n\\n';\r\n    \r\n    content += '### 주요 기능\\n\\n';\r\n    content += '- **목록 보기**: `/rules list` - 모든 Rules 목록 표시\\n';\r\n    content += '- **활성화된 Rules**: `/rules active` - 활성화된 Rules 목록 표시\\n';\r\n    content += '- **비활성화된 Rules**: `/rules inactive` - 비활성화된 Rules 목록 표시\\n';\r\n    content += '- **Rule 활성화**: `/rules activate 이름` - 지정한 Rule 활성화\\n';\r\n    content += '- **Rule 비활성화**: `/rules deactivate 이름` - 지정한 Rule 비활성화\\n';\r\n    content += '- **Rule 생성**: `/rules create 이름` - 새 Rule 생성\\n';\r\n    content += '- **Rule 삭제**: `/rules delete 이름` - 지정한 Rule 삭제\\n';\r\n    content += '- **Rule 파일 열기**: `/rules open 이름` - 지정한 Rule 파일 열기\\n';\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Rules 정보 표시 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}","/**\r\n * 서비스 결과 모듈\r\n * \r\n * 외부 서비스 호출의 결과를 표준화된 형식으로 처리하는 인터페이스 정의\r\n * 성공/실패 여부, 데이터, 오류 정보를 일관된 방식으로 관리\r\n */\r\n\r\nimport { IServiceError } from './serviceError';\r\n\r\n/**\r\n * 서비스 호출 결과 인터페이스\r\n * \r\n * @template T 결과 데이터 타입\r\n */\r\nexport interface ServiceResult<T> {\r\n  /** 성공 여부 */\r\n  success: boolean;\r\n  \r\n  /** 결과 데이터 (성공 시) */\r\n  data?: T;\r\n  \r\n  /** 오류 정보 (실패 시) */\r\n  error?: IServiceError;\r\n}\r\n\r\n/**\r\n * 성공 결과 생성 유틸리티 함수\r\n * \r\n * @param data 결과 데이터\r\n * @returns 성공 결과 객체\r\n */\r\nexport function createSuccessResult<T>(data: T): ServiceResult<T> {\r\n  return {\r\n    success: true,\r\n    data\r\n  };\r\n}\r\n\r\n/**\r\n * 실패 결과 생성 유틸리티 함수\r\n * \r\n * @param error 오류 정보\r\n * @returns 실패 결과 객체\r\n */\r\nexport function createErrorResult<T>(error: IServiceError): ServiceResult<T> {\r\n  return {\r\n    success: false,\r\n    error\r\n  };\r\n}","/**\r\n * Jira 서비스\r\n * \r\n * Jira API를 사용하여 이슈 정보를 조회하고 관리하는 서비스입니다.\r\n * 내부망 Jira 서버와 통신하며, 실제 서버를 사용할 수 없는 경우 모의(Mock) 데이터를 사용합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\r\nimport { ServiceConfigManager, ServiceType, AuthType } from './serviceConfig';\r\nimport { ServiceErrorType, ServiceErrorManager } from './serviceError';\r\nimport { ServiceResult, createSuccessResult, createErrorResult } from './serviceResult';\r\nimport { randomUUID } from 'crypto';\r\n\r\n/**\r\n * Jira 이슈 상태 유형\r\n */\r\nexport enum JiraIssueStatus {\r\n  ToDo = 'todo',\r\n  InProgress = 'in-progress',\r\n  Done = 'done',\r\n  InReview = 'in-review',\r\n  Blocked = 'blocked',\r\n  Unknown = 'unknown'\r\n}\r\n\r\n/**\r\n * Jira 이슈 정보 인터페이스\r\n */\r\nexport interface JiraIssue {\r\n  id: string;\r\n  key: string;\r\n  summary: string;\r\n  description?: string;\r\n  status: JiraIssueStatus;\r\n  assignee?: {\r\n    name: string;\r\n    displayName: string;\r\n    email?: string;\r\n  };\r\n  reporter?: {\r\n    name: string;\r\n    displayName: string;\r\n    email?: string;\r\n  };\r\n  created: string;\r\n  updated: string;\r\n  dueDate?: string;\r\n  priority?: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n  labels?: string[];\r\n  components?: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n  project?: {\r\n    id: string;\r\n    key: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Jira 검색 조건 인터페이스\r\n */\r\nexport interface JiraSearchCriteria {\r\n  projectKey?: string;\r\n  assignee?: string;\r\n  reporter?: string;\r\n  status?: JiraIssueStatus | JiraIssueStatus[];\r\n  labels?: string[];\r\n  components?: string[];\r\n  text?: string;\r\n  createdAfter?: string;\r\n  updatedAfter?: string;\r\n  maxResults?: number;\r\n  startAt?: number;\r\n}\r\n\r\n/**\r\n * Jira 검색 결과 인터페이스\r\n */\r\nexport interface JiraSearchResult {\r\n  issues: JiraIssue[];\r\n  total: number;\r\n  startAt: number;\r\n  maxResults: number;\r\n  hasMore: boolean;\r\n}\r\n\r\n/**\r\n * Jira 요약 정보 인터페이스\r\n */\r\nexport interface JiraSummary {\r\n  totalIssues: number;\r\n  issuesByStatus: Record<JiraIssueStatus, number>;\r\n  issuesByAssignee: Record<string, number>;\r\n  issuesByPriority: Record<string, number>;\r\n  recentIssues: JiraIssue[];\r\n  oldestUnresolvedIssues: JiraIssue[];\r\n  averageResolutionTime?: number; // 밀리초 단위, 해결된 이슈의 평균 해결 시간\r\n  projectStats?: {\r\n    projectKey: string;\r\n    totalIssues: number; \r\n    openIssues: number;\r\n    percentComplete: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Jira 서비스 오류 유형\r\n */\r\nexport enum JiraErrorType {\r\n  ConnectionFailed = 'connection_failed',\r\n  AuthenticationFailed = 'authentication_failed',\r\n  PermissionDenied = 'permission_denied',\r\n  ResourceNotFound = 'resource_not_found',\r\n  ServerError = 'server_error',\r\n  InvalidRequest = 'invalid_request',\r\n  Unknown = 'unknown'\r\n}\r\n\r\n/**\r\n * Jira 서비스 오류 인터페이스\r\n */\r\nexport interface JiraError {\r\n  type: JiraErrorType;\r\n  message: string;\r\n  details?: any;\r\n}\r\n\r\n/**\r\n * Jira 서비스 클래스\r\n */\r\nexport class JiraService implements vscode.Disposable {\r\n  private baseUrl: string = '';\r\n  private apiPath: string = '/rest/api/2';\r\n  private username: string = '';\r\n  private password: string = '';\r\n  private token: string = '';\r\n  private authType: AuthType = AuthType.Basic;\r\n  private useMock: boolean = true;\r\n  private disposables: vscode.Disposable[] = [];\r\n  private _lastError: JiraError | null = null;\r\n  \r\n  /**\r\n   * Jira 서비스 생성자\r\n   * @param context VSCode 확장 컨텍스트\r\n   * @param serviceConfigManager 서비스 설정 관리자 (선택적)\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly serviceConfigManager?: ServiceConfigManager\r\n  ) {\r\n    // 설정 로드\r\n    this.loadConfiguration();\r\n    \r\n    // 설정 변경 감지\r\n    this.disposables.push(\r\n      vscode.workspace.onDidChangeConfiguration(e => {\r\n        if (e.affectsConfiguration('ape.jira')) {\r\n          this.loadConfiguration();\r\n        }\r\n      })\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * 설정 다시 로드\r\n   */\r\n  private loadConfiguration(): void {\r\n    if (this.serviceConfigManager) {\r\n      // 서비스 설정 관리자를 사용하여 설정 로드\r\n      const config = this.serviceConfigManager.getServiceConfig(ServiceType.Jira);\r\n      this.baseUrl = config.url;\r\n      this.authType = config.authType;\r\n      this.username = config.username || '';\r\n      this.password = config.password || '';\r\n      this.token = config.token || '';\r\n      this.useMock = config.useMock;\r\n      \r\n      // 추가 파라미터에서 API 경로 가져오기\r\n      const additionalParams = config.additionalParams || {};\r\n      this.apiPath = additionalParams.apiPath || '/rest/api/2';\r\n    } else {\r\n      // 직접 VSCode 설정에서 로드\r\n      const config = vscode.workspace.getConfiguration('ape.jira');\r\n      this.baseUrl = config.get('url', '');\r\n      this.apiPath = config.get('apiPath', '/rest/api/2');\r\n      this.username = config.get('username', '');\r\n      this.password = config.get('password', '');\r\n      this.token = config.get('token', '');\r\n      this.authType = config.get('authType', AuthType.Basic);\r\n      this.useMock = config.get('useMock', false);\r\n    }\r\n    \r\n    // 필수 설정이 없으면 모의 모드 강제 활성화\r\n    if (!this.baseUrl || (this.authType === AuthType.Basic && (!this.username || !this.password)) || \r\n        (this.authType === AuthType.Token && !this.token)) {\r\n      this.useMock = true;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 마지막 오류 가져오기\r\n   */\r\n  public get lastError(): JiraError | null {\r\n    return this._lastError;\r\n  }\r\n  \r\n  /**\r\n   * 이슈 조회\r\n   * @param issueKey Jira 이슈 키 (예: 'APE-123')\r\n   * @returns Jira 이슈 정보를 포함한 서비스 결과\r\n   */\r\n  public async getIssue(issueKey: string): Promise<ServiceResult<JiraIssue>> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 모의 모드인 경우 모의 데이터 반환\r\n      if (this.useMock) {\r\n        const mockIssue = this.getMockIssue(issueKey);\r\n        return createSuccessResult(mockIssue);\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('Jira 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('Jira 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('Jira 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      // Jira REST API 엔드포인트\r\n      const url = `${this.baseUrl}${this.apiPath}/issue/${issueKey}`;\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {};\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // API 요청 실행\r\n      const response = await axios.get(url, config);\r\n      \r\n      // 응답 데이터 파싱\r\n      const issue = this.parseJiraIssue(response.data);\r\n      \r\n      return createSuccessResult(issue);\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error, issueKey);\r\n      \r\n      // 오류 로그\r\n      console.error(`Jira 이슈 조회 실패 (${issueKey}):`, error);\r\n      \r\n      // 오류 결과 생성\r\n      let serviceError;\r\n      \r\n      if (this._lastError) {\r\n        // JiraError를 IServiceError로 변환\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          this._lastError.type as unknown as ServiceErrorType,\r\n          this._lastError.message,\r\n          this._lastError.details\r\n        );\r\n      } else {\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          ServiceErrorType.Unknown,\r\n          error instanceof Error ? error.message : String(error)\r\n        );\r\n      }\r\n      \r\n      return createErrorResult(serviceError);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Jira 이슈 생성\r\n   * @param issueData 이슈 데이터\r\n   * @returns 생성된 이슈 정보를 포함한 서비스 결과\r\n   */\r\n  public async createIssue(issueData: {\r\n    projectKey: string;\r\n    issueType: string;\r\n    summary: string;\r\n    description?: string;\r\n    assignee?: string;\r\n    components?: string[];\r\n    labels?: string[];\r\n    dueDate?: string;\r\n  }): Promise<ServiceResult<JiraIssue>> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 모의 모드인 경우 모의 데이터 반환\r\n      if (this.useMock) {\r\n        const mockIssue = this.getMockIssue(`${issueData.projectKey}-${Math.floor(Math.random() * 1000)}`);\r\n        return createSuccessResult(mockIssue);\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('Jira 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('Jira 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('Jira 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      // Jira REST API 엔드포인트\r\n      const url = `${this.baseUrl}${this.apiPath}/issue`;\r\n      \r\n      // 필수 필드 확인\r\n      if (!issueData.projectKey) {\r\n        throw new Error('Jira 프로젝트 키가 필요합니다.');\r\n      }\r\n      \r\n      if (!issueData.issueType) {\r\n        throw new Error('Jira 이슈 유형이 필요합니다.');\r\n      }\r\n      \r\n      if (!issueData.summary) {\r\n        throw new Error('Jira 이슈 요약이 필요합니다.');\r\n      }\r\n      \r\n      // 요청 데이터 구성\r\n      const requestData = {\r\n        fields: {\r\n          project: {\r\n            key: issueData.projectKey\r\n          },\r\n          issuetype: {\r\n            name: issueData.issueType\r\n          },\r\n          summary: issueData.summary,\r\n          description: issueData.description || '',\r\n          assignee: issueData.assignee ? { name: issueData.assignee } : undefined,\r\n          components: issueData.components?.map(name => ({ name })),\r\n          labels: issueData.labels,\r\n          duedate: issueData.dueDate\r\n        }\r\n      };\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {};\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // API 요청 실행\r\n      const response = await axios.post(url, requestData, config);\r\n      \r\n      // 생성된 이슈 ID로 이슈 조회\r\n      const issueKey = response.data.key;\r\n      const issueResult = await this.getIssue(issueKey);\r\n      \r\n      if (issueResult.success && issueResult.data) {\r\n        return createSuccessResult(issueResult.data);\r\n      } else {\r\n        // 이슈를 찾지 못한 경우 기본 정보만 반환\r\n        const basicIssue: JiraIssue = {\r\n          id: '0',\r\n          key: issueKey,\r\n          summary: issueData.summary,\r\n          description: issueData.description || '',\r\n          status: JiraIssueStatus.ToDo,\r\n          created: new Date().toISOString(),\r\n          updated: new Date().toISOString()\r\n        };\r\n        return createSuccessResult(basicIssue);\r\n      }\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error);\r\n      \r\n      // 오류 로그\r\n      console.error('Jira 이슈 생성 실패:', error);\r\n      \r\n      // 오류 결과 생성\r\n      let serviceError;\r\n      \r\n      if (this._lastError) {\r\n        // JiraError를 IServiceError로 변환\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          this._lastError.type as unknown as ServiceErrorType,\r\n          this._lastError.message,\r\n          this._lastError.details\r\n        );\r\n      } else {\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          ServiceErrorType.Unknown,\r\n          error instanceof Error ? error.message : String(error)\r\n        );\r\n      }\r\n      \r\n      return createErrorResult(serviceError);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Jira 이슈 상태 변경\r\n   * @param issueKey Jira 이슈 키 (예: 'APE-123')\r\n   * @param status 변경할 상태\r\n   * @returns 성공 여부를 포함한 서비스 결과\r\n   */\r\n  public async updateIssueStatus(issueKey: string, status: JiraIssueStatus): Promise<ServiceResult<boolean>> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 모의 모드인 경우 성공 반환\r\n      if (this.useMock) {\r\n        return createSuccessResult(true);\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('Jira 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('Jira 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('Jira 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      // 이슈 전환에 필요한 트랜지션 ID 조회\r\n      const transitionId = await this.getTransitionIdForStatus(issueKey, status);\r\n      \r\n      if (!transitionId) {\r\n        throw new Error(`이슈 ${issueKey}에 대해 상태 '${status}'로의 전환이 허용되지 않습니다.`);\r\n      }\r\n      \r\n      // Jira REST API 엔드포인트\r\n      const url = `${this.baseUrl}${this.apiPath}/issue/${issueKey}/transitions`;\r\n      \r\n      // 요청 데이터 구성\r\n      const requestData = {\r\n        transition: {\r\n          id: transitionId\r\n        }\r\n      };\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {};\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // API 요청 실행\r\n      await axios.post(url, requestData, config);\r\n      \r\n      return createSuccessResult(true);\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error, issueKey);\r\n      \r\n      // 오류 로그\r\n      console.error(`Jira 이슈 상태 변경 실패 (${issueKey}):`, error);\r\n      \r\n      // 오류 결과 생성\r\n      let serviceError;\r\n      \r\n      if (this._lastError) {\r\n        // JiraError를 IServiceError로 변환\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          this._lastError.type as unknown as ServiceErrorType,\r\n          this._lastError.message,\r\n          this._lastError.details\r\n        );\r\n      } else {\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          ServiceErrorType.Unknown,\r\n          error instanceof Error ? error.message : String(error)\r\n        );\r\n      }\r\n      \r\n      return createErrorResult(serviceError);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Jira 이슈 검색\r\n   * @param criteria 검색 조건\r\n   * @returns 검색 결과를 포함한 서비스 결과\r\n   */\r\n  public async searchIssues(criteria: JiraSearchCriteria): Promise<ServiceResult<JiraSearchResult>> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 기본값 설정\r\n      const maxResults = criteria.maxResults || 50;\r\n      const startAt = criteria.startAt || 0;\r\n      \r\n      // 모의 모드인 경우 모의 데이터 반환\r\n      if (this.useMock) {\r\n        const mockResult = this.getMockSearchResult(criteria);\r\n        return createSuccessResult(mockResult);\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('Jira 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('Jira 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('Jira 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      // JQL 검색 쿼리 구성\r\n      const jql = this.buildJqlQuery(criteria);\r\n      \r\n      // Jira REST API 엔드포인트\r\n      const url = `${this.baseUrl}${this.apiPath}/search`;\r\n      \r\n      // 요청 데이터 구성\r\n      const requestData = {\r\n        jql,\r\n        startAt,\r\n        maxResults,\r\n        fields: [\r\n          'summary',\r\n          'description',\r\n          'status',\r\n          'assignee',\r\n          'reporter',\r\n          'created',\r\n          'updated',\r\n          'duedate',\r\n          'priority',\r\n          'labels',\r\n          'components',\r\n          'project'\r\n        ]\r\n      };\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {\r\n        params: {\r\n          jql,\r\n          startAt,\r\n          maxResults,\r\n          fields: 'summary,description,status,assignee,reporter,created,updated,duedate,priority,labels,components,project'\r\n        }\r\n      };\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // API 요청 실행\r\n      const response = await axios.get(url, config);\r\n      \r\n      // 응답 데이터 파싱\r\n      const data = response.data;\r\n      const issues = (data.issues || []).map((issue: any) => this.parseJiraIssue(issue));\r\n      \r\n      const result: JiraSearchResult = {\r\n        issues,\r\n        total: data.total || 0,\r\n        startAt: data.startAt || 0,\r\n        maxResults: data.maxResults || maxResults,\r\n        hasMore: (data.startAt + issues.length) < data.total\r\n      };\r\n      \r\n      return createSuccessResult(result);\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error);\r\n      \r\n      // 오류 로그\r\n      console.error('Jira 이슈 검색 실패:', error);\r\n      \r\n      // 오류 결과 생성\r\n      let serviceError;\r\n      \r\n      if (this._lastError) {\r\n        // JiraError를 IServiceError로 변환\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          this._lastError.type as unknown as ServiceErrorType,\r\n          this._lastError.message,\r\n          this._lastError.details\r\n        );\r\n      } else {\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          ServiceErrorType.Unknown,\r\n          error instanceof Error ? error.message : String(error)\r\n        );\r\n      }\r\n      \r\n      return createErrorResult(serviceError);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * JQL 검색 쿼리 구성\r\n   * @param criteria 검색 조건\r\n   * @returns JQL 쿼리 문자열\r\n   * @private\r\n   */\r\n  private buildJqlQuery(criteria: JiraSearchCriteria): string {\r\n    const conditions: string[] = [];\r\n    \r\n    // 프로젝트 필터\r\n    if (criteria.projectKey) {\r\n      conditions.push(`project = \"${criteria.projectKey}\"`);\r\n    }\r\n    \r\n    // 담당자 필터\r\n    if (criteria.assignee) {\r\n      conditions.push(`assignee = \"${criteria.assignee}\"`);\r\n    }\r\n    \r\n    // 보고자 필터\r\n    if (criteria.reporter) {\r\n      conditions.push(`reporter = \"${criteria.reporter}\"`);\r\n    }\r\n    \r\n    // 상태 필터\r\n    if (criteria.status) {\r\n      if (Array.isArray(criteria.status)) {\r\n        if (criteria.status.length > 0) {\r\n          const statuses = criteria.status.map(s => `\"${s}\"`).join(',');\r\n          conditions.push(`status IN (${statuses})`);\r\n        }\r\n      } else {\r\n        conditions.push(`status = \"${criteria.status}\"`);\r\n      }\r\n    }\r\n    \r\n    // 라벨 필터\r\n    if (criteria.labels && criteria.labels.length > 0) {\r\n      const labelConditions = criteria.labels.map(label => `labels = \"${label}\"`).join(' AND ');\r\n      conditions.push(`(${labelConditions})`);\r\n    }\r\n    \r\n    // 컴포넌트 필터\r\n    if (criteria.components && criteria.components.length > 0) {\r\n      const componentConditions = criteria.components.map(component => `component = \"${component}\"`).join(' OR ');\r\n      conditions.push(`(${componentConditions})`);\r\n    }\r\n    \r\n    // 텍스트 검색 필터\r\n    if (criteria.text) {\r\n      conditions.push(`(summary ~ \"${criteria.text}\" OR description ~ \"${criteria.text}\")`);\r\n    }\r\n    \r\n    // 생성일 필터\r\n    if (criteria.createdAfter) {\r\n      conditions.push(`created >= \"${criteria.createdAfter}\"`);\r\n    }\r\n    \r\n    // 수정일 필터\r\n    if (criteria.updatedAfter) {\r\n      conditions.push(`updated >= \"${criteria.updatedAfter}\"`);\r\n    }\r\n    \r\n    // 조건이 없으면 모든 이슈 검색\r\n    if (conditions.length === 0) {\r\n      return 'order by created DESC';\r\n    }\r\n    \r\n    // 최종 JQL 쿼리 반환\r\n    return `${conditions.join(' AND ')} order by created DESC`;\r\n  }\r\n  \r\n  /**\r\n   * 모의 검색 결과 생성\r\n   * @param criteria 검색 조건\r\n   * @returns 모의 검색 결과\r\n   * @private\r\n   */\r\n  private getMockSearchResult(criteria: JiraSearchCriteria): JiraSearchResult {\r\n    // 최대 결과 수 및 시작 위치 설정\r\n    const maxResults = criteria.maxResults || 50;\r\n    const startAt = criteria.startAt || 0;\r\n    \r\n    // 모의 이슈 생성\r\n    const mockIssues: JiraIssue[] = [];\r\n    const totalIssues = 100; // 모의 데이터의 전체 이슈 수\r\n    \r\n    // 실제로 반환할 이슈 수 계산\r\n    const count = Math.min(maxResults, totalIssues - startAt);\r\n    \r\n    // 프로젝트 키 가져오기 (기본값: 'APE')\r\n    const projectKey = criteria.projectKey || 'APE';\r\n    \r\n    // 모의 이슈 생성\r\n    for (let i = 0; i < count; i++) {\r\n      const issueNumber = startAt + i + 1;\r\n      const issueKey = `${projectKey}-${issueNumber}`;\r\n      const mockIssue = this.getMockIssue(issueKey);\r\n      \r\n      // 검색 조건에 따른 필터링\r\n      let includeIssue = true;\r\n      \r\n      // 상태 필터\r\n      if (criteria.status) {\r\n        if (Array.isArray(criteria.status)) {\r\n          includeIssue = criteria.status.includes(mockIssue.status);\r\n        } else {\r\n          includeIssue = mockIssue.status === criteria.status;\r\n        }\r\n      }\r\n      \r\n      // 텍스트 검색 필터\r\n      if (includeIssue && criteria.text) {\r\n        const text = criteria.text.toLowerCase();\r\n        includeIssue = \r\n          mockIssue.summary.toLowerCase().includes(text) || \r\n          (mockIssue.description?.toLowerCase().includes(text) || false);\r\n      }\r\n      \r\n      // 이슈가 필터 조건에 부합하면 결과에 추가\r\n      if (includeIssue) {\r\n        // 요청된 검색 조건에 맞추어 이슈 속성 수정\r\n        if (criteria.assignee) {\r\n          mockIssue.assignee = {\r\n            name: criteria.assignee,\r\n            displayName: `${criteria.assignee} 사용자`\r\n          };\r\n        }\r\n        \r\n        // 프로젝트 정보 추가\r\n        mockIssue.project = {\r\n          id: '10000',\r\n          key: projectKey,\r\n          name: `${projectKey} 프로젝트`\r\n        };\r\n        \r\n        mockIssues.push(mockIssue);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      issues: mockIssues,\r\n      total: totalIssues,\r\n      startAt,\r\n      maxResults,\r\n      hasMore: (startAt + count) < totalIssues\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Jira 프로젝트 요약 조회\r\n   * @param projectKey 프로젝트 키 (선택적, 입력되지 않으면 모든 프로젝트 요약)\r\n   * @param maxRecentIssues 최근 이슈 목록 최대 수 (기본값: 5)\r\n   * @param maxOldIssues 오래된 미해결 이슈 목록 최대 수 (기본값: 5)\r\n   * @returns Jira 요약 정보를 포함한 서비스 결과\r\n   */\r\n  public async getProjectSummary(\r\n    projectKey?: string, \r\n    maxRecentIssues: number = 5,\r\n    maxOldIssues: number = 5\r\n  ): Promise<ServiceResult<JiraSummary>> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 모의 모드인 경우 모의 데이터 반환\r\n      if (this.useMock) {\r\n        const mockSummary = this.getMockSummary(projectKey, maxRecentIssues, maxOldIssues);\r\n        return createSuccessResult(mockSummary);\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('Jira 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('Jira 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('Jira 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      // 프로젝트 내 모든 이슈 조회\r\n      const searchCriteria: JiraSearchCriteria = {\r\n        projectKey: projectKey,\r\n        maxResults: 1000 // 충분히 큰 값으로 설정\r\n      };\r\n      \r\n      const searchResult = await this.searchIssues(searchCriteria);\r\n      \r\n      if (!searchResult.success || !searchResult.data) {\r\n        throw new Error('이슈 검색에 실패했습니다');\r\n      }\r\n      \r\n      const issues = searchResult.data.issues;\r\n      \r\n      // 전체 이슈 수\r\n      const totalIssues = issues.length;\r\n      \r\n      // 상태별 이슈 수 계산\r\n      const issuesByStatus: Record<JiraIssueStatus, number> = {\r\n        [JiraIssueStatus.ToDo]: 0,\r\n        [JiraIssueStatus.InProgress]: 0,\r\n        [JiraIssueStatus.InReview]: 0,\r\n        [JiraIssueStatus.Done]: 0,\r\n        [JiraIssueStatus.Blocked]: 0,\r\n        [JiraIssueStatus.Unknown]: 0\r\n      };\r\n      \r\n      // 담당자별 이슈 수 계산\r\n      const issuesByAssignee: Record<string, number> = {};\r\n      \r\n      // 우선순위별 이슈 수 계산\r\n      const issuesByPriority: Record<string, number> = {};\r\n      \r\n      // 최근 이슈 및 오래된 미해결 이슈 목록 준비\r\n      let recentIssues: JiraIssue[] = [];\r\n      let unresolvedIssues: JiraIssue[] = [];\r\n      \r\n      // 이슈 해결 시간 계산을 위한 준비\r\n      let resolvedCount = 0;\r\n      let totalResolutionTime = 0;\r\n      \r\n      // 모든 이슈를 반복하며 통계 수집\r\n      for (const issue of issues) {\r\n        // 상태별 이슈 수 업데이트\r\n        const status = issue.status as JiraIssueStatus;\r\n        issuesByStatus[status] = (issuesByStatus[status] || 0) + 1;\r\n        \r\n        // 담당자별 이슈 수 업데이트\r\n        if (issue.assignee) {\r\n          const assigneeName = issue.assignee.displayName || issue.assignee.name;\r\n          issuesByAssignee[assigneeName] = (issuesByAssignee[assigneeName] || 0) + 1;\r\n        } else {\r\n          issuesByAssignee['미할당'] = (issuesByAssignee['미할당'] || 0) + 1;\r\n        }\r\n        \r\n        // 우선순위별 이슈 수 업데이트\r\n        if (issue.priority) {\r\n          const priorityName = issue.priority.name;\r\n          issuesByPriority[priorityName] = (issuesByPriority[priorityName] || 0) + 1;\r\n        } else {\r\n          issuesByPriority['미지정'] = (issuesByPriority['미지정'] || 0) + 1;\r\n        }\r\n        \r\n        // 미해결 이슈 목록 업데이트\r\n        if (issue.status !== JiraIssueStatus.Done) {\r\n          unresolvedIssues.push(issue);\r\n        } else {\r\n          // 해결된 이슈의 해결 시간 계산\r\n          const created = new Date(issue.created).getTime();\r\n          const updated = new Date(issue.updated).getTime();\r\n          const resolutionTime = updated - created;\r\n          \r\n          if (resolutionTime > 0) {\r\n            totalResolutionTime += resolutionTime;\r\n            resolvedCount++;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 최근 이슈 정렬 (생성일 기준)\r\n      recentIssues = [...issues].sort((a, b) => \r\n        new Date(b.created).getTime() - new Date(a.created).getTime()\r\n      ).slice(0, maxRecentIssues);\r\n      \r\n      // 오래된 미해결 이슈 정렬 (생성일 기준)\r\n      const oldestUnresolvedIssues = unresolvedIssues\r\n        .sort((a, b) => new Date(a.created).getTime() - new Date(b.created).getTime())\r\n        .slice(0, maxOldIssues);\r\n      \r\n      // 평균 해결 시간 계산 (밀리초 단위)\r\n      const averageResolutionTime = resolvedCount > 0 ? totalResolutionTime / resolvedCount : undefined;\r\n      \r\n      // 프로젝트 완료율 계산\r\n      const openIssues = totalIssues - (issuesByStatus[JiraIssueStatus.Done] || 0);\r\n      const percentComplete = totalIssues > 0 ? Math.round((issuesByStatus[JiraIssueStatus.Done] || 0) * 100 / totalIssues) : 0;\r\n      \r\n      // 요약 정보 반환\r\n      const result: JiraSummary = {\r\n        totalIssues,\r\n        issuesByStatus,\r\n        issuesByAssignee,\r\n        issuesByPriority,\r\n        recentIssues,\r\n        oldestUnresolvedIssues,\r\n        averageResolutionTime,\r\n        projectStats: projectKey ? {\r\n          projectKey,\r\n          totalIssues,\r\n          openIssues,\r\n          percentComplete\r\n        } : undefined\r\n      };\r\n      \r\n      return createSuccessResult(result);\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error);\r\n      \r\n      // 오류 로그\r\n      console.error('Jira 프로젝트 요약 조회 실패:', error);\r\n      \r\n      // 오류 결과 생성\r\n      let serviceError;\r\n      \r\n      if (this._lastError) {\r\n        // JiraError를 IServiceError로 변환\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          this._lastError.type as unknown as ServiceErrorType,\r\n          this._lastError.message,\r\n          this._lastError.details\r\n        );\r\n      } else {\r\n        serviceError = ServiceErrorManager.createError(\r\n          ServiceType.Jira,\r\n          ServiceErrorType.Unknown,\r\n          error instanceof Error ? error.message : String(error)\r\n        );\r\n      }\r\n      \r\n      return createErrorResult(serviceError);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모의 요약 정보 생성\r\n   * @param projectKey 프로젝트 키\r\n   * @param maxRecentIssues 최근 이슈 수\r\n   * @param maxOldIssues 오래된 미해결 이슈 수\r\n   * @returns 모의 요약 정보\r\n   * @private\r\n   */\r\n  private getMockSummary(\r\n    projectKey?: string, \r\n    maxRecentIssues: number = 5,\r\n    maxOldIssues: number = 5\r\n  ): JiraSummary {\r\n    // 기본 프로젝트 키 설정\r\n    const project = projectKey || 'APE';\r\n    \r\n    // 모의 이슈 생성\r\n    const mockIssues: JiraIssue[] = [];\r\n    const totalIssues = 50; // 모의 데이터의 전체 이슈 수\r\n    \r\n    // 모의 이슈 생성\r\n    for (let i = 0; i < totalIssues; i++) {\r\n      const issueNumber = i + 1;\r\n      const issueKey = `${project}-${issueNumber}`;\r\n      const mockIssue = this.getMockIssue(issueKey);\r\n      \r\n      // 프로젝트 정보 추가\r\n      mockIssue.project = {\r\n        id: '10000',\r\n        key: project,\r\n        name: `${project} 프로젝트`\r\n      };\r\n      \r\n      mockIssues.push(mockIssue);\r\n    }\r\n    \r\n    // 상태별 이슈 수 설정\r\n    const issuesByStatus: Record<JiraIssueStatus, number> = {\r\n      [JiraIssueStatus.ToDo]: 15,\r\n      [JiraIssueStatus.InProgress]: 10,\r\n      [JiraIssueStatus.InReview]: 5,\r\n      [JiraIssueStatus.Done]: 15,\r\n      [JiraIssueStatus.Blocked]: 3,\r\n      [JiraIssueStatus.Unknown]: 2\r\n    };\r\n    \r\n    // 담당자별 이슈 수 설정\r\n    const issuesByAssignee: Record<string, number> = {\r\n      '홍길동': 10,\r\n      '김개발': 15,\r\n      '이테스터': 8,\r\n      '박관리자': 5,\r\n      '미할당': 12\r\n    };\r\n    \r\n    // 우선순위별 이슈 수 설정\r\n    const issuesByPriority: Record<string, number> = {\r\n      'Highest': 5,\r\n      'High': 10,\r\n      'Medium': 20,\r\n      'Low': 10,\r\n      '미지정': 5\r\n    };\r\n    \r\n    // 최근 이슈 목록 설정\r\n    const recentIssues = mockIssues\r\n      .slice(0, maxRecentIssues)\r\n      .map(issue => {\r\n        // 최근 이슈는 생성일을 현재 시간에 가깝게 설정\r\n        const now = new Date();\r\n        const randomHours = Math.floor(Math.random() * 48); // 최근 48시간 내\r\n        const createdDate = new Date(now.getTime() - randomHours * 60 * 60 * 1000);\r\n        \r\n        return {\r\n          ...issue,\r\n          created: createdDate.toISOString(),\r\n          updated: createdDate.toISOString()\r\n        };\r\n      });\r\n    \r\n    // 오래된 미해결 이슈 목록 설정\r\n    const oldestUnresolvedIssues = mockIssues\r\n      .filter(issue => issue.status !== JiraIssueStatus.Done)\r\n      .slice(0, maxOldIssues)\r\n      .map(issue => {\r\n        // 오래된 이슈는 생성일을 몇 개월 전으로 설정\r\n        const now = new Date();\r\n        const randomDays = 30 + Math.floor(Math.random() * 60); // 30-90일 전\r\n        const createdDate = new Date(now.getTime() - randomDays * 24 * 60 * 60 * 1000);\r\n        \r\n        return {\r\n          ...issue,\r\n          created: createdDate.toISOString(),\r\n          updated: createdDate.toISOString(),\r\n          status: [JiraIssueStatus.ToDo, JiraIssueStatus.Blocked][Math.floor(Math.random() * 2)]\r\n        };\r\n      });\r\n    \r\n    // 평균 해결 시간 설정 (3일의 밀리초)\r\n    const averageResolutionTime = 3 * 24 * 60 * 60 * 1000;\r\n    \r\n    return {\r\n      totalIssues,\r\n      issuesByStatus,\r\n      issuesByAssignee,\r\n      issuesByPriority,\r\n      recentIssues,\r\n      oldestUnresolvedIssues,\r\n      averageResolutionTime,\r\n      projectStats: projectKey ? {\r\n        projectKey,\r\n        totalIssues,\r\n        openIssues: totalIssues - issuesByStatus[JiraIssueStatus.Done],\r\n        percentComplete: Math.round(issuesByStatus[JiraIssueStatus.Done] * 100 / totalIssues)\r\n      } : undefined\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 이슈 상태 변경에 필요한 트랜지션 ID 가져오기\r\n   * @param issueKey Jira 이슈 키\r\n   * @param targetStatus 목표 상태\r\n   * @returns 트랜지션 ID\r\n   * @private\r\n   */\r\n  private async getTransitionIdForStatus(issueKey: string, targetStatus: JiraIssueStatus): Promise<string | null> {\r\n    try {\r\n      // Jira REST API 엔드포인트\r\n      const url = `${this.baseUrl}${this.apiPath}/issue/${issueKey}/transitions`;\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {};\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // API 요청 실행\r\n      const response = await axios.get(url, config);\r\n      \r\n      // 사용 가능한 트랜지션 중에서 목표 상태와 일치하는 것 찾기\r\n      const transitions = response.data.transitions || [];\r\n      \r\n      // 상태 이름 정규화 함수\r\n      const normalizeStatus = (status: string): string => {\r\n        return status.toLowerCase()\r\n          .replace(/\\s+/g, '-')\r\n          .replace(/in\\s+progress/i, 'in-progress')\r\n          .replace(/to\\s+do/i, 'todo');\r\n      };\r\n      \r\n      // 목표 상태와 일치하는 트랜지션 찾기\r\n      const matchingTransition = transitions.find((t: any) => {\r\n        const transitionStatus = normalizeStatus(t.to.name);\r\n        return transitionStatus === targetStatus || transitionStatus.includes(targetStatus);\r\n      });\r\n      \r\n      return matchingTransition ? matchingTransition.id : null;\r\n    } catch (error) {\r\n      console.error(`트랜지션 ID 조회 실패 (${issueKey}):`, error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Jira API 응답에서 이슈 정보 파싱\r\n   * @param data API 응답 데이터\r\n   * @returns 파싱된 이슈 정보\r\n   * @private\r\n   */\r\n  private parseJiraIssue(data: any): JiraIssue {\r\n    const fields = data.fields || {};\r\n    \r\n    // 상태 정규화\r\n    const normalizeStatus = (statusName: string): JiraIssueStatus => {\r\n      const lowerStatus = statusName.toLowerCase();\r\n      \r\n      if (lowerStatus.includes('todo') || lowerStatus.includes('to do') || lowerStatus.includes('open')) {\r\n        return JiraIssueStatus.ToDo;\r\n      } else if (lowerStatus.includes('progress')) {\r\n        return JiraIssueStatus.InProgress;\r\n      } else if (lowerStatus.includes('review')) {\r\n        return JiraIssueStatus.InReview;\r\n      } else if (lowerStatus.includes('done') || lowerStatus.includes('closed') || lowerStatus.includes('resolved')) {\r\n        return JiraIssueStatus.Done;\r\n      } else if (lowerStatus.includes('block')) {\r\n        return JiraIssueStatus.Blocked;\r\n      } else {\r\n        return JiraIssueStatus.Unknown;\r\n      }\r\n    };\r\n    \r\n    const statusName = fields.status?.name || 'Unknown';\r\n    \r\n    const issue: JiraIssue = {\r\n      id: data.id,\r\n      key: data.key,\r\n      summary: fields.summary || '',\r\n      description: fields.description || '',\r\n      status: normalizeStatus(statusName),\r\n      assignee: fields.assignee ? {\r\n        name: fields.assignee.name,\r\n        displayName: fields.assignee.displayName,\r\n        email: fields.assignee.emailAddress\r\n      } : undefined,\r\n      reporter: fields.reporter ? {\r\n        name: fields.reporter.name,\r\n        displayName: fields.reporter.displayName,\r\n        email: fields.reporter.emailAddress\r\n      } : undefined,\r\n      created: fields.created || '',\r\n      updated: fields.updated || '',\r\n      dueDate: fields.duedate,\r\n      priority: fields.priority ? {\r\n        id: fields.priority.id,\r\n        name: fields.priority.name\r\n      } : undefined,\r\n      labels: fields.labels || [],\r\n      components: (fields.components || []).map((c: any) => ({\r\n        id: c.id,\r\n        name: c.name\r\n      }))\r\n    };\r\n    \r\n    return issue;\r\n  }\r\n  \r\n  /**\r\n   * 모의 Jira 이슈 생성\r\n   * @param issueKey 이슈 키\r\n   * @returns 모의 이슈 데이터\r\n   * @private\r\n   */\r\n  private getMockIssue(issueKey: string): JiraIssue {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [_project, id] = issueKey.split('-');\r\n    \r\n    // 이슈 번호에 따라 다른 모의 데이터 생성\r\n    const idNum = parseInt(id, 10) || 0;\r\n    const mod = idNum % 5;\r\n    \r\n    let status: JiraIssueStatus;\r\n    let summary: string;\r\n    \r\n    switch (mod) {\r\n      case 0:\r\n        status = JiraIssueStatus.ToDo;\r\n        summary = '새로운 기능 개발';\r\n        break;\r\n      case 1:\r\n        status = JiraIssueStatus.InProgress;\r\n        summary = '기존 기능 개선';\r\n        break;\r\n      case 2:\r\n        status = JiraIssueStatus.InReview;\r\n        summary = '버그 수정';\r\n        break;\r\n      case 3:\r\n        status = JiraIssueStatus.Done;\r\n        summary = '문서화 작업';\r\n        break;\r\n      case 4:\r\n        status = JiraIssueStatus.Blocked;\r\n        summary = '성능 최적화';\r\n        break;\r\n      default:\r\n        status = JiraIssueStatus.Unknown;\r\n        summary = '기타 작업';\r\n    }\r\n    \r\n    const now = new Date().toISOString();\r\n    \r\n    return {\r\n      id: id,\r\n      key: issueKey,\r\n      summary: `[모의 데이터] ${summary}`,\r\n      description: '이것은 모의 Jira 이슈입니다. 실제 Jira에 연결되지 않았습니다.',\r\n      status: status,\r\n      assignee: {\r\n        name: 'testuser',\r\n        displayName: '테스트 사용자'\r\n      },\r\n      reporter: {\r\n        name: 'reporter',\r\n        displayName: '보고자'\r\n      },\r\n      created: now,\r\n      updated: now,\r\n      priority: {\r\n        id: '3',\r\n        name: 'Medium'\r\n      },\r\n      labels: ['mock', 'test'],\r\n      components: [\r\n        { id: '10000', name: 'UI' },\r\n        { id: '10001', name: 'Backend' }\r\n      ]\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 오류 처리 및 분류\r\n   * @param error 발생한 오류\r\n   * @param resourceId 관련 리소스 ID (선택적)\r\n   * @private\r\n   */\r\n  private handleError(error: Error | AxiosError, resourceId?: string): void {\r\n    if (axios.isAxiosError(error)) {\r\n      const axiosError = error as AxiosError;\r\n      \r\n      if (!axiosError.response) {\r\n        // 네트워크 오류\r\n        this.setError(JiraErrorType.ConnectionFailed, \r\n            `Jira 서버 연결 실패: ${error.message}. 서버 URL을 확인하세요: ${this.baseUrl}`);\r\n      } else {\r\n        // HTTP 상태 코드에 따른 오류 분류\r\n        const status = axiosError.response.status;\r\n        \r\n        if (status === 401 || status === 403) {\r\n          this.setError(JiraErrorType.AuthenticationFailed, \r\n              `Jira 인증 실패: ${error.message}. 사용자 이름과 비밀번호를 확인하세요.`);\r\n        } else if (status === 404) {\r\n          this.setError(JiraErrorType.ResourceNotFound, \r\n              `Jira 리소스를 찾을 수 없습니다${resourceId ? ` (${resourceId})` : ''}: ${error.message}`);\r\n        } else if (status >= 500) {\r\n          this.setError(JiraErrorType.ServerError, \r\n              `Jira 서버 오류: ${error.message}. 서버 상태를 확인하세요.`);\r\n        } else if (status === 400) {\r\n          this.setError(JiraErrorType.InvalidRequest, \r\n              `Jira 요청이 잘못되었습니다: ${error.message}`);\r\n        } else {\r\n          this.setError(JiraErrorType.Unknown, \r\n              `Jira 오류: ${error.message}`);\r\n        }\r\n      }\r\n    } else {\r\n      // 일반 오류\r\n      this.setError(JiraErrorType.Unknown, \r\n          `Jira 오류: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 오류 설정\r\n   * @param type 오류 유형\r\n   * @param message 오류 메시지\r\n   * @param details 추가 세부 정보\r\n   * @private\r\n   */\r\n  private setError(type: JiraErrorType, message: string, details?: any): void {\r\n    this._lastError = {\r\n      type,\r\n      message,\r\n      details\r\n    };\r\n    \r\n    // 콘솔에 오류 기록\r\n    console.error(`Jira 오류 (${type}):`, message, details || '');\r\n  }\r\n  \r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    this.disposables.forEach(d => d.dispose());\r\n    this.disposables = [];\r\n  }\r\n}","/**\r\n * Jira 관련 슬래시 명령어 정의\r\n */\r\nimport * as vscode from 'vscode';\r\nimport { SlashCommand } from './slashCommand';\r\nimport { JiraService, JiraIssueStatus } from '../services/jiraService';\r\n\r\n/**\r\n * Jira 명령어 생성\r\n */\r\nexport function createJiraCommands(jiraService?: JiraService): SlashCommand[] {\r\n  const commands: SlashCommand[] = [];\r\n\r\n  // Jira 메인 명령어\r\n  commands.push({\r\n    name: 'jira',\r\n    aliases: ['j', '지라', '이슈'],\r\n    description: 'Jira 이슈 관련 작업을 수행합니다',\r\n    examples: ['/jira search', '/jira create', '/jira summary', '/jira status', '/지라 검색'],\r\n    category: 'utility',\r\n    priority: 8,\r\n    execute: async (context) => {\r\n      const subCommand = context.args[0]?.toLowerCase();\r\n      \r\n      if (!subCommand) {\r\n        // 하위 명령어 없이 사용시 도움말 표시\r\n        const helpMessage = `\r\n## Jira 명령어 도움말\r\n\r\nJira 관련 작업을 수행하기 위한 명령어입니다. 다음과 같은 하위 명령어를 사용할 수 있습니다:\r\n\r\n- **/jira create** - 새 Jira 이슈를 생성합니다\r\n- **/jira search** - Jira 이슈를 검색합니다\r\n- **/jira summary** - 프로젝트 요약 정보를 표시합니다\r\n- **/jira status** - Jira 이슈의 상태를 변경합니다\r\n\r\n사용 예시: \\`/jira search APE-\\`, \\`/jira create\\`, \\`/jira summary APE\\`, \\`/jira status APE-123 in-progress\\`\r\n        `;\r\n        \r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: helpMessage\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // 하위 명령어 처리\r\n      switch (subCommand) {\r\n        case 'create':\r\n        case '생성':\r\n        case '만들기':\r\n          await handleJiraCreate(jiraService);\r\n          break;\r\n          \r\n        case 'search':\r\n        case '검색':\r\n        case '찾기':\r\n          await handleJiraSearch(jiraService, context);\r\n          break;\r\n          \r\n        case 'summary':\r\n        case '요약':\r\n        case '통계':\r\n          await handleJiraSummary(jiraService, context);\r\n          break;\r\n          \r\n        case 'status':\r\n        case '상태':\r\n        case '변경':\r\n        case 'update':\r\n          await handleJiraStatus(jiraService, context);\r\n          break;\r\n          \r\n        default:\r\n          vscode.window.showErrorMessage(`알 수 없는 Jira 하위 명령어: ${subCommand}`);\r\n          break;\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      const parts = partialArgs.split(' ');\r\n      \r\n      // 첫 번째 인자 자동완성 (하위 명령어)\r\n      if (parts.length <= 1) {\r\n        const subCommands = ['create', 'search', 'summary', 'status', '생성', '검색', '요약', '상태', '변경'];\r\n        return subCommands.filter(cmd => \r\n          cmd.toLowerCase().startsWith(parts[0]?.toLowerCase() || '')\r\n        );\r\n      }\r\n      \r\n      // 하위 명령어에 따른 자동완성\r\n      const subCommand = parts[0].toLowerCase();\r\n      \r\n      if (subCommand === 'search' || subCommand === '검색') {\r\n        // 검색어 자동완성은 제공하지 않음\r\n        return [];\r\n      } else if (subCommand === 'summary' || subCommand === '요약') {\r\n        // 프로젝트 키 자동완성은 제공하지 않음 (무수히 많을 수 있음)\r\n        return [];\r\n      } else if (subCommand === 'status' || subCommand === '상태' || subCommand === '변경') {\r\n        // 이슈 키 자동완성은 제공하지 않음\r\n        if (parts.length === 3) {\r\n          // 상태 값 자동완성\r\n          const statusValues = ['todo', 'in-progress', 'in-review', 'done', 'blocked'];\r\n          return statusValues.filter(status => \r\n            status.startsWith(parts[2].toLowerCase())\r\n          );\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n\r\n  return commands;\r\n}\r\n\r\n/**\r\n * Jira 이슈 상태 변경 처리\r\n */\r\nasync function handleJiraStatus(jiraService?: JiraService, context?: any): Promise<void> {\r\n  if (!jiraService) {\r\n    vscode.window.showErrorMessage('Jira 서비스를 사용할 수 없습니다');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 상태 변경에 필요한 파라미터 확인 (이슈 키와 새 상태)\r\n    const statusArgs = context?.args.slice(1) || [];\r\n    \r\n    if (statusArgs.length < 1) {\r\n      // 이슈 키 입력 받기\r\n      const issueKey = await vscode.window.showInputBox({\r\n        prompt: 'Jira 이슈 키를 입력하세요',\r\n        placeHolder: '예: APE-123, PROJ-456 등'\r\n      });\r\n      \r\n      if (!issueKey) return; // 취소됨\r\n      \r\n      // 상태값 선택하기\r\n      const status = await vscode.window.showQuickPick(\r\n        [\r\n          { label: '할일', value: 'todo' },\r\n          { label: '진행중', value: 'in-progress' },\r\n          { label: '검토중', value: 'in-review' },\r\n          { label: '완료', value: 'done' },\r\n          { label: '차단됨', value: 'blocked' }\r\n        ],\r\n        { placeHolder: '변경할 상태를 선택하세요' }\r\n      );\r\n      \r\n      if (!status) return; // 취소됨\r\n      \r\n      // 상태 변경 실행\r\n      return await executeStatusChange(jiraService, issueKey, status.value);\r\n    } else {\r\n      const issueKey = statusArgs[0];\r\n      let status;\r\n      \r\n      if (statusArgs.length < 2) {\r\n        // 상태값 선택하기\r\n        const selectedStatus = await vscode.window.showQuickPick(\r\n          [\r\n            { label: '할일', value: 'todo' },\r\n            { label: '진행중', value: 'in-progress' },\r\n            { label: '검토중', value: 'in-review' },\r\n            { label: '완료', value: 'done' },\r\n            { label: '차단됨', value: 'blocked' }\r\n          ],\r\n          { placeHolder: '변경할 상태를 선택하세요' }\r\n        );\r\n        \r\n        if (!selectedStatus) return; // 취소됨\r\n        status = selectedStatus.value;\r\n      } else {\r\n        status = statusArgs[1].toLowerCase();\r\n      }\r\n      \r\n      // 상태 변경 실행\r\n      return await executeStatusChange(jiraService, issueKey, status);\r\n    }\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Jira 이슈 상태 변경 오류: ${error instanceof Error ? error.message : String(error)}`);\r\n    \r\n    // 채팅에 오류 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## Jira 이슈 상태 변경 오류\\n\\n이슈 상태 변경 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 상태 변경 실행 함수\r\n */\r\nasync function executeStatusChange(jiraService: JiraService, issueKey: string, statusStr: string): Promise<void> {\r\n  // 상태값 검증 및 변환\r\n  let status: JiraIssueStatus;\r\n  \r\n  // 상태 문자열을 JiraIssueStatus 열거형으로 변환\r\n  switch (statusStr.toLowerCase()) {\r\n    case 'todo':\r\n    case 'to-do':\r\n    case 'to_do':\r\n    case '할일':\r\n    case '대기':\r\n      status = JiraIssueStatus.ToDo;\r\n      break;\r\n      \r\n    case 'in-progress':\r\n    case 'in_progress':\r\n    case 'inprogress':\r\n    case '진행중':\r\n    case '진행':\r\n      status = JiraIssueStatus.InProgress;\r\n      break;\r\n      \r\n    case 'in-review':\r\n    case 'in_review':\r\n    case 'inreview':\r\n    case '검토중':\r\n    case '리뷰':\r\n      status = JiraIssueStatus.InReview;\r\n      break;\r\n      \r\n    case 'done':\r\n    case 'complete':\r\n    case 'completed':\r\n    case '완료':\r\n    case '종료':\r\n      status = JiraIssueStatus.Done;\r\n      break;\r\n      \r\n    case 'blocked':\r\n    case 'block':\r\n    case '차단':\r\n    case '차단됨':\r\n      status = JiraIssueStatus.Blocked;\r\n      break;\r\n      \r\n    default:\r\n      throw new Error(`지원되지 않는 상태값입니다: ${statusStr}. 지원되는 상태값: todo, in-progress, in-review, done, blocked`);\r\n  }\r\n  \r\n  // 현재 이슈 정보 조회\r\n  const issueResult = await jiraService.getIssue(issueKey);\r\n  \r\n  if (!issueResult.success || !issueResult.data) {\r\n    throw new Error(`이슈를 찾을 수 없습니다: ${issueKey}`);\r\n  }\r\n  \r\n  const issue = issueResult.data;\r\n  const currentStatus = issue.status;\r\n  \r\n  // 이미 동일한 상태면 변경하지 않음\r\n  if (currentStatus === status) {\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## Jira 이슈 상태 정보\\n\\n이슈 **${issueKey}** (${issue.summary})는 이미 **${getStatusDisplayName(status)}** 상태입니다.`\r\n    });\r\n    return;\r\n  }\r\n  \r\n  // 상태 변경 실행\r\n  const result = await jiraService.updateIssueStatus(issueKey, status);\r\n  \r\n  if (result.success) {\r\n    vscode.window.showInformationMessage(`Jira 이슈 상태가 변경되었습니다: ${issueKey}`);\r\n    \r\n    // 채팅에 결과 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## Jira 이슈 상태 변경 완료\\n\\n이슈 **${issueKey}** (${issue.summary})의 상태가 **${getStatusDisplayName(currentStatus)}**에서 **${getStatusDisplayName(status)}**(으)로 변경되었습니다.`\r\n    });\r\n  } else {\r\n    throw new Error(result.error?.message || '이슈 상태 변경에 실패했습니다');\r\n  }\r\n}\r\n\r\n/**\r\n * 상태 표시명 가져오기\r\n */\r\nfunction getStatusDisplayName(status: JiraIssueStatus): string {\r\n  switch (status) {\r\n    case JiraIssueStatus.ToDo:\r\n      return '할일';\r\n    case JiraIssueStatus.InProgress:\r\n      return '진행중';\r\n    case JiraIssueStatus.InReview:\r\n      return '검토중';\r\n    case JiraIssueStatus.Done:\r\n      return '완료';\r\n    case JiraIssueStatus.Blocked:\r\n      return '차단됨';\r\n    default:\r\n      return '알 수 없음';\r\n  }\r\n}\r\n\r\n/**\r\n * Jira 이슈 생성 처리\r\n */\r\nasync function handleJiraCreate(jiraService?: JiraService): Promise<void> {\r\n  if (!jiraService) {\r\n    vscode.window.showErrorMessage('Jira 서비스를 사용할 수 없습니다');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 프로젝트 키 입력 받기\r\n    const projectKey = await vscode.window.showInputBox({\r\n      prompt: 'Jira 프로젝트 키를 입력하세요',\r\n      placeHolder: '예: APE, DEV, TEST 등'\r\n    });\r\n    \r\n    if (!projectKey) return; // 취소됨\r\n    \r\n    // 이슈 유형 입력 받기\r\n    const issueType = await vscode.window.showQuickPick(\r\n      ['Task', 'Bug', 'Story', 'Epic'],\r\n      { placeHolder: '이슈 유형을 선택하세요' }\r\n    );\r\n    \r\n    if (!issueType) return; // 취소됨\r\n    \r\n    // 이슈 제목 입력 받기\r\n    const summary = await vscode.window.showInputBox({\r\n      prompt: '이슈 제목을 입력하세요',\r\n      placeHolder: '이슈 제목'\r\n    });\r\n    \r\n    if (!summary) return; // 취소됨\r\n    \r\n    // 이슈 설명 입력 받기\r\n    const description = await vscode.window.showInputBox({\r\n      prompt: '이슈 설명을 입력하세요 (선택사항)',\r\n      placeHolder: '이슈 설명'\r\n    });\r\n    \r\n    // 이슈 생성\r\n    const result = await jiraService.createIssue({\r\n      projectKey,\r\n      issueType,\r\n      summary,\r\n      description: description || ''\r\n    });\r\n    \r\n    if (result.success && result.data) {\r\n      vscode.window.showInformationMessage(`Jira 이슈가 생성되었습니다: ${result.data.key}`);\r\n      \r\n      // 채팅에 결과 표시\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `## Jira 이슈 생성 완료\\n\\n이슈 **${result.data.key}**가 성공적으로 생성되었습니다.\\n\\n- **제목**: ${summary}\\n- **유형**: ${issueType}\\n- **프로젝트**: ${projectKey}`\r\n      });\r\n    } else {\r\n      throw new Error(result.error?.message || '이슈 생성에 실패했습니다');\r\n    }\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Jira 이슈 생성 오류: ${error instanceof Error ? error.message : String(error)}`);\r\n    \r\n    // 채팅에 오류 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## Jira 이슈 생성 오류\\n\\n이슈 생성 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Jira 이슈 검색 처리\r\n */\r\nasync function handleJiraSearch(jiraService?: JiraService, context?: any): Promise<void> {\r\n  if (!jiraService) {\r\n    vscode.window.showErrorMessage('Jira 서비스를 사용할 수 없습니다');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 검색 조건 구성\r\n    const searchArgs = context?.args.slice(1) || [];\r\n    const searchText = searchArgs.join(' ');\r\n    \r\n    // 검색 텍스트가 없으면 입력 받기\r\n    let finalSearchText = searchText;\r\n    if (!finalSearchText) {\r\n      finalSearchText = await vscode.window.showInputBox({\r\n        prompt: 'Jira 검색어를 입력하세요',\r\n        placeHolder: '프로젝트 키, 이슈 키, 텍스트 등 (예: APE-123, Bug, 로그인)'\r\n      });\r\n      \r\n      if (!finalSearchText) return; // 취소됨\r\n    }\r\n    \r\n    // 검색 조건 파싱 (간단 구현)\r\n    const searchCriteria: any = {};\r\n    \r\n    // 프로젝트 키 패턴 확인\r\n    const projectKeyMatch = finalSearchText.match(/^([A-Z0-9]+-\\d+|[A-Z0-9]+)$/);\r\n    if (projectKeyMatch) {\r\n      if (projectKeyMatch[0].includes('-')) {\r\n        // 특정 이슈 검색\r\n        const result = await jiraService.getIssue(projectKeyMatch[0]);\r\n        \r\n        if (result.success && result.data) {\r\n          // 채팅에 결과 표시\r\n          await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n            role: 'assistant',\r\n            content: `## Jira 이슈 검색 결과\\n\\n### ${result.data.key}: ${result.data.summary}\\n\\n**상태**: ${result.data.status}\\n**담당자**: ${result.data.assignee?.displayName || '없음'}\\n**보고자**: ${result.data.reporter?.displayName || '없음'}\\n\\n${result.data.description || '설명 없음'}`\r\n          });\r\n          return;\r\n        }\r\n      } else {\r\n        // 프로젝트 내 이슈 검색\r\n        searchCriteria.projectKey = projectKeyMatch[0];\r\n      }\r\n    } else {\r\n      // 텍스트 검색\r\n      searchCriteria.text = finalSearchText;\r\n    }\r\n    \r\n    // 최대 결과 수 제한\r\n    searchCriteria.maxResults = 10;\r\n    \r\n    // 검색 실행\r\n    const result = await jiraService.searchIssues(searchCriteria);\r\n    \r\n    if (result.success && result.data) {\r\n      if (result.data.issues.length === 0) {\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: `## Jira 이슈 검색 결과\\n\\n검색어 \\`${finalSearchText}\\`에 해당하는 이슈를 찾을 수 없습니다.`\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // 결과 포맷팅\r\n      let content = `## Jira 이슈 검색 결과\\n\\n검색어: \\`${finalSearchText}\\`\\n\\n총 **${result.data.total}**개 이슈 중 **${result.data.issues.length}**개 표시\\n\\n`;\r\n      \r\n      // 이슈 목록 표시\r\n      result.data.issues.forEach(issue => {\r\n        content += `### ${issue.key}: ${issue.summary}\\n\\n`;\r\n        content += `**상태**: ${issue.status} | **담당자**: ${issue.assignee?.displayName || '없음'}\\n\\n`;\r\n      });\r\n      \r\n      // 더 많은 결과가 있는 경우 안내\r\n      if (result.data.hasMore) {\r\n        content += `\\n> 더 많은 결과가 있습니다. 검색어를 구체적으로 지정하거나 Jira 웹 인터페이스에서 확인하세요.`;\r\n      }\r\n      \r\n      // 채팅에 결과 표시\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content\r\n      });\r\n    } else {\r\n      throw new Error(result.error?.message || '이슈 검색에 실패했습니다');\r\n    }\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Jira 이슈 검색 오류: ${error instanceof Error ? error.message : String(error)}`);\r\n    \r\n    // 채팅에 오류 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## Jira 이슈 검색 오류\\n\\n이슈 검색 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Jira 프로젝트 요약 처리\r\n */\r\nasync function handleJiraSummary(jiraService?: JiraService, context?: any): Promise<void> {\r\n  if (!jiraService) {\r\n    vscode.window.showErrorMessage('Jira 서비스를 사용할 수 없습니다');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 프로젝트 키 구성\r\n    const summaryArgs = context?.args.slice(1) || [];\r\n    const projectKey = summaryArgs.join(' ');\r\n    \r\n    // 프로젝트 키가 없으면 입력 받기\r\n    let finalProjectKey = projectKey;\r\n    if (!finalProjectKey) {\r\n      finalProjectKey = await vscode.window.showInputBox({\r\n        prompt: 'Jira 프로젝트 키를 입력하세요',\r\n        placeHolder: '예: APE, DEV, TEST 등'\r\n      });\r\n      \r\n      if (!finalProjectKey) return; // 취소됨\r\n    }\r\n    \r\n    // 요약 실행\r\n    const result = await jiraService.getProjectSummary(finalProjectKey);\r\n    \r\n    if (result.success && result.data) {\r\n      const summary = result.data;\r\n      \r\n      // 상태별 이슈 분포 포맷팅\r\n      let statusDistribution = '';\r\n      for (const [status, count] of Object.entries(summary.issuesByStatus)) {\r\n        statusDistribution += `- **${status}**: ${count}개\\n`;\r\n      }\r\n      \r\n      // 담당자별 이슈 분포 포맷팅\r\n      let assigneeDistribution = '';\r\n      for (const [assignee, count] of Object.entries(summary.issuesByAssignee)) {\r\n        assigneeDistribution += `- **${assignee || '미할당'}**: ${count}개\\n`;\r\n      }\r\n      \r\n      // 우선순위별 이슈 분포 포맷팅\r\n      let priorityDistribution = '';\r\n      for (const [priority, count] of Object.entries(summary.issuesByPriority)) {\r\n        priorityDistribution += `- **${priority || '미지정'}**: ${count}개\\n`;\r\n      }\r\n      \r\n      // 최근 이슈 목록 포맷팅\r\n      let recentIssues = '';\r\n      summary.recentIssues.forEach(issue => {\r\n        recentIssues += `- **${issue.key}**: ${issue.summary} (${issue.status})\\n`;\r\n      });\r\n      \r\n      // 미해결 상태의 오래된 이슈 포맷팅\r\n      let oldestUnresolvedIssues = '';\r\n      summary.oldestUnresolvedIssues.forEach(issue => {\r\n        oldestUnresolvedIssues += `- **${issue.key}**: ${issue.summary} (${issue.status}, 생성: ${issue.created?.split('T')[0] || '날짜 미상'})\\n`;\r\n      });\r\n      \r\n      // 결과 내용 구성\r\n      let content = `## Jira 프로젝트 요약: ${finalProjectKey}\\n\\n`;\r\n      \r\n      if (summary.projectStats) {\r\n        content += `### 프로젝트 통계\\n\\n`;\r\n        content += `- **총 이슈 수**: ${summary.projectStats.totalIssues}개\\n`;\r\n        content += `- **열린 이슈 수**: ${summary.projectStats.openIssues}개\\n`;\r\n        content += `- **완료율**: ${summary.projectStats.percentComplete.toFixed(1)}%\\n\\n`;\r\n      }\r\n      \r\n      content += `### 상태별 이슈 분포\\n\\n${statusDistribution}\\n`;\r\n      content += `### 담당자별 이슈 분포\\n\\n${assigneeDistribution}\\n`;\r\n      content += `### 우선순위별 이슈 분포\\n\\n${priorityDistribution}\\n`;\r\n      \r\n      if (recentIssues) {\r\n        content += `### 최근 이슈\\n\\n${recentIssues}\\n`;\r\n      }\r\n      \r\n      if (oldestUnresolvedIssues) {\r\n        content += `### 미해결 상태의 오래된 이슈\\n\\n${oldestUnresolvedIssues}\\n`;\r\n      }\r\n      \r\n      if (summary.averageResolutionTime !== undefined) {\r\n        content += `### 성능 지표\\n\\n`;\r\n        content += `- **평균 해결 시간**: ${Math.round(summary.averageResolutionTime / 24)}일\\n`;\r\n      }\r\n      \r\n      // 채팅에 결과 표시\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content\r\n      });\r\n    } else {\r\n      throw new Error(result.error?.message || '프로젝트 요약 정보를 가져오는 데 실패했습니다');\r\n    }\r\n  } catch (error) {\r\n    vscode.window.showErrorMessage(`Jira 프로젝트 요약 오류: ${error instanceof Error ? error.message : String(error)}`);\r\n    \r\n    // 채팅에 오류 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## Jira 프로젝트 요약 오류\\n\\n프로젝트 요약 정보를 가져오는 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`\r\n    });\r\n  }\r\n}","/**\r\n * TODO 시스템 타입 정의\r\n * \r\n * APE 확장의 할 일 관리 기능에 필요한 타입과 인터페이스를 정의합니다.\r\n */\r\n\r\n/**\r\n * 할 일 우선순위 열거형\r\n */\r\nexport enum TodoPriority {\r\n  HIGH = 'high',\r\n  MEDIUM = 'medium',\r\n  LOW = 'low'\r\n}\r\n\r\n/**\r\n * 할 일 상태 열거형\r\n */\r\nexport enum TodoStatus {\r\n  PENDING = 'pending',\r\n  IN_PROGRESS = 'in-progress',\r\n  COMPLETED = 'completed',\r\n  CANCELLED = 'cancelled'\r\n}\r\n\r\n/**\r\n * 할 일 항목 인터페이스\r\n */\r\nexport interface TodoItem {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  priority: TodoPriority;\r\n  status: TodoStatus;\r\n  createdAt: Date;\r\n  dueDate?: Date;\r\n  updatedAt?: Date;\r\n  completedAt?: Date;\r\n  tags?: string[];\r\n  assignee?: string;\r\n  relatedFiles?: string[];\r\n}\r\n\r\n/**\r\n * 할 일 목록 인터페이스\r\n */\r\nexport interface TodoList {\r\n  items: TodoItem[];\r\n  pendingCount: number;\r\n  completedCount: number;\r\n}\r\n\r\n/**\r\n * 할 일 필터 옵션 인터페이스\r\n */\r\nexport interface TodoFilterOptions {\r\n  status?: TodoStatus[];\r\n  priority?: TodoPriority[];\r\n  tags?: string[];\r\n  assignee?: string;\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * 할 일 정렬 기준 열거형\r\n */\r\nexport enum TodoSortBy {\r\n  PRIORITY = 'priority',\r\n  DUE_DATE = 'dueDate',\r\n  CREATED_AT = 'createdAt',\r\n  UPDATED_AT = 'updatedAt',\r\n  STATUS = 'status',\r\n  TITLE = 'title'\r\n}\r\n\r\n/**\r\n * 정렬 방향 열거형\r\n */\r\nexport enum SortDirection {\r\n  ASC = 'asc',\r\n  DESC = 'desc'\r\n}\r\n\r\n/**\r\n * 할 일 정렬 옵션 인터페이스\r\n */\r\nexport interface TodoSortOptions {\r\n  by: TodoSortBy;\r\n  direction: SortDirection;\r\n}","/**\r\n * Todo 슬래시 커맨드 정의\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { SlashCommand } from './slashCommand';\r\nimport { TodoService } from '../services/todoService';\r\nimport { TodoPriority, TodoStatus } from '../../types/todo';\r\n\r\n/**\r\n * Todo 명령어 생성\r\n */\r\nexport function createTodoCommands(todoService?: TodoService): SlashCommand[] {\r\n  if (!todoService) {\r\n    return [];\r\n  }\r\n  \r\n  const commands: SlashCommand[] = [];\r\n\r\n  // todo 명령어: 할 일 관리 기능 제공\r\n  commands.push({\r\n    name: 'todo',\r\n    aliases: ['todos', 'task', 'tasks', '할일', '투두', '태스크', '작업'],\r\n    description: '할 일 항목을 관리합니다 (추가, 목록, 변경, 삭제)',\r\n    examples: [\r\n      '/todo list', \r\n      '/todo add 새 작업 추가',\r\n      '/todo update 작업ID 수정할내용',\r\n      '/todo status 작업ID completed',\r\n      '/todo priority 작업ID high',\r\n      '/todo delete 작업ID'\r\n    ],\r\n    category: 'utility',\r\n    priority: 6,\r\n    execute: async (context) => {\r\n      const subCommand = context.args[0]?.toLowerCase();\r\n      \r\n      if (!subCommand || subCommand === 'list' || subCommand === '목록') {\r\n        // 할 일 목록 표시\r\n        await listTodos(todoService);\r\n      } else if (subCommand === 'add' || subCommand === '추가' || subCommand === '생성') {\r\n        // 할 일 추가\r\n        const title = context.args.slice(1).join(' ');\r\n        if (title) {\r\n          await addTodo(todoService, title);\r\n        } else {\r\n          vscode.window.showErrorMessage('추가할 할 일 제목을 입력해주세요');\r\n        }\r\n      } else if (subCommand === 'update' || subCommand === '수정' || subCommand === '변경') {\r\n        // 할 일 수정\r\n        const todoId = context.args[1];\r\n        const updateContent = context.args.slice(2).join(' ');\r\n        \r\n        if (!todoId) {\r\n          vscode.window.showErrorMessage('수정할 할 일 ID를 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        if (!updateContent) {\r\n          vscode.window.showErrorMessage('수정할 내용을 입력해주세요');\r\n          return;\r\n        }\r\n        \r\n        await updateTodo(todoService, todoId, updateContent);\r\n      } else if (subCommand === 'status' || subCommand === '상태') {\r\n        // 할 일 상태 변경\r\n        const todoId = context.args[1];\r\n        const statusStr = context.args[2]?.toLowerCase();\r\n        \r\n        if (!todoId) {\r\n          vscode.window.showErrorMessage('상태를 변경할 할 일 ID를 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        if (!statusStr) {\r\n          vscode.window.showErrorMessage('변경할 상태를 지정해주세요 (pending, in-progress, completed, cancelled)');\r\n          return;\r\n        }\r\n        \r\n        await changeTodoStatus(todoService, todoId, statusStr);\r\n      } else if (subCommand === 'priority' || subCommand === '우선순위') {\r\n        // 할 일 우선순위 변경\r\n        const todoId = context.args[1];\r\n        const priorityStr = context.args[2]?.toLowerCase();\r\n        \r\n        if (!todoId) {\r\n          vscode.window.showErrorMessage('우선순위를 변경할 할 일 ID를 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        if (!priorityStr) {\r\n          vscode.window.showErrorMessage('변경할 우선순위를 지정해주세요 (high, medium, low)');\r\n          return;\r\n        }\r\n        \r\n        await changeTodoPriority(todoService, todoId, priorityStr);\r\n      } else if (subCommand === 'delete' || subCommand === '삭제') {\r\n        // 할 일 삭제\r\n        const todoId = context.args[1];\r\n        \r\n        if (!todoId) {\r\n          vscode.window.showErrorMessage('삭제할 할 일 ID를 지정해주세요');\r\n          return;\r\n        }\r\n        \r\n        await deleteTodo(todoService, todoId);\r\n      } else if (subCommand === 'clear' || subCommand === '모두삭제' || subCommand === '초기화') {\r\n        // 모든 할 일 항목 삭제\r\n        await clearAllTodos(todoService);\r\n      } else {\r\n        vscode.window.showErrorMessage(`알 수 없는 할 일 하위 명령어입니다: ${subCommand}`);\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs: string) => {\r\n      const subCommands = [\r\n        'list', 'add', 'update', 'status', 'priority', 'delete', 'clear',\r\n        '목록', '추가', '수정', '상태', '우선순위', '삭제', '초기화'\r\n      ];\r\n      \r\n      const parts = partialArgs.split(' ');\r\n      \r\n      // 첫 번째 인자 자동완성 (하위 명령어)\r\n      if (parts.length <= 1) {\r\n        return subCommands.filter(cmd => \r\n          cmd.toLowerCase().startsWith(parts[0]?.toLowerCase() || '')\r\n        );\r\n      }\r\n      \r\n      // 세 번째 인자 자동완성 (상태나 우선순위 값)\r\n      if (parts.length === 3) {\r\n        const subCommand = parts[0].toLowerCase();\r\n        \r\n        if (subCommand === 'status' || subCommand === '상태') {\r\n          const statusValues = ['pending', 'in-progress', 'completed', 'cancelled', '대기중', '진행중', '완료', '취소'];\r\n          return statusValues.filter(status => \r\n            status.toLowerCase().startsWith(parts[2].toLowerCase() || '')\r\n          );\r\n        } else if (subCommand === 'priority' || subCommand === '우선순위') {\r\n          const priorityValues = ['high', 'medium', 'low', '높음', '중간', '낮음'];\r\n          return priorityValues.filter(priority => \r\n            priority.toLowerCase().startsWith(parts[2].toLowerCase() || '')\r\n          );\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n\r\n  return commands;\r\n}\r\n\r\n/**\r\n * 할 일 목록 표시\r\n */\r\nasync function listTodos(todoService: TodoService): Promise<void> {\r\n  try {\r\n    const todoList = todoService.getTodoList();\r\n    \r\n    if (todoList.items.length === 0) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: '등록된 할 일 항목이 없습니다. `/todo add 제목`으로 새 할 일을 추가하세요.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    let content = `## 할 일 목록\\n\\n`;\r\n    content += `- **진행 중**: ${todoList.pendingCount}개\\n`;\r\n    content += `- **완료**: ${todoList.completedCount}개\\n\\n`;\r\n    \r\n    // 상태별로 그룹화\r\n    const pending = todoList.items.filter(item => item.status === TodoStatus.PENDING);\r\n    const inProgress = todoList.items.filter(item => item.status === TodoStatus.IN_PROGRESS);\r\n    const completed = todoList.items.filter(item => item.status === TodoStatus.COMPLETED);\r\n    const cancelled = todoList.items.filter(item => item.status === TodoStatus.CANCELLED);\r\n    \r\n    // 우선순위 표시 함수\r\n    const getPriorityIcon = (priority: TodoPriority): string => {\r\n      switch (priority) {\r\n        case TodoPriority.HIGH: return '🔴';\r\n        case TodoPriority.MEDIUM: return '🟡';\r\n        case TodoPriority.LOW: return '🟢';\r\n        default: return '';\r\n      }\r\n    };\r\n    \r\n    // 대기 중인 항목\r\n    if (pending.length > 0) {\r\n      content += `### ⏳ 대기 중\\n\\n`;\r\n      pending.forEach(item => {\r\n        content += `- ${getPriorityIcon(item.priority)} **${item.title}** (ID: \\`${item.id}\\`)`;\r\n        if (item.description) {\r\n          content += ` - ${item.description}`;\r\n        }\r\n        content += '\\n';\r\n      });\r\n      content += '\\n';\r\n    }\r\n    \r\n    // 진행 중인 항목\r\n    if (inProgress.length > 0) {\r\n      content += `### ▶️ 진행 중\\n\\n`;\r\n      inProgress.forEach(item => {\r\n        content += `- ${getPriorityIcon(item.priority)} **${item.title}** (ID: \\`${item.id}\\`)`;\r\n        if (item.description) {\r\n          content += ` - ${item.description}`;\r\n        }\r\n        content += '\\n';\r\n      });\r\n      content += '\\n';\r\n    }\r\n    \r\n    // 완료된 항목\r\n    if (completed.length > 0) {\r\n      content += `### ✅ 완료됨\\n\\n`;\r\n      completed.forEach(item => {\r\n        content += `- ${getPriorityIcon(item.priority)} **${item.title}** (ID: \\`${item.id}\\`)`;\r\n        if (item.description) {\r\n          content += ` - ${item.description}`;\r\n        }\r\n        if (item.completedAt) {\r\n          content += ` (완료: ${formatDate(item.completedAt)})`;\r\n        }\r\n        content += '\\n';\r\n      });\r\n      content += '\\n';\r\n    }\r\n    \r\n    // 취소된 항목\r\n    if (cancelled.length > 0) {\r\n      content += `### ❌ 취소됨\\n\\n`;\r\n      cancelled.forEach(item => {\r\n        content += `- ${getPriorityIcon(item.priority)} **${item.title}** (ID: \\`${item.id}\\`)`;\r\n        if (item.description) {\r\n          content += ` - ${item.description}`;\r\n        }\r\n        content += '\\n';\r\n      });\r\n      content += '\\n';\r\n    }\r\n    \r\n    content += '\\n**할 일 관리 명령어**:\\n';\r\n    content += '- `/todo add 제목` - 새 할 일 추가\\n';\r\n    content += '- `/todo status ID 상태` - 상태 변경 (pending, in-progress, completed, cancelled)\\n';\r\n    content += '- `/todo priority ID 우선순위` - 우선순위 변경 (high, medium, low)\\n';\r\n    content += '- `/todo update ID 새내용` - 할 일 내용 수정\\n';\r\n    content += '- `/todo delete ID` - 할 일 삭제\\n';\r\n    \r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content\r\n    });\r\n  } catch (error) {\r\n    console.error('할 일 목록 조회 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 목록 조회 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 할 일 추가\r\n */\r\nasync function addTodo(todoService: TodoService, title: string): Promise<void> {\r\n  try {\r\n    // 설명 입력 받기 (선택사항)\r\n    const description = await vscode.window.showInputBox({\r\n      prompt: '할 일 설명을 입력하세요 (선택사항)',\r\n      placeHolder: '세부 내용 또는 설명'\r\n    });\r\n    \r\n    // 우선순위 선택 (기본값: 중간)\r\n    const priorities = [\r\n      { label: '높음', value: TodoPriority.HIGH },\r\n      { label: '중간', value: TodoPriority.MEDIUM, picked: true },\r\n      { label: '낮음', value: TodoPriority.LOW }\r\n    ];\r\n    \r\n    const selectedPriority = await vscode.window.showQuickPick(\r\n      priorities.map(p => p.label),\r\n      { placeHolder: '우선순위를 선택하세요', canPickMany: false }\r\n    );\r\n    \r\n    if (!selectedPriority) {\r\n      return; // 취소됨\r\n    }\r\n    \r\n    const priority = priorities.find(p => p.label === selectedPriority)?.value || TodoPriority.MEDIUM;\r\n    \r\n    // 할 일 추가\r\n    const newTodo = todoService.addTodoItem({\r\n      title,\r\n      description,\r\n      priority\r\n    });\r\n    \r\n    // 성공 메시지 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `새 할 일 \"${title}\"이(가) 성공적으로 추가되었습니다. (ID: \\`${newTodo.id}\\`, 우선순위: ${getPriorityLabel(priority)})`\r\n    });\r\n  } catch (error) {\r\n    console.error('할 일 추가 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 추가 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 할 일 수정\r\n */\r\nasync function updateTodo(todoService: TodoService, todoId: string, newTitle: string): Promise<void> {\r\n  try {\r\n    // 할 일 확인\r\n    const todo = todoService.getTodoItem(todoId);\r\n    \r\n    if (!todo) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `ID가 \\`${todoId}\\`인 할 일 항목을 찾을 수 없습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 할 일 제목 수정\r\n    todoService.updateTodoItem(todoId, { title: newTitle });\r\n    \r\n    // 성공 메시지 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `할 일 내용이 변경되었습니다.\\n- 이전: \"${todo.title}\"\\n- 변경: \"${newTitle}\"`\r\n    });\r\n  } catch (error) {\r\n    console.error('할 일 수정 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 수정 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 할 일 상태 변경\r\n */\r\nasync function changeTodoStatus(todoService: TodoService, todoId: string, statusStr: string): Promise<void> {\r\n  try {\r\n    // 할 일 확인\r\n    const todo = todoService.getTodoItem(todoId);\r\n    \r\n    if (!todo) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `ID가 \\`${todoId}\\`인 할 일 항목을 찾을 수 없습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 상태 문자열을 열거형으로 변환\r\n    let status: TodoStatus;\r\n    \r\n    switch (statusStr.toLowerCase()) {\r\n      case 'pending':\r\n      case 'wait':\r\n      case '대기':\r\n      case '대기중':\r\n        status = TodoStatus.PENDING;\r\n        break;\r\n        \r\n      case 'in-progress':\r\n      case 'progress':\r\n      case 'doing':\r\n      case '진행':\r\n      case '진행중':\r\n        status = TodoStatus.IN_PROGRESS;\r\n        break;\r\n        \r\n      case 'completed':\r\n      case 'complete':\r\n      case 'done':\r\n      case '완료':\r\n      case '완료됨':\r\n        status = TodoStatus.COMPLETED;\r\n        break;\r\n        \r\n      case 'cancelled':\r\n      case 'cancel':\r\n      case '취소':\r\n      case '취소됨':\r\n        status = TodoStatus.CANCELLED;\r\n        break;\r\n        \r\n      default:\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: `지원하지 않는 상태입니다: ${statusStr}. 지원되는 상태: pending, in-progress, completed, cancelled`\r\n        });\r\n        return;\r\n    }\r\n    \r\n    // 이미 동일한 상태인 경우\r\n    if (todo.status === status) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `할 일 \"${todo.title}\"은(는) 이미 ${getStatusLabel(status)} 상태입니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 할 일 상태 변경\r\n    todoService.changeTodoStatus(todoId, status);\r\n    \r\n    // 성공 메시지 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `할 일 \"${todo.title}\"의 상태가 ${getStatusLabel(todo.status)}에서 ${getStatusLabel(status)}(으)로 변경되었습니다.`\r\n    });\r\n  } catch (error) {\r\n    console.error('할 일 상태 변경 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 상태 변경 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 할 일 우선순위 변경\r\n */\r\nasync function changeTodoPriority(todoService: TodoService, todoId: string, priorityStr: string): Promise<void> {\r\n  try {\r\n    // 할 일 확인\r\n    const todo = todoService.getTodoItem(todoId);\r\n    \r\n    if (!todo) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `ID가 \\`${todoId}\\`인 할 일 항목을 찾을 수 없습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 우선순위 문자열을 열거형으로 변환\r\n    let priority: TodoPriority;\r\n    \r\n    switch (priorityStr.toLowerCase()) {\r\n      case 'high':\r\n      case '높음':\r\n      case '높은':\r\n      case 'urgent':\r\n      case '긴급':\r\n        priority = TodoPriority.HIGH;\r\n        break;\r\n        \r\n      case 'medium':\r\n      case 'mid':\r\n      case 'normal':\r\n      case '중간':\r\n      case '보통':\r\n        priority = TodoPriority.MEDIUM;\r\n        break;\r\n        \r\n      case 'low':\r\n      case '낮음':\r\n      case '낮은':\r\n        priority = TodoPriority.LOW;\r\n        break;\r\n        \r\n      default:\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: `지원하지 않는 우선순위입니다: ${priorityStr}. 지원되는 우선순위: high, medium, low`\r\n        });\r\n        return;\r\n    }\r\n    \r\n    // 이미 동일한 우선순위인 경우\r\n    if (todo.priority === priority) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `할 일 \"${todo.title}\"은(는) 이미 ${getPriorityLabel(priority)} 우선순위입니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 할 일 우선순위 변경\r\n    todoService.changeTodoPriority(todoId, priority);\r\n    \r\n    // 성공 메시지 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `할 일 \"${todo.title}\"의 우선순위가 ${getPriorityLabel(todo.priority)}에서 ${getPriorityLabel(priority)}(으)로 변경되었습니다.`\r\n    });\r\n  } catch (error) {\r\n    console.error('할 일 우선순위 변경 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 우선순위 변경 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 할 일 삭제\r\n */\r\nasync function deleteTodo(todoService: TodoService, todoId: string): Promise<void> {\r\n  try {\r\n    // 할 일 확인\r\n    const todo = todoService.getTodoItem(todoId);\r\n    \r\n    if (!todo) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `ID가 \\`${todoId}\\`인 할 일 항목을 찾을 수 없습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 삭제 확인\r\n    const confirmation = await vscode.window.showWarningMessage(\r\n      `할 일 \"${todo.title}\"을(를) 삭제하시겠습니까?`,\r\n      { modal: true },\r\n      '삭제',\r\n      '취소'\r\n    );\r\n    \r\n    if (confirmation !== '삭제') {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `할 일 삭제가 취소되었습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 할 일 삭제\r\n    const deleted = todoService.deleteTodoItem(todoId);\r\n    \r\n    // 성공 메시지 표시\r\n    if (deleted) {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `할 일 \"${todo.title}\"이(가) 삭제되었습니다.`\r\n      });\r\n    } else {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `할 일 삭제 중 오류가 발생했습니다.`\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('할 일 삭제 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 삭제 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 모든 할 일 삭제\r\n */\r\nasync function clearAllTodos(todoService: TodoService): Promise<void> {\r\n  try {\r\n    // 삭제 확인\r\n    const confirmation = await vscode.window.showWarningMessage(\r\n      '모든 할 일 항목을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\r\n      { modal: true },\r\n      '삭제',\r\n      '취소'\r\n    );\r\n    \r\n    if (confirmation !== '삭제') {\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `할 일 초기화가 취소되었습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 모든 할 일 삭제\r\n    todoService.clearAllTodos();\r\n    \r\n    // 성공 메시지 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `모든 할 일 항목이 삭제되었습니다.`\r\n    });\r\n  } catch (error) {\r\n    console.error('할 일 초기화 중 오류 발생:', error);\r\n    vscode.window.showErrorMessage(`할 일 초기화 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 우선순위 라벨 가져오기\r\n */\r\nfunction getPriorityLabel(priority: TodoPriority): string {\r\n  switch (priority) {\r\n    case TodoPriority.HIGH: return '높음';\r\n    case TodoPriority.MEDIUM: return '중간';\r\n    case TodoPriority.LOW: return '낮음';\r\n    default: return String(priority);\r\n  }\r\n}\r\n\r\n/**\r\n * 상태 라벨 가져오기\r\n */\r\nfunction getStatusLabel(status: TodoStatus): string {\r\n  switch (status) {\r\n    case TodoStatus.PENDING: return '대기중';\r\n    case TodoStatus.IN_PROGRESS: return '진행중';\r\n    case TodoStatus.COMPLETED: return '완료됨';\r\n    case TodoStatus.CANCELLED: return '취소됨';\r\n    default: return String(status);\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜 포맷팅\r\n */\r\nfunction formatDate(date: Date | string | undefined): string {\r\n  if (!date) return '';\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return d.toLocaleDateString();\r\n}","/**\r\n * 기본 슬래시 커맨드 정의\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { SlashCommand } from './slashCommand';\r\nimport { createGitCommands } from '../git/commands';\r\nimport { createVaultCommands } from './vaultCommands';\r\nimport { createRulesCommands } from './rulesCommands';\r\nimport { createJiraCommands } from './jiraCommands';\r\nimport { createTodoCommands } from './todoCommands';\r\nimport { Message, MessageRole } from '../../types/chat';\r\n\r\n/**\r\n * 기본 슬래시 커맨드 목록 생성\r\n */\r\nexport function createDefaultCommands(services?: any): SlashCommand[] {\r\n  const commands: SlashCommand[] = [];\r\n  \r\n  // VAULT 명령어 추가 (VAULT 서비스가 있는 경우)\r\n  if (services?.vaultService) {\r\n    const vaultCommands = createVaultCommands(services.vaultService);\r\n    commands.push(...vaultCommands);\r\n  }\r\n  \r\n  // Rules 명령어 추가 (Rules 서비스가 있는 경우)\r\n  if (services?.rulesService) {\r\n    const rulesCommands = createRulesCommands(services.rulesService);\r\n    commands.push(...rulesCommands);\r\n  }\r\n  \r\n  // Jira 명령어 추가 (Jira 서비스가 있는 경우)\r\n  if (services?.jiraService) {\r\n    const jiraCommands = createJiraCommands(services.jiraService);\r\n    commands.push(...jiraCommands);\r\n  }\r\n  \r\n  // Todo 명령어 추가 (Todo 서비스가 있는 경우)\r\n  if (services?.todoService) {\r\n    const todoCommands = createTodoCommands(services.todoService);\r\n    commands.push(...todoCommands);\r\n  }\r\n  \r\n  // 도움말 명령어\r\n  commands.push({\r\n    name: 'help',\r\n    aliases: ['?', 'commands', '도움말', '도움', '명령어', '알려줘', 'search', '검색'],\r\n    description: '사용 가능한 명령어 목록과 도움말을 표시합니다',\r\n    examples: ['/help', '/help git', '/help search 커밋 방법', '/도움말', '/도움말 검색 파일 열기'],\r\n    category: 'general',\r\n    priority: 1,\r\n    execute: async (context) => {\r\n      // 도움말 표시 명령은 SlashCommandManager에서 처리\r\n      const firstArg = context.args[0]?.toLowerCase();\r\n      \r\n      if (firstArg === 'search' || firstArg === '검색' || firstArg === 'find' || firstArg === '찾기') {\r\n        // 검색 모드: 자연어 검색으로 처리\r\n        const searchQuery = context.args.slice(1).join(' ');\r\n        if (searchQuery) {\r\n          await vscode.commands.executeCommand('ape.showCommandHelp', `search ${searchQuery}`);\r\n        } else {\r\n          vscode.window.showErrorMessage('검색어를 입력해주세요');\r\n        }\r\n      } else if (firstArg === 'faq' || firstArg === '자주묻는질문') {\r\n        // FAQ 모드\r\n        await vscode.commands.executeCommand('ape.showCommandHelp', 'faq');\r\n      } else if (firstArg === 'guide' || firstArg === 'guides' || firstArg === '가이드' || firstArg === '가이드목록') {\r\n        // 가이드 목록 모드\r\n        if (context.args.length > 1) {\r\n          // 특정 가이드 선택\r\n          const guideId = context.args[1];\r\n          await vscode.commands.executeCommand('ape.showCommandHelp', `guide ${guideId}`);\r\n        } else {\r\n          // 가이드 목록\r\n          await vscode.commands.executeCommand('ape.showCommandHelp', 'guides');\r\n        }\r\n      } else {\r\n        // 기본 도움말 또는 카테고리/명령어 상세 도움말\r\n        await vscode.commands.executeCommand('ape.showCommandHelp', firstArg);\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      const parts = partialArgs.split(' ');\r\n      \r\n      // 첫 번째 인자 자동완성\r\n      if (parts.length <= 1) {\r\n        const options = ['general', 'git', 'code', 'utility', 'advanced', 'search', 'find', 'faq', 'guide', 'guides', '검색', '찾기', '자주묻는질문', '가이드'];\r\n        return options.filter(option => \r\n          option.toLowerCase().startsWith(parts[0].toLowerCase())\r\n        );\r\n      }\r\n      \r\n      // 두 번째 인자 자동완성 (가이드인 경우)\r\n      if ((parts[0] === 'guide' || parts[0] === 'guides' || parts[0] === '가이드') && parts.length === 2) {\r\n        const guideOptions = ['auto-commit', 'git-integration', 'slash-commands', 'plugins'];\r\n        return guideOptions.filter(option => \r\n          option.toLowerCase().startsWith(parts[1].toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n  \r\n  // 채팅 내역 지우기\r\n  commands.push({\r\n    name: 'clear',\r\n    aliases: ['cls', 'clean', '지우기', '초기화', '클리어'],\r\n    description: '채팅 내역을 지웁니다',\r\n    category: 'general',\r\n    priority: 2,\r\n    execute: async () => {\r\n      await vscode.commands.executeCommand('ape.clearChat');\r\n    }\r\n  });\r\n  \r\n  // 모델 변경\r\n  commands.push({\r\n    name: 'model',\r\n    aliases: ['use', '모델', '모델변경', '모델선택'],\r\n    description: '사용할 LLM 모델을 변경합니다',\r\n    examples: ['/model list', '/model use LLAMA4-MAVERICK', '/모델 목록'],\r\n    category: 'advanced',\r\n    priority: 10,\r\n    execute: async (context) => {\r\n      const subCommand = context.args[0]?.toLowerCase();\r\n\r\n      if (!subCommand) {\r\n        // Model 하위 명령어 목록 표시 (슬랙/디스코드 스타일 자동완성)\r\n        const modelSubcommands = [\r\n          { command: 'list', description: '사용 가능한 모델 목록을 표시합니다' },\r\n          { command: 'use', description: '지정한 모델로 변경합니다' }\r\n        ];\r\n\r\n        // 명령어 제안을 채팅 인터페이스의 자동완성 UI에 표시\r\n        const suggestions = modelSubcommands.map(cmd => ({\r\n          label: `/model ${cmd.command}`,\r\n          description: cmd.description,\r\n          category: 'advanced',\r\n          insertText: `/model ${cmd.command} `\r\n        }));\r\n\r\n        // 명령어 제안 표시 - 채팅 입력창 자동완성 UI에 표시\r\n        vscode.commands.executeCommand('ape.showCommandSuggestions', suggestions);\r\n\r\n        // VSCode의 퀵픽 UI도 함께 표시 (백업 방법)\r\n        vscode.window.showQuickPick(\r\n          modelSubcommands.map(cmd => ({\r\n            label: cmd.command,\r\n            description: cmd.description,\r\n            detail: `Model 하위 명령어: ${cmd.command}`\r\n          })),\r\n          {\r\n            placeHolder: 'Model 명령어를 선택하세요',\r\n            matchOnDescription: true\r\n          }\r\n        ).then(selected => {\r\n          if (selected) {\r\n            // 선택한 명령어를 채팅 입력창에 삽입\r\n            vscode.commands.executeCommand('ape.insertToChatInput', `/model ${selected.label}`);\r\n          }\r\n        });\r\n      } else if (subCommand === 'list' || subCommand === '목록') {\r\n        // 모델 목록 표시\r\n        await vscode.commands.executeCommand('ape.selectModel');\r\n      } else if (subCommand === 'use' || subCommand === 'switch' || subCommand === '사용' || subCommand === '변경') {\r\n        // 특정 모델로 변경\r\n        const modelName = context.args[1];\r\n        if (modelName) {\r\n          await vscode.commands.executeCommand('ape.switchModel', modelName);\r\n        } else {\r\n          vscode.window.showErrorMessage('모델 이름을 지정해주세요');\r\n        }\r\n      } else {\r\n        vscode.window.showErrorMessage('알 수 없는 하위 명령어입니다');\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      // 고정된 모델 목록 사용\r\n      const models = [\r\n        'openai/gpt-4.1-mini',\r\n        'anthropic/claude-3-haiku-20240307',\r\n        'anthropic/claude-3-sonnet-20240229',\r\n        'perplexity/sonar-small-online',\r\n        'mistralai/mistral-large-latest',\r\n        'google/gemma-7b-it'\r\n      ];\r\n      const subCommands = ['list', 'use', 'switch', '목록', '사용', '변경'];\r\n      \r\n      const parts = partialArgs.split(' ');\r\n      \r\n      // 첫 번째 인자 자동완성\r\n      if (parts.length <= 1) {\r\n        return subCommands.filter(cmd => \r\n          cmd.toLowerCase().startsWith(partialArgs.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      // 두 번째 인자 자동완성 (모델 이름)\r\n      if (parts[0] === 'use' || parts[0] === 'switch' || parts[0] === '사용' || parts[0] === '변경') {\r\n        const modelQuery = parts[1] || '';\r\n        return models.filter((model: string) => \r\n          model.toLowerCase().startsWith(modelQuery.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  });\r\n  \r\n  // 코드 분석\r\n  commands.push({\r\n    name: 'analyze',\r\n    aliases: ['code', '분석', '코드', '코드분석'],\r\n    description: '현재 선택된 코드를 APE로 분석합니다',\r\n    examples: ['/analyze', '/code', '/분석'],\r\n    category: 'code',\r\n    priority: 5,\r\n    execute: async () => {\r\n      await vscode.commands.executeCommand('ape.analyzeCode');\r\n    }\r\n  });\r\n  \r\n  // Git 명령어 추가\r\n  const gitCommands = createGitCommands();\r\n  commands.push(...gitCommands);\r\n  \r\n  // 설정\r\n  commands.push({\r\n    name: 'settings',\r\n    aliases: ['config', 'preferences', '설정', '환경설정', '프리퍼런스'],\r\n    description: 'APE 설정을 변경합니다',\r\n    category: 'utility',\r\n    priority: 15,\r\n    execute: async () => {\r\n      await vscode.commands.executeCommand('workbench.action.openSettings', 'ape');\r\n    }\r\n  });\r\n\r\n  // Ask 명령어 - 다양한 스마트 프롬프팅 모드를 제공하는 LLM 기반 가이드\r\n  commands.push({\r\n    name: 'ask',\r\n    aliases: ['질문', '물어보기', '가이드', '어떻게', '어떡해', '방법', '조언'],\r\n    description: 'LLM을 사용하여 질문에 대한 가이드와 도움말을 제공합니다',\r\n    examples: ['/ask 컨플릭 해결하려면 어떻게해?', '/ask --mode=디버깅 코드가 오류를 발생시켜요', '/ask --mode=git 자동 커밋 어떻게 사용하나요?', '/ask --mode=테스트 단위 테스트 작성 방법'],\r\n    category: 'general',\r\n    priority: 1,\r\n    execute: async (context) => {\r\n      try {\r\n        // 모드 옵션 파싱\r\n        let mode = 'general';  // 기본 모드\r\n        let question = '';\r\n\r\n        // 모드 옵션 확인 (--mode=값 형식)\r\n        const modeArg = context.args.find(arg => arg.startsWith('--mode='));\r\n        if (modeArg) {\r\n          mode = modeArg.split('=')[1].trim();\r\n          // 모드 옵션을 제외한 나머지 인자를 질문으로 사용\r\n          question = context.args.filter(arg => arg !== modeArg).join(' ').trim();\r\n        } else {\r\n          question = context.args.join(' ').trim();\r\n        }\r\n\r\n        // 사용 가능한 모드 목록\r\n        const availableModes = [\r\n          { id: 'general', name: '일반', description: '일반적인 도움말 및 가이드 제공', icon: '📚' },\r\n          { id: 'debug', name: '디버깅', description: '코드 디버깅 및 문제 해결 가이드', icon: '🔍' },\r\n          { id: 'refactor', name: '리팩토링', description: '코드 개선 및 리팩토링 제안', icon: '🔄' },\r\n          { id: 'jira', name: 'JIRA', description: 'JIRA 이슈 작성 및 관리 가이드', icon: '📋' },\r\n          { id: 'workflow', name: '워크플로우', description: '작업 단계 및 절차 안내', icon: '📝' },\r\n          { id: 'code', name: '코드', description: '코드 작성 및 구현 가이드', icon: '💻' },\r\n          { id: 'git', name: 'Git', description: 'Git 관련 명령어 및 작업 가이드', icon: '🔀' },\r\n          { id: 'explain', name: '설명', description: '코드 및 개념 설명', icon: '📖' },\r\n          { id: 'planning', name: '계획', description: '개발 작업 계획 및 단계 수립', icon: '📊' },\r\n          { id: 'testing', name: '테스트', description: '테스트 케이스 작성 및 테스트 전략', icon: '✅' }\r\n        ];\r\n\r\n        // 질문이 없는 경우 모드 선택 UI 표시\r\n        if (!question) {\r\n          // 간소화된 모드 목록\r\n          const modesList = availableModes.map(m => `${m.icon} ${m.name}: ${m.id}`).join('\\n');\r\n\r\n          const modesHtml = `\r\n          <div>\r\n            <h3>스마트 프롬프팅 모드</h3>\r\n            <p>질문 시 다음 모드를 사용할 수 있습니다:</p>\r\n            <pre>${modesList}</pre>\r\n            <p>사용법: <code>/ask --mode=[모드명] [질문]</code></p>\r\n          </div>`;\r\n\r\n          await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n            role: 'assistant',\r\n            content: modesHtml\r\n          });\r\n          return;\r\n        }\r\n\r\n        // LLM 서비스 가져오기\r\n        let llmService;\r\n\r\n        if (services && services.llmService) {\r\n          // 개발 환경에서는 services 객체가 전달됨\r\n          llmService = services.llmService;\r\n        } else {\r\n          // 익스텐션에서 서비스 가져오기 시도\r\n          const extension = vscode.extensions.getExtension('ape-team.ape-extension');\r\n          if (extension && extension.isActive) {\r\n            llmService = extension.exports.llmService;\r\n          }\r\n        }\r\n\r\n        // LLM 서비스 존재 확인\r\n        if (!llmService) {\r\n          vscode.window.showErrorMessage('LLM 서비스를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n\r\n        // help.json과 guide.json 내용 로드\r\n        let helpData;\r\n        let guideData;\r\n\r\n        // 익스텐션 정보 가져오기\r\n        const extension = vscode.extensions.getExtension('ape-team.ape-extension');\r\n\r\n        if (!extension) {\r\n          throw new Error('APE 익스텐션을 찾을 수 없습니다.');\r\n        }\r\n\r\n        const extensionPath = extension.extensionPath;\r\n        const helpPath = path.join(extensionPath, 'src', 'data', 'help.json');\r\n        const guidePath = path.join(extensionPath, 'src', 'data', 'guide.json');\r\n\r\n        try {\r\n          helpData = JSON.parse(fs.readFileSync(helpPath, 'utf8'));\r\n        } catch (error) {\r\n          console.error('help.json 파일 로드 오류:', error);\r\n          // 기본 데이터 구조 제공\r\n          helpData = { categories: [], faq: [], guides: [] };\r\n        }\r\n\r\n        try {\r\n          guideData = JSON.parse(fs.readFileSync(guidePath, 'utf8'));\r\n        } catch (error) {\r\n          console.error('guide.json 파일 로드 오류:', error);\r\n          // 기본 데이터 구조 제공\r\n          guideData = { workflows: [], commandGuides: [] };\r\n        }\r\n\r\n        // 선택한 모드에 따라 시스템 프롬프트 생성\r\n        let systemPrompt = '';\r\n        let modeIcon = '📚';\r\n        let modeName = '일반';\r\n\r\n        // 현재 모드에 해당하는 정보 찾기\r\n        const currentMode = availableModes.find(m => m.id === mode.toLowerCase() || m.name === mode);\r\n        if (currentMode) {\r\n          modeIcon = currentMode.icon;\r\n          modeName = currentMode.name;\r\n        }\r\n\r\n        switch (mode.toLowerCase()) {\r\n          case 'debug':\r\n          case '디버깅':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 디버깅 도우미입니다.\r\n사용자가 제시한 코드 문제나 오류에 대해 help.json과 guide.json에 있는 정보를 바탕으로 디버깅 방법을 안내해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 문제의 잠재적 원인을 분석하고 진단하세요\r\n2. 오류 메시지의 의미를 설명하세요\r\n3. 단계별 디버깅 과정을 구체적으로 안내하세요\r\n4. 관련 APE 명령어나 도구가 있다면 함께 소개하세요\r\n5. 문제 해결을 위한 검증 방법도 제시하세요\r\n\r\n답변 형식:\r\n[문제 진단 요약]\r\n\r\n[가능한 원인 분석]\r\n\r\n[단계별 디버깅 방법]\r\n\r\n[관련 명령어 및 도구]`;\r\n            break;\r\n          case 'refactor':\r\n          case '리팩토링':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 리팩토링 도우미입니다.\r\n사용자의 코드 개선 요청에 대해 help.json과 guide.json에 있는 정보를 바탕으로 리팩토링 방법을 안내해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 코드의 품질, 가독성, 성능 측면에서 개선점을 분석하세요\r\n2. 디자인 패턴이나 모범 사례를 제안하세요\r\n3. 단계별 리팩토링 과정을 구체적으로 안내하세요\r\n4. 관련 APE 명령어나 도구가 있다면 함께 소개하세요\r\n5. 리팩토링 후 예상되는 이점을 설명하세요\r\n\r\n답변 형식:\r\n[코드 분석 요약]\r\n\r\n[개선 가능한 부분]\r\n\r\n[리팩토링 접근 방법]\r\n\r\n[관련 명령어 및 도구]`;\r\n            break;\r\n          case 'jira':\r\n          case 'jira 이슈':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 JIRA 도우미입니다.\r\n사용자의 JIRA 이슈 작성 또는 관리 요청에 대해 help.json과 guide.json에 있는 정보를 바탕으로 안내해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. JIRA 이슈 작성을 위한 구조화된 템플릿을 제공하세요\r\n2. 이슈 제목, 설명, 재현 단계, 기대 결과 등 필요한 항목을 포함하세요\r\n3. APE에서 JIRA 관련 명령어나 기능을 소개하세요\r\n4. 이슈 추적 및 관리 모범 사례를 제안하세요\r\n\r\n답변 형식:\r\n[JIRA 이슈 템플릿]\r\n\r\n[APE JIRA 통합 기능]\r\n\r\n[JIRA 이슈 관리 팁]`;\r\n            break;\r\n          case 'workflow':\r\n          case '워크플로우':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 워크플로우 도우미입니다.\r\n사용자의 작업 프로세스 관련 질문에 대해 help.json과 guide.json에 있는 정보를 바탕으로 워크플로우를 안내해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 작업 목표 달성을 위한 명확한 단계별 절차를 설명하세요\r\n2. 각 단계마다 필요한 APE 명령어나 기능을 연결하세요\r\n3. 작업 간 의존성과 순서를 명확히 하세요\r\n4. 체크포인트나 검증 단계를 포함하세요\r\n5. 자동화 가능한 부분이 있다면 제안하세요\r\n\r\n답변 형식:\r\n[워크플로우 개요]\r\n\r\n[단계별 작업 절차]\r\n\r\n[추천 자동화 옵션]\r\n\r\n[관련 명령어 및 도구]`;\r\n            break;\r\n          case 'code':\r\n          case '코드':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 코드 작성 도우미입니다.\r\n사용자의 코드 구현 관련 질문에 대해 help.json과 guide.json에 있는 정보를 바탕으로 가이드를 제공해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 구현하려는 기능에 대한 접근 방식을 제안하세요\r\n2. 필요한 구성 요소와 설계 패턴을 설명하세요\r\n3. 핵심 코드 구현 방법을 단계별로 안내하세요\r\n4. APE에서 제공하는 관련 도구와 명령어를 소개하세요\r\n5. 테스트 및 검증 방법도 포함하세요\r\n\r\n답변 형식:\r\n[기능 구현 접근 방식]\r\n\r\n[핵심 구성 요소]\r\n\r\n[구현 단계]\r\n\r\n[관련 명령어 및 도구]`;\r\n            break;\r\n          case 'git':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 Git 도우미입니다.\r\n사용자의 Git 관련 질문에 대해 help.json과 guide.json에 있는 정보를 바탕으로 가이드를 제공해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. Git 명령어와 워크플로우에 관한 명확한 설명을 제공하세요\r\n2. APE의 Git 관련 명령어와 사용법을 상세하게 안내하세요\r\n3. 문제 상황별 해결 방법을 단계별로 설명하세요\r\n4. Git 모범 사례와 팁을 공유하세요\r\n5. APE의 자동 커밋, 충돌 해결 등 특화 기능을 강조하세요\r\n\r\n답변 형식:\r\n[핵심 답변]\r\n\r\n[상세 설명 및 단계별 방법]\r\n\r\n[APE Git 명령어 관련 정보]\r\n\r\n[참고할 수 있는 모범 사례]`;\r\n            break;\r\n          case 'explain':\r\n          case '설명':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 개념 설명 도우미입니다.\r\n사용자가 질문한 코드나 개념에 대해 help.json과 guide.json에 있는 정보를 바탕으로 명확한 설명을 제공해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 개념이나 코드의 목적과 기능을 명확히 설명하세요\r\n2. 핵심 원리와 작동 방식을 이해하기 쉽게 풀어서 설명하세요\r\n3. 실제 사용 예시와 적용 사례를 제공하세요\r\n4. 관련된 다른 개념이나 패턴과의 관계를 설명하세요\r\n5. 관련 APE 기능이 있다면 함께 소개하세요\r\n\r\n답변 형식:\r\n[개념 정의 - 1-2문장]\r\n\r\n[작동 원리 설명]\r\n\r\n[사용 사례 및 예시]\r\n\r\n[관련 개념 및 APE 기능]`;\r\n            break;\r\n          case 'planning':\r\n          case '계획':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 개발 계획 도우미입니다.\r\n사용자의 개발 계획 관련 질문에 대해 help.json과 guide.json에 있는 정보를 바탕으로 체계적인 계획 수립을 도와야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 목표 달성을 위한 명확한 단계별 계획을 수립하세요\r\n2. 각 단계의 우선순위와 의존성을 고려하세요\r\n3. 일정 추정과 마일스톤을 제안하세요\r\n4. 잠재적 위험 요소와 대응 방안을 분석하세요\r\n5. APE 기능을 활용한 작업 효율화 방안을 제안하세요\r\n\r\n답변 형식:\r\n[계획 개요]\r\n\r\n[단계별 작업 계획]\r\n\r\n[일정 및 마일스톤]\r\n\r\n[위험 요소 및 대응 방안]\r\n\r\n[APE 기능 활용 방안]`;\r\n            break;\r\n          case 'testing':\r\n          case '테스트':\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 테스트 도우미입니다.\r\n사용자의 테스트 관련 질문에 대해 help.json과 guide.json에 있는 정보를 바탕으로 테스트 전략과\r\n구현 방법을 안내해야 합니다.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 테스트 대상에 적합한 테스트 유형과 방법론을 추천하세요\r\n2. 효과적인 테스트 케이스 설계 방법을 제안하세요\r\n3. 테스트 코드 작성 예시와 모범 사례를 제공하세요\r\n4. 테스트 자동화와 CI/CD 통합 방안을 안내하세요\r\n5. APE에서 제공하는 테스트 관련 도구와 명령어를 소개하세요\r\n\r\n답변 형식:\r\n[테스트 전략 개요]\r\n\r\n[테스트 케이스 설계]\r\n\r\n[테스트 코드 작성 방법]\r\n\r\n[테스트 자동화 방안]\r\n\r\n[관련 APE 도구 및 명령어]`;\r\n            break;\r\n          case 'general':\r\n          case '일반':\r\n          default:\r\n            systemPrompt = `당신은 APE(Agentic Programming Extension)의 가이드 도우미입니다.\r\n사용자의 질문에 대해 help.json과 guide.json에 있는 정보를 기반으로 명확하고 구체적인 답변을 제공해야 합니다.\r\n질문과 가장 관련성 높은 명령어, 워크플로우, 가이드를 찾아 답변하세요.\r\n\r\n답변 시 다음 규칙을 따르세요:\r\n1. 사용자 질문과 관련된 명령어가 있다면 명령어 이름, 설명, 예시를 포함하세요\r\n2. 명령어 사용법과 별칭을 명확히 설명하세요\r\n3. 관련된 워크플로우가 있다면 단계별로 설명하세요\r\n4. 사용자가 질문한 작업을 수행하는 방법을 구체적인 예시와 함께 제공하세요\r\n5. 모든 답변은 한국어로 제공합니다\r\n6. 관련 명령어가 여러 개 있으면 가장 적합한 것을 중심으로 설명하고 다른 관련 명령어도 간략히 언급하세요\r\n7. 답변은 간결하고 명확하게 작성하세요\r\n8. 가이드와 도움말에 없는 내용에 대해서는 정확히 모른다고 답변하세요\r\n\r\n답변 형식:\r\n[핵심 답변 - 1-2문장]\r\n\r\n[상세 설명 및 단계별 방법]\r\n\r\n[예시 및 관련 명령어]`;\r\n            break;\r\n        }\r\n\r\n        // 컨텍스트 메시지 생성 (help.json, guide.json 데이터)\r\n        const helpCommandsStr = helpData.categories\r\n          .flatMap((category: any) => category.commands)\r\n          .map((cmd: any) => `${cmd.name}: ${cmd.description}\\n사용법: ${cmd.usage || '/' + cmd.name}\\n예시: ${cmd.examples?.join(', ') || '없음'}\\n별칭: ${cmd.aliases?.join(', ') || '없음'}\\n`)\r\n          .join('\\n');\r\n\r\n        const faqStr = helpData.faq\r\n          .map((item: any) => `Q: ${item.question}\\nA: ${item.answer}`)\r\n          .join('\\n\\n');\r\n\r\n        const guidesStr = guideData.commandGuides\r\n          .map((guide: any) => `${guide.title}:\\n${guide.content.replace(/#+\\s/g, '')}`)\r\n          .join('\\n\\n');\r\n\r\n        const workflowsStr = guideData.workflows\r\n          .map((workflow: any) => `${workflow.name}: ${workflow.description}\\n권장 명령어: ${workflow.recommendedCommands.map((cmd: any) => cmd.command).join(', ')}`)\r\n          .join('\\n\\n');\r\n\r\n        // 질문을 LLM에 전송\r\n        const messages = [\r\n          {\r\n            id: `system_${Date.now()}`,\r\n            role: MessageRole.System,\r\n            content: systemPrompt,\r\n            timestamp: new Date()\r\n          },\r\n          {\r\n            id: `context_1_${Date.now()}`,\r\n            role: MessageRole.User,\r\n            content: `다음은 APE의 명령어 목록입니다:\\n\\n${helpCommandsStr}`,\r\n            timestamp: new Date()\r\n          },\r\n          {\r\n            id: `context_2_${Date.now()}`,\r\n            role: MessageRole.User,\r\n            content: `다음은 APE의 FAQ 목록입니다:\\n\\n${faqStr}`,\r\n            timestamp: new Date()\r\n          },\r\n          {\r\n            id: `context_3_${Date.now()}`,\r\n            role: MessageRole.User,\r\n            content: `다음은 APE의 가이드 목록입니다:\\n\\n${guidesStr}`,\r\n            timestamp: new Date()\r\n          },\r\n          {\r\n            id: `context_4_${Date.now()}`,\r\n            role: MessageRole.User,\r\n            content: `다음은 APE의 워크플로우 목록입니다:\\n\\n${workflowsStr}`,\r\n            timestamp: new Date()\r\n          },\r\n          {\r\n            id: `question_${Date.now()}`,\r\n            role: MessageRole.User,\r\n            content: question,\r\n            timestamp: new Date()\r\n          }\r\n        ];\r\n\r\n        // 진행 중 메시지 표시\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: '질문을 분석하고 답변을 준비하고 있습니다...',\r\n          messageId: 'temp_loading'\r\n        });\r\n\r\n        // LLM에 요청 전송\r\n        const response = await llmService.sendRequest(messages, { temperature: 0.2 });\r\n\r\n        if (response.success && response.data) {\r\n          // 현재 모드에 해당하는 뱃지 생성\r\n          const modeBadge = `<div style=\"display:inline-block; padding:5px 10px; background-color:#f0f0f0; border-radius:5px; margin-bottom:10px;\">\r\n            <span style=\"font-size:16px;\">${modeIcon}</span> <strong>${modeName} 모드</strong>\r\n          </div>`;\r\n\r\n          // 모드 선택기 UI 생성 (간소화)\r\n          const modeSelector = `<div style=\"margin-top:15px; color:#0066cc; cursor:pointer;\">\r\n            <span>다른 모드로 질문하려면 '/ask --mode=[모드명] ${question}' 명령어를 입력하세요.</span>\r\n          </div>`;\r\n\r\n          // 간소화된 응답 형식\r\n          const formattedResponse = `${modeBadge}\\n\\n${response.data.message.content}\\n\\n${modeSelector}`;\r\n\r\n          // 결과를 채팅창에 표시\r\n          await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n            role: 'assistant',\r\n            content: formattedResponse,\r\n            replaceMessageId: 'temp_loading'\r\n          });\r\n        } else {\r\n          // 실패 메시지 표시\r\n          await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n            role: 'assistant',\r\n            content: '죄송합니다. 질문에 답변하는 중 오류가 발생했습니다.',\r\n            replaceMessageId: 'temp_loading'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Ask 명령어 오류:', error);\r\n        vscode.window.showErrorMessage(`질문 응답 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n\r\n        // 오류 메시지 표시\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: '죄송합니다. 질문에 답변하는 중 오류가 발생했습니다.',\r\n          replaceMessageId: 'temp_loading'\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  // 시스템 상태 명령어\r\n  commands.push({\r\n    name: 'system',\r\n    aliases: ['sys', '시스템', '상태'],\r\n    description: '시스템 정보와 메모리 상태를 표시합니다',\r\n    examples: ['/system', '/system memory', '/시스템'],\r\n    category: 'utility',\r\n    priority: 15,\r\n    execute: async (context) => {\r\n      try {\r\n        const subCommand = context.args[0]?.toLowerCase();\r\n\r\n        // 메모리 서비스와 LLM 서비스 참조\r\n        let memoryService;\r\n        let llmService;\r\n\r\n        if (services && services.memoryService && services.llmService) {\r\n          // 개발 환경에서는 services 객체가 전달됨\r\n          memoryService = services.memoryService;\r\n          llmService = services.llmService;\r\n        } else {\r\n          // 익스텐션에서 서비스 가져오기 시도\r\n          const extension = vscode.extensions.getExtension('ape-team.ape-extension');\r\n          if (extension && extension.isActive) {\r\n            memoryService = extension.exports.memoryService;\r\n            llmService = extension.exports.llmService;\r\n          }\r\n        }\r\n\r\n        // 서비스 존재 확인\r\n        if (!memoryService) {\r\n          vscode.window.showErrorMessage('메모리 서비스를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n\r\n        if (!llmService) {\r\n          vscode.window.showErrorMessage('LLM 서비스를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n\r\n        // 시스템 정보 구성 (일반 텍스트 형식)\r\n        let output = `\r\n+----------------------+\r\n|  APE 시스템 상태     |\r\n+----------------------+\r\n`;\r\n\r\n        // 현재 세션 정보\r\n        const currentSession = memoryService.getCurrentSession();\r\n        const messagesResult = await memoryService.getMessages();\r\n        const messages = messagesResult.success ? messagesResult.data || [] : [];\r\n\r\n        // 현재 모델 정보\r\n        const currentModel = llmService.getActiveModel();\r\n        const modelDisplayName = llmService.getModelDisplayName(currentModel);\r\n\r\n        // 메시지 수 계산\r\n        const userMessages = messages.filter((m: Message) => m.role === 'user').length;\r\n        const assistantMessages = messages.filter((m: Message) => m.role === 'assistant').length;\r\n        const systemMessages = messages.filter((m: Message) => m.role === 'system').length;\r\n\r\n        // 기본 시스템 정보 표시 (텍스트 형식)\r\n        output += '[ 세션 정보 ]\\n\\n';\r\n        output += `현재 세션: ${currentSession?.name || '기본 세션'}\\n`;\r\n        output += `세션 ID: ${currentSession?.id || 'default'}\\n`;\r\n        output += `생성 시간: ${currentSession?.createdAt.toLocaleString() || '알 수 없음'}\\n`;\r\n        output += `마지막 업데이트: ${currentSession?.updatedAt.toLocaleString() || '알 수 없음'}\\n\\n`;\r\n\r\n        output += '[ LLM 정보 ]\\n\\n';\r\n        output += `현재 모델: ${modelDisplayName}\\n`;\r\n        output += `모델 ID: ${currentModel}\\n\\n`;\r\n\r\n        output += '[ 메모리 통계 ]\\n\\n';\r\n        output += `총 메시지 수: ${messages.length}개\\n`;\r\n        output += `사용자 메시지: ${userMessages}개\\n`;\r\n        output += `어시스턴트 메시지: ${assistantMessages}개\\n`;\r\n        output += `시스템 메시지: ${systemMessages}개\\n\\n`;\r\n\r\n        // 메모리 상세 정보 (메모리 하위 명령어인 경우)\r\n        if (!subCommand || subCommand === 'memory' || subCommand === '메모리') {\r\n          output += '[ 메모리 세부 정보 ]\\n\\n';\r\n\r\n          // 최근 메시지 5개 표시 (일반 텍스트 형식)\r\n          if (messages.length > 0) {\r\n            output += '최근 메시지 (최대 5개):\\n\\n';\r\n\r\n            const recentMessages = messages.slice(-5).reverse();\r\n            for (const msg of recentMessages) {\r\n              let role = '';\r\n              switch (msg.role) {\r\n                case 'user': role = '사용자'; break;\r\n                case 'assistant': role = 'Claude'; break;\r\n                case 'system': role = '시스템'; break;\r\n                default: role = msg.role as string;\r\n              }\r\n\r\n              // 내용 일부만 표시\r\n              const content = String(msg.content).replace(/<[^>]*>/g, ''); // HTML 태그 제거\r\n              const truncatedContent = content.substring(0, 30) + (content.length > 30 ? '...' : '');\r\n\r\n              const timestamp = msg.timestamp.toLocaleTimeString();\r\n\r\n              output += `* ${timestamp} | ${role}: ${truncatedContent}\\n`;\r\n            }\r\n            output += '\\n';\r\n          }\r\n        }\r\n\r\n        // 사용자에게 정보 표시\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: output\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('시스템 상태 명령어 오류:', error);\r\n        vscode.window.showErrorMessage(`시스템 상태 조회 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      const subCommands = ['memory', '메모리'];\r\n      const parts = partialArgs.split(' ');\r\n\r\n      // 첫 번째 인자 자동완성\r\n      if (parts.length <= 1) {\r\n        return subCommands.filter(cmd =>\r\n          cmd.toLowerCase().startsWith(parts[0]?.toLowerCase() || '')\r\n        );\r\n      }\r\n\r\n      return [];\r\n    }\r\n  });\r\n  \r\n  // 파일 열기\r\n  commands.push({\r\n    name: 'open',\r\n    aliases: ['file', '열기', '파일', '파일열기'],\r\n    description: '파일을 엽니다',\r\n    examples: ['/open package.json', '/open src/index.ts', '/파일열기 package.json'],\r\n    category: 'utility',\r\n    priority: 20,\r\n    execute: async (context) => {\r\n      const filePath = context.args.join(' ');\r\n      \r\n      if (!filePath) {\r\n        vscode.window.showErrorMessage('열 파일 경로를 지정해주세요');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const document = await vscode.workspace.openTextDocument(filePath);\r\n        await vscode.window.showTextDocument(document);\r\n      } catch {\r\n        vscode.window.showErrorMessage(`파일을 열 수 없습니다: ${filePath}`);\r\n      }\r\n    }\r\n  });\r\n  \r\n  // 대화 내역 저장 기능\r\n  commands.push({\r\n    name: 'save',\r\n    aliases: ['stack', 'history', 'save', '기록', '대화기록', '저장'],\r\n    description: '현재 채팅 내역을 저장하고 관리합니다',\r\n    examples: ['/save', '/stack', '/history', '/기록'],\r\n    category: 'utility',\r\n    priority: 25,\r\n    execute: async () => {\r\n      try {\r\n        // 메모리 서비스 가져오기\r\n        const memoryService = vscode.extensions.getExtension('ape-team.ape-extension')?.exports?.memoryService;\r\n        if (!memoryService) {\r\n          vscode.window.showErrorMessage('메모리 서비스를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n        \r\n        // VAULT 서비스 가져오기\r\n        const vaultService = vscode.extensions.getExtension('ape-team.ape-extension')?.exports?.vaultService;\r\n        if (!vaultService) {\r\n          vscode.window.showErrorMessage('VAULT 서비스를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n        \r\n        // LLM 서비스 가져오기\r\n        const llmService = vscode.extensions.getExtension('ape-team.ape-extension')?.exports?.llmService;\r\n        \r\n        // 현재 메시지 목록 가져오기\r\n        const messagesResult = await memoryService.getMessages();\r\n        if (!messagesResult.success || !messagesResult.data) {\r\n          vscode.window.showErrorMessage('대화 내역을 가져올 수 없습니다');\r\n          return;\r\n        }\r\n        \r\n        const messages = messagesResult.data;\r\n        \r\n        // 대화 내역 마크다운 형식으로 변환\r\n        let markdown = '';\r\n        \r\n        // 현재 시간 추가\r\n        const now = new Date();\r\n        const dateStr = now.toISOString().split('T')[0];\r\n        const timeStr = now.toTimeString().split(' ')[0];\r\n        const timestamp = now.toISOString();\r\n        \r\n        markdown += `## ${dateStr} ${timeStr}\\n\\n`;\r\n        \r\n        // 메시지 역순으로 변환 (최신 메시지가 위에 오도록)\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n          const message = messages[i];\r\n          \r\n          // 시스템 메시지나 웰컴 메시지는 건너뛰기\r\n          if (message.role === 'system' && message.content.includes('welcome-container')) {\r\n            continue;\r\n          }\r\n          \r\n          // 사용자나 어시스턴트 메시지만 포함\r\n          if (message.role === 'user' || message.role === 'assistant') {\r\n            const role = message.role === 'user' ? '사용자' : 'Claude';\r\n            \r\n            // HTML 태그 제거 (간단한 방식으로)\r\n            const contentStr = message.content.replace(/<[^>]*>/g, '');\r\n            \r\n            markdown += `**${role}**: ${contentStr}\\n\\n`;\r\n            \r\n            // 구분선 추가 (마지막 메시지 제외)\r\n            if (i > 0) {\r\n              markdown += '---\\n\\n';\r\n            }\r\n          }\r\n        }\r\n        \r\n        // 채팅 내역 제목 생성 (LLM 서비스 사용)\r\n        let chatTitle = `채팅 내역 ${dateStr} ${timeStr}`;\r\n        \r\n        if (llmService && messages.length > 0) {\r\n          try {\r\n            // 첫 번째 사용자 메시지 찾기\r\n            const firstUserMessage = messages.find((m: any) => m.role === 'user');\r\n            if (firstUserMessage) {\r\n              // LLM에 요약 요청\r\n              const summaryPrompt = `다음 메시지의 내용을 20자 이내의 한국어 제목으로 요약해주세요: \"${firstUserMessage.content.replace(/<[^>]*>/g, '').slice(0, 200)}${firstUserMessage.content.length > 200 ? '...' : ''}\"`;\r\n              const summaryResult = await llmService.getSingleCompletion(summaryPrompt);\r\n              \r\n              if (summaryResult && summaryResult.trim()) {\r\n                // 요약 결과에서 따옴표나 공백 제거\r\n                chatTitle = summaryResult.trim().replace(/^[\"']|[\"']$/g, '');\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error('채팅 제목 생성 오류:', error);\r\n            // 오류 발생 시 기본 제목 사용 (이미 설정됨)\r\n          }\r\n        }\r\n        \r\n        // UUID 생성\r\n        const uuid = `chat_${Date.now()}_${Math.random().toString(36).substring(2, 10)}`;\r\n        \r\n        // 워크스페이스 루트 경로 가져오기\r\n        const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n        if (!workspaceFolder) {\r\n          vscode.window.showErrorMessage('워크스페이스 폴더를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n        \r\n        // .ape/vault/chat-history 디렉토리 경로 확인 및 생성\r\n        const chatHistoryDir = path.join(workspaceFolder.uri.fsPath, '.ape', 'vault', 'chat-history');\r\n        const chatHistoryUri = vscode.Uri.file(chatHistoryDir);\r\n        \r\n        try {\r\n          await vscode.workspace.fs.stat(chatHistoryUri);\r\n        } catch {\r\n          // 디렉토리가 없으면 생성\r\n          await vscode.workspace.fs.createDirectory(chatHistoryUri);\r\n        }\r\n        \r\n        // 채팅 내역 파일 경로 (UUID 사용)\r\n        const chatHistoryPath = vscode.Uri.joinPath(chatHistoryUri, `${uuid}.md`);\r\n        \r\n        // 메타데이터 파일 경로\r\n        const metadataPath = vscode.Uri.joinPath(chatHistoryUri, `${uuid}.meta.json`);\r\n        \r\n        // 메타데이터 생성\r\n        const metadata = {\r\n          id: uuid,\r\n          title: chatTitle,\r\n          createdAt: timestamp,\r\n          updatedAt: timestamp,\r\n          messageCount: messages.length\r\n        };\r\n        \r\n        // 파일 저장 (채팅 내역)\r\n        await vscode.workspace.fs.writeFile(\r\n          chatHistoryPath,\r\n          Buffer.from(markdown, 'utf8')\r\n        );\r\n        \r\n        // 파일 저장 (메타데이터)\r\n        await vscode.workspace.fs.writeFile(\r\n          metadataPath,\r\n          Buffer.from(JSON.stringify(metadata, null, 2), 'utf8')\r\n        );\r\n        \r\n        // 트리 뷰 새로고침\r\n        try {\r\n          await vscode.commands.executeCommand('ape.refreshTreeView');\r\n        } catch (error) {\r\n          console.error('트리 뷰 새로고침 오류:', error);\r\n        }\r\n        \r\n        // 결과를 채팅창에 표시\r\n        await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n          role: 'assistant',\r\n          content: `대화 내역이 **${chatTitle}**으로 저장되었습니다. 총 ${messages.length}개의 메시지가 기록되었습니다.\r\n\r\n채팅 내역은 트리 뷰에서 확인하고 관리할 수 있습니다.`\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('대화 내역 저장 오류:', error);\r\n        vscode.window.showErrorMessage(`대화 내역 저장 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    }\r\n  });\r\n  \r\n  // 대화 내역 보기 기능\r\n  commands.push({\r\n    name: 'show',\r\n    aliases: ['view', 'display', '보기', '내역보기', '대화보기'],\r\n    description: '저장된 채팅 내역을 확인합니다',\r\n    examples: ['/show', '/view', '/보기', '/show 채팅ID'],\r\n    category: 'utility',\r\n    priority: 25,\r\n    execute: async (context) => {\r\n      try {\r\n        // 워크스페이스 루트 경로 가져오기\r\n        const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n        if (!workspaceFolder) {\r\n          vscode.window.showErrorMessage('워크스페이스 폴더를 찾을 수 없습니다');\r\n          return;\r\n        }\r\n        \r\n        // 채팅 내역 폴더 경로 (.ape/vault/chat-history)\r\n        const chatHistoryDir = path.join(workspaceFolder.uri.fsPath, '.ape', 'vault', 'chat-history');\r\n        const chatHistoryUri = vscode.Uri.file(chatHistoryDir);\r\n        \r\n        // 폴더 존재 확인\r\n        try {\r\n          await vscode.workspace.fs.stat(chatHistoryUri);\r\n        } catch {\r\n          // 폴더가 없는 경우\r\n          await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n            role: 'assistant',\r\n            content: '저장된 대화 내역이 없습니다. `/save` 명령어를 사용하여 먼저 대화 내역을 저장해주세요.'\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 채팅 ID 지정 여부\r\n        const chatId = context.args[0];\r\n        \r\n        if (chatId) {\r\n          // 특정 채팅 내역 표시\r\n          await showSpecificChat(chatId, chatHistoryUri);\r\n        } else {\r\n          // 저장된 모든 채팅 내역 목록 표시\r\n          await showChatList(chatHistoryUri);\r\n        }\r\n      } catch (error) {\r\n        console.error('대화 내역 표시 오류:', error);\r\n        vscode.window.showErrorMessage(`대화 내역 표시 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    },\r\n    provideCompletions: (partialArgs) => {\r\n      // 이 시점에서는 간단한 빈 배열만 반환\r\n      // 실제 자동완성은 SlashCommandManager에서 처리할 때 구현\r\n      return [];\r\n    }\r\n  });\r\n  \r\n  /**\r\n   * 특정 채팅 내역 표시\r\n   * @param chatId 채팅 ID\r\n   * @param chatHistoryUri 채팅 내역 폴더 URI\r\n   */\r\n  async function showSpecificChat(chatId: string, chatHistoryUri: vscode.Uri): Promise<void> {\r\n    // 메타데이터 파일 경로\r\n    const metadataPath = vscode.Uri.joinPath(chatHistoryUri, `${chatId}.meta.json`);\r\n    \r\n    // 채팅 내역 파일 경로\r\n    const chatHistoryPath = vscode.Uri.joinPath(chatHistoryUri, `${chatId}.md`);\r\n    \r\n    // 파일 존재 확인\r\n    try {\r\n      await vscode.workspace.fs.stat(metadataPath);\r\n      await vscode.workspace.fs.stat(chatHistoryPath);\r\n    } catch {\r\n      // 파일이 없는 경우\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `ID가 '${chatId}'인 채팅 내역을 찾을 수 없습니다.`\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 메타데이터 읽기\r\n    const metadataData = await vscode.workspace.fs.readFile(metadataPath);\r\n    const metadata = JSON.parse(Buffer.from(metadataData).toString('utf8'));\r\n    \r\n    // 채팅 내역 읽기\r\n    const fileData = await vscode.workspace.fs.readFile(chatHistoryPath);\r\n    const content = Buffer.from(fileData).toString('utf8');\r\n    \r\n    // 결과를 채팅창에 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: `## ${metadata.title}\\n\\n\\`\\`\\`markdown\\n${content}\\n\\`\\`\\``\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 저장된 채팅 내역 목록 표시\r\n   * @param chatHistoryUri 채팅 내역 폴더 URI\r\n   */\r\n  async function showChatList(chatHistoryUri: vscode.Uri): Promise<void> {\r\n    // 메타데이터 파일 목록 가져오기\r\n    const files = await vscode.workspace.fs.readDirectory(chatHistoryUri);\r\n    const metaFiles = files.filter(([name]) => name.endsWith('.meta.json'));\r\n    \r\n    if (metaFiles.length === 0) {\r\n      // 저장된 채팅 내역이 없는 경우\r\n      await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: '저장된 대화 내역이 없습니다. `/save` 명령어를 사용하여 먼저 대화 내역을 저장해주세요.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 메타데이터 읽기\r\n    const chatList = [];\r\n    \r\n    for (const [fileName] of metaFiles) {\r\n      const metadataPath = vscode.Uri.joinPath(chatHistoryUri, fileName);\r\n      const metadataData = await vscode.workspace.fs.readFile(metadataPath);\r\n      const metadata = JSON.parse(Buffer.from(metadataData).toString('utf8'));\r\n      \r\n      // 날짜 포맷팅\r\n      const createdDate = new Date(metadata.createdAt);\r\n      const dateStr = createdDate.toLocaleDateString();\r\n      const timeStr = createdDate.toLocaleTimeString();\r\n      \r\n      chatList.push({\r\n        id: metadata.id,\r\n        title: metadata.title,\r\n        createdAt: `${dateStr} ${timeStr}`,\r\n        messageCount: metadata.messageCount\r\n      });\r\n    }\r\n    \r\n    // 최신순 정렬\r\n    chatList.sort((a, b) => b.id.localeCompare(a.id));\r\n    \r\n    // 마크다운 테이블 생성\r\n    let output = '## 저장된 채팅 내역 목록\\n\\n';\r\n    output += '| 제목 | 저장 시간 | 메시지 수 | 명령어 |\\n';\r\n    output += '|------|-------|----------|--------|\\n';\r\n    \r\n    for (const chat of chatList) {\r\n      output += `| ${chat.title} | ${chat.createdAt} | ${chat.messageCount}개 | \\`/show ${chat.id}\\` |\\n`;\r\n    }\r\n    \r\n    output += '\\n특정 채팅 내역을 보려면 위 명령어를 사용하세요.';\r\n    \r\n    // 결과를 채팅창에 표시\r\n    await vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n      role: 'assistant',\r\n      content: output\r\n    });\r\n  }\r\n  \r\n  return commands;\r\n}","/**\r\n * 도움말 시스템 프롬프트\r\n * \r\n * 이 파일은 LLM을 통한 스마트 도움말 시스템에 사용될 프롬프트를 정의합니다.\r\n */\r\n\r\n/**\r\n * 기본 도움말 시스템 프롬프트\r\n */\r\nexport const HELP_SYSTEM_PROMPT = `\r\n당신은 APE(Agentic Pipeline Engine) VS Code 확장 프로그램의 AI 비서입니다.\r\n사용자에게 사용 가능한 명령어와 기능을 안내하고 도움을 제공해주세요.\r\n\r\n# 명령어 목록\r\n\r\n## 일반 명령어\r\n- /help, /? - 이 도움말 표시\r\n- /clear, /cls - 채팅 내역 지우기\r\n- /settings, /config - 설정 페이지 열기\r\n- /model [모델명] - LLM 모델 변경 (예: /model NARRNAS, /model list)\r\n\r\n## Git 명령어\r\n- /git status - Git 상태 확인\r\n- /git commit - 변경사항 자동 커밋 (메시지 자동 생성)\r\n- /git push - 원격 저장소에 푸시\r\n- /git pull - 원격 저장소에서 풀\r\n- /git solve - 충돌 자동 해결\r\n- /git auto - 자동 커밋 기능 토글\r\n- /git consolidate - 임시 커밋 통합\r\n\r\n## 코드 명령어\r\n- /analyze, /code - 선택한 코드 분석\r\n- /open, /file - 지정한 파일 열기\r\n\r\n# 특수 기능\r\n- 인라인 코드 완성: 코드 작성 중 자동으로 다음 코드 제안\r\n- 탭 완성: 탭 키를 눌러 코드 완성 활성화\r\n- 코드 영역 별도 표시: 코드 블록 아래 복사, 삽입, 새 파일 생성 버튼 제공\r\n- 컨텍스트 인식 명령어: 현재 작업 환경에 맞는 명령어 자동 제안\r\n\r\n# 기타 정보\r\n- 버전: v0.3.0\r\n- 개발자: APE 프로젝트 팀\r\n\r\n자세한 사용법과 예제는 각 명령어 설명에 포함되어 있습니다.\r\n`;\r\n\r\n/**\r\n * 코드 관련 도움말 프롬프트\r\n */\r\nexport const CODE_HELP_PROMPT = `\r\n# 코드 처리 명령어 사용법\r\n\r\n## 코드 분석\r\n- /analyze, /code - 선택한 코드를 분석하고 설명합니다.\r\n  예: (코드 선택 후) /analyze\r\n\r\n## 코드 최적화\r\n- /optimize - 선택한 코드를 최적화하고 개선합니다.\r\n  예: (코드 선택 후) /optimize\r\n\r\n## 코드 리팩토링\r\n- /refactor - 선택한 코드를 리팩토링하여 품질을 개선합니다.\r\n  예: (코드 선택 후) /refactor\r\n\r\n## 코드 설명\r\n- /explain - 선택한 코드의 기능과 동작을 설명합니다.\r\n  예: (코드 선택 후) /explain\r\n\r\n# 코드 블록 기능\r\n\r\n## 코드 블록 작업\r\n- 복사 버튼: 코드 블록 내용을 클립보드에 복사합니다.\r\n- 삽입 버튼: 코드 블록 내용을 현재 편집기에 삽입합니다.\r\n- 새 파일 버튼: 코드 블록 내용으로 새 파일을 생성합니다.\r\n\r\n## 코드 작성 요청\r\n다음과 같이 요청하여 특정 코드를 생성할 수 있습니다:\r\n- \"TypeScript로 정렬 알고리즘 작성해줄\"\r\n- \"Python으로 파일 읽기 예제 보여줄\"\r\n- \"Java로 HTTP 클라이언트 구현해줄\"\r\n`;\r\n\r\n/**\r\n * Git 관련 도움말 프롬프트\r\n */\r\nexport const GIT_HELP_PROMPT = `\r\n# Git 명령어 사용법\r\n\r\n## 기본 Git 명령어\r\n- /git status - 현재 Git 저장소의 상태를 확인합니다.\r\n- /git commit - 변경된 파일을 자동으로 커밋합니다. 커밋 메시지는 변경 내용을 분석하여 자동 생성됩니다.\r\n- /git push - 현재 브랜치의 변경사항을 원격 저장소에 푸시합니다.\r\n- /git pull - 원격 저장소의 변경사항을 현재 브랜치로 가져옵니다.\r\n\r\n## 고급 Git 명령어\r\n- /git solve - 충돌이 발생한 파일을 자동으로 해결합니다.\r\n- /git branch [이름] - 새 브랜치를 생성하거나 브랜치 목록을 표시합니다.\r\n- /git auto [on|off] - 자동 커밋 기능을 켜거나 끗니다. 활성화되면 파일 저장 시 자동으로 커밋됩니다.\r\n- /git consolidate - '[APE][Temporary]' 접두사가 붙은 연속된 임시 커밋을 하나의 정식 커밋으로 통합합니다.\r\n\r\n## 예제\r\n- 현재 상태 확인: /git status\r\n- 변경사항 커밋: /git commit\r\n- 자동 커밋 켜기: /git auto on\r\n- 임시 커밋 통합: /git consolidate\r\n\r\n## 참고사항\r\n- 자동 커밋 메시지는 변경 내용을 분석하여 생성됩니다.\r\n- 충돌 해결은 AI 기반으로 진행되며, 복잡한 충돌은 수동 개입이 필요할 수 있습니다.\r\n- 브랜치 생성 시 현재 체크아웃된 브랜치에서 분기됩니다.\r\n`;\r\n\r\n/**\r\n * 도움말 시스템 프롬프트 생성\r\n * @param helpData 도움말 데이터 객체\r\n * @param query 사용자 질문\r\n * @returns LLM에 전달할 프롬프트\r\n */\r\nexport function generateHelpSystemPrompt(helpData: any, query: string): string {\r\n  return `\r\n# APE 도움말 시스템 - LLM 응답 가이드\r\n\r\n당신은 APE(Agentic Pipeline Extension)의 도움말 시스템입니다. 사용자의 질문에 대해 제공된 도움말 데이터 내에서만 정보를 찾아 응답해야 합니다. 제공된 정보에 없는 내용은 절대 추가하지 마세요.\r\n\r\n## 응답 지침\r\n\r\n1. 사용자 질문을 정확하게 이해하고 관련 정보만 제공하세요.\r\n2. 제공된 도움말 데이터에 없는 내용은 \"해당 정보는 제공된 도움말에 포함되어 있지 않습니다.\"라고 응답하세요.\r\n3. 명령어 관련 질문에는 사용법, 예시, 상세 설명을 포함하세요.\r\n4. 응답은 간결하고 명확하게 작성하되, 필요한 모든 정보는 포함해야 합니다.\r\n5. 적절한 마크다운 형식을 사용하여 가독성을 높이세요.\r\n6. 질문이 일반적인 프로그래밍이나 도구에 관한 것이라면, 반드시 APE 컨텍스트 내에서만 답변하세요.\r\n\r\n## 도움말 데이터\r\n\r\n이 데이터를 기반으로 사용자 질문에 응답하세요:\r\n\r\n${JSON.stringify(helpData, null, 2)}\r\n\r\n## 사용자 질문\r\n\r\n사용자: ${query}\r\n\r\n## 응답 형식\r\n\r\n응답 시 다음 형식을 따르세요:\r\n\r\n1. 질문 요약 또는 주제를 최상단에 H1 또는 H2 제목으로 표시\r\n2. 관련 명령어가 있다면 코드 블록으로 표시 (\\`/command\\`)\r\n3. 필요한 경우 단계별 안내 제공\r\n4. 관련 명령어나 가이드가 있다면 \"관련 명령어\" 또는 \"더 알아보기\" 섹션 추가\r\n\r\n답변을 시작하세요.\r\n`;\r\n}\r\n\r\n/**\r\n * 명령어에 대한 상세 프롬프트 생성\r\n * @param commandData 명령어 데이터\r\n * @returns LLM에 전달할 프롬프트\r\n */\r\nexport function generateCommandDetailPrompt(commandData: any): string {\r\n  return `\r\n# APE 명령어 상세 정보 - LLM 응답 가이드\r\n\r\n당신은 APE(Agentic Pipeline Extension)의 도움말 시스템입니다. 다음 명령어의 상세 정보를 제공해야 합니다.\r\n\r\n## 명령어 데이터\r\n\r\n${JSON.stringify(commandData, null, 2)}\r\n\r\n## 응답 지침\r\n\r\n다음 형식으로 명령어 상세 정보를 제공하세요:\r\n\r\n1. 명령어 이름과 간단한 설명을 H1 제목으로 표시\r\n2. 사용법을 코드 블록으로 표시\r\n3. 상세 설명 제공\r\n4. 예시 명령어 나열\r\n5. 별칭 목록 제공\r\n6. 관련 명령어 제안\r\n\r\n답변은 마크다운 형식으로 작성하세요. 제공된 데이터에 없는 내용을 추가하지 마세요.\r\n\r\n답변을 시작하세요.\r\n`;\r\n}\r\n\r\n/**\r\n * FAQ 질문에 대한 프롬프트 생성\r\n * @param faqData FAQ 데이터\r\n * @param query 사용자 질문\r\n * @returns LLM에 전달할 프롬프트\r\n */\r\nexport function generateFaqPrompt(faqData: any, query: string): string {\r\n  return `\r\n# APE FAQ 응답 가이드\r\n\r\n당신은 APE(Agentic Pipeline Extension)의 FAQ 시스템입니다. 사용자의 질문과 가장 관련성 높은 FAQ 항목을 찾아 응답해야 합니다.\r\n\r\n## FAQ 데이터\r\n\r\n${JSON.stringify(faqData, null, 2)}\r\n\r\n## 사용자 질문\r\n\r\n사용자: ${query}\r\n\r\n## 응답 지침\r\n\r\n1. 질문과 가장 관련성 높은 FAQ 항목(들)을 찾으세요.\r\n2. FAQ 내용을 기반으로 응답하되, 질문에 맞게 약간 조정할 수 있습니다.\r\n3. 관련 FAQ가 없다면 \"해당 질문에 관한 FAQ 항목이 없습니다.\"라고 응답하세요.\r\n4. 관련 명령어가 있다면 함께 제안하세요.\r\n\r\n답변을 마크다운 형식으로 작성하세요.\r\n\r\n답변을 시작하세요.\r\n`;\r\n}\r\n\r\n/**\r\n * 가이드 문서에 대한 프롬프트 생성\r\n * @param guideData 가이드 문서 데이터\r\n * @param guideId 가이드 ID\r\n * @returns LLM에 전달할 프롬프트\r\n */\r\nexport function generateGuidePrompt(guideData: any[], guideId: string): string {\r\n  const guide = guideData.find(g => g.id === guideId);\r\n  \r\n  if (!guide) {\r\n    return `\r\n# APE 가이드 문서 에러\r\n\r\n요청하신 가이드 문서(ID: ${guideId})를 찾을 수 없습니다. 다음 가이드 문서가 사용 가능합니다:\r\n\r\n${guideData.map(g => `- ${g.id}: ${g.title}`).join('\\n')}\r\n\r\n올바른 가이드 ID를 선택하여 다시 요청해주세요.\r\n`;\r\n  }\r\n  \r\n  return `\r\n# APE 가이드 문서 - ${guide.title}\r\n\r\n다음 가이드 문서 내용을 마크다운 형식으로 정리하여 제공하세요:\r\n\r\n${guide.content}\r\n\r\n답변 시 다음 사항을 고려하세요:\r\n1. 문서 형식과 구조를 유지하세요.\r\n2. 내용을 변경하거나 추가하지 마세요.\r\n3. 필요한 경우 마크다운 형식을 향상시켜 가독성을 높이세요.\r\n4. 코드 예제와 명령어는 적절한 코드 블록으로 표시하세요.\r\n\r\n답변을 시작하세요.\r\n`;\r\n}\r\n\r\n/**\r\n * 모든 가이드 목록 프롬프트 생성\r\n * @param guideData 가이드 문서 데이터\r\n * @returns LLM에 전달할 프롬프트\r\n */\r\nexport function generateGuidesListPrompt(guideData: any[]): string {\r\n  return `\r\n# APE 가이드 문서 목록\r\n\r\n다음 APE 가이드 문서 목록을 마크다운 형식으로 정리하여 제공하세요:\r\n\r\n${JSON.stringify(guideData, null, 2)}\r\n\r\n각 가이드에 대해 다음 정보를 포함하세요:\r\n1. 가이드 제목\r\n2. 짧은 설명 (가능한 경우)\r\n3. 가이드 ID (사용자가 특정 가이드를 요청할 때 사용)\r\n\r\n답변 형식:\r\n\r\n## APE 가이드 문서\r\n\r\n다음 가이드 문서를 이용할 수 있습니다:\r\n\r\n1. **[가이드 제목 1]**\r\n   - ID: [가이드 ID]\r\n   - [짧은 설명]\r\n\r\n2. **[가이드 제목 2]**\r\n   - ID: [가이드 ID]\r\n   - [짧은 설명]\r\n\r\n특정 가이드 문서를 보려면 \"/help guide [가이드 ID]\" 명령어를 사용하세요.\r\n예시: /help guide auto-commit\r\n\r\n답변을 시작하세요.\r\n`;\r\n}","/**\r\n * 도움말 렌더러\r\n * \r\n * 도움말 데이터를 웹뷰에 표시하기 위한 HTML로 변환합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { LLMService } from '../llm/llmService';\r\n\r\n// vscode 확장 인스턴스 캐시\r\n// 현재 사용되지 않지만 향후 사용 가능성이 있어 주석으로 유지\r\n// let _extensionContext: vscode.ExtensionContext | undefined;\r\n\r\n/**\r\n * 확장 컨텍스트 설정\r\n */\r\nexport function setExtensionContext(): void {\r\n  // 지금은 사용되지 않지만 향후 확장성을 위해 유지\r\n  // 매개변수도 제거\r\n}\r\n\r\n/**\r\n * 카테고리별 미니멀 아이콘 가져오기\r\n * @param category 카테고리 ID\r\n * @returns 미니멀 아이콘\r\n */\r\n/* 현재 사용되지 않는 함수이지만 향후 사용 가능성이 있어 주석으로 유지\r\nfunction getCategorySimpleIcon(category: string): string {\r\n  switch (category) {\r\n    case 'general':\r\n      return '●';  // 일반 명령어 - 심플한 원형\r\n    case 'git':\r\n      return '◆';  // Git 명령어 - 다이아몬드\r\n    case 'code':\r\n      return '▢';  // 코드 관련 - 사각형\r\n    case 'utility':\r\n      return '◈';  // 유틸리티 - 특수 문자\r\n    case 'advanced':\r\n      return '◎';  // 고급 설정 - 이중 원형\r\n    default:\r\n      return '○';  // 기본값 - 빈 원형\r\n  }\r\n}\r\n*/\r\n\r\n/**\r\n * Codicon CSS 파일에 대한 URI 가져오기\r\n */\r\nfunction getCodiconCssUri(): vscode.Uri {\r\n  const extension = vscode.extensions.getExtension('ape-team.ape-extension');\r\n  if (!extension) {\r\n    throw new Error('APE 확장을 찾을 수 없습니다');\r\n  }\r\n  \r\n  return vscode.Uri.joinPath(extension.extensionUri, 'media', 'codicon', 'codicon.css');\r\n}\r\nimport {\r\n  generateHelpSystemPrompt,\r\n  // 현재 사용되지 않는 함수들이지만 향후 사용 가능성이 있어 주석으로 유지\r\n  // generateCommandDetailPrompt,\r\n  // generateFaqPrompt,\r\n  // generateGuidePrompt,\r\n  // generateGuidesListPrompt\r\n} from '../../data/helpSystemPrompt';\r\n\r\n// 도움말 데이터 캐시\r\nlet helpDataCache: any = null;\r\n\r\n/**\r\n * 도움말 데이터 로드\r\n * @returns 도움말 데이터 객체\r\n */\r\nexport async function loadHelpData(): Promise<any> {\r\n  if (helpDataCache) {\r\n    return helpDataCache;\r\n  }\r\n\r\n  try {\r\n    const extensionPath = vscode.extensions.getExtension('ape-team.ape-extension')?.extensionPath;\r\n    if (!extensionPath) {\r\n      throw new Error('확장 프로그램 경로를 찾을 수 없습니다.');\r\n    }\r\n\r\n    const helpFilePath = path.join(extensionPath, 'src', 'data', 'help.json');\r\n    const helpDataStr = fs.readFileSync(helpFilePath, 'utf8');\r\n    helpDataCache = JSON.parse(helpDataStr);\r\n    return helpDataCache;\r\n  } catch (error) {\r\n    console.error('도움말 데이터 로드 오류:', error);\r\n    throw new Error('도움말 데이터를 로드할 수 없습니다.');\r\n  }\r\n}\r\n\r\n/**\r\n * 특정 명령어 데이터 가져오기\r\n * @param commandName 명령어 이름\r\n * @returns 명령어 데이터 객체\r\n */\r\nexport async function getCommandData(commandName: string): Promise<any | null> {\r\n  try {\r\n    const helpData = await loadHelpData();\r\n    \r\n    // 모든 카테고리 검색\r\n    for (const category of helpData.categories) {\r\n      // 카테고리 내 명령어 검색\r\n      for (const command of category.commands) {\r\n        // 명령어 이름 또는 별칭 매칭\r\n        if (command.name === commandName || (command.aliases && command.aliases.includes(commandName))) {\r\n          return {\r\n            ...command,\r\n            category: category.id,\r\n            categoryName: category.name\r\n          };\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  } catch (error) {\r\n    console.error('명령어 데이터 검색 오류:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 카테고리별 명령어 목록 가져오기\r\n * @param categoryId 카테고리 ID (옵션)\r\n * @returns 카테고리별 명령어 목록\r\n */\r\nexport async function getCommandsByCategory(categoryId?: string): Promise<any[]> {\r\n  try {\r\n    const helpData = await loadHelpData();\r\n    \r\n    // 특정 카테고리 요청 시\r\n    if (categoryId) {\r\n      const category = helpData.categories.find((c: any) => c.id === categoryId);\r\n      return category ? [category] : [];\r\n    }\r\n    \r\n    // 모든 카테고리 반환\r\n    return helpData.categories;\r\n  } catch (error) {\r\n    console.error('카테고리별 명령어 목록 가져오기 오류:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * 도움말 HTML 생성 (기본 카테고리 목록)\r\n * @param categoryId 카테고리 ID (옵션)\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateHelpHtml(categoryId?: string): Promise<string> {\r\n  try {\r\n    const categories = await getCommandsByCategory(categoryId);\r\n    \r\n    let content = `\r\n      <h1>APE 도움말</h1>\r\n      <p>사용 가능한 명령어 목록입니다. 각 명령어에 대한 자세한 정보를 보려면 명령어를 클릭하세요.</p>\r\n      \r\n      <div class=\"quick-actions\">\r\n        <h2>자주 사용하는 명령어</h2>\r\n        <div class=\"quick-buttons\">\r\n          <button class=\"quick-button git\" onclick=\"sendCommandToVSCode('git status')\">\r\n            <span class=\"codicon codicon-git-commit\"></span>Git 상태\r\n          </button>\r\n          <button class=\"quick-button code\" onclick=\"sendCommandToVSCode('analyze')\">\r\n            <span class=\"codicon codicon-code\"></span>코드 분석\r\n          </button>\r\n          <button class=\"quick-button utility\" onclick=\"sendCommandToVSCode('clear')\">\r\n            <span class=\"codicon codicon-clear-all\"></span>채팅 지우기\r\n          </button>\r\n          <button class=\"quick-button model\" onclick=\"sendCommandToVSCode('model list')\">\r\n            <span class=\"codicon codicon-settings-gear\"></span>모델 선택\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    \r\n    // 카테고리별 명령어 목록\r\n    for (const category of categories) {\r\n      content += `\r\n        <div class=\"help-category\">\r\n          <h2>${category.name}</h2>\r\n          <p>${category.description || ''}</p>\r\n          <div class=\"command-grid\">\r\n      `;\r\n      \r\n      // 카테고리 내 명령어\r\n      for (const command of category.commands) {\r\n        // 명령어 아이콘 선택\r\n        const iconName = getCategoryIcon(category.id);\r\n        \r\n        // 명령어 요약 카드\r\n        content += `\r\n          <div class=\"command-card\" onclick=\"sendCommandToVSCode('${command.name}')\">\r\n            <div class=\"command-name\">\r\n              <span class=\"command-icon codicon codicon-${iconName}\"></span>\r\n              <span class=\"command-text\">/${command.name}</span>\r\n            </div>\r\n            <div class=\"command-description\">${command.description}</div>\r\n            ${command.examples && command.examples.length > 0 ? \r\n              `<div class=\"command-examples\">예시: ${command.examples[0]}</div>` : ''}\r\n            ${command.aliases && command.aliases.length > 0 ? \r\n              `<div class=\"command-aliases\">별칭: ${command.aliases.map((a: string) => `/${a}`).join(', ')}</div>` : ''}\r\n          </div>\r\n        `;\r\n      }\r\n      \r\n      content += `\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    // 전체 HTML 래핑\r\n    return getHelpPageHtml(content);\r\n  } catch (error) {\r\n    console.error('도움말 HTML 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>도움말 로드 오류</h1>\r\n      <p>도움말 데이터를 로드하는 중 오류가 발생했습니다: ${error}</p>\r\n    `);\r\n  }\r\n}\r\n\r\n/**\r\n * 명령어 상세 정보 HTML 생성\r\n * @param commandName 명령어 이름\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateCommandDetailHtml(commandName: string): Promise<string> {\r\n  try {\r\n    const commandData = await getCommandData(commandName);\r\n    \r\n    if (!commandData) {\r\n      return getHelpPageHtml(`\r\n        <h1>명령어를 찾을 수 없음</h1>\r\n        <p>'${commandName}' 명령어를 찾을 수 없습니다.</p>\r\n        <p><a href=\"#\" onclick=\"sendCommandToVSCode('help')\">모든 명령어 보기</a></p>\r\n      `);\r\n    }\r\n    \r\n    let content = `\r\n      <div class=\"command-detail\">\r\n        <h1>/${commandData.name}</h1>\r\n        <div class=\"command-description\">${commandData.description}</div>\r\n        \r\n        <h2>상세 정보</h2>\r\n        <p>${commandData.longDescription || commandData.description}</p>\r\n        \r\n        <h2>사용법</h2>\r\n        <div class=\"command-usage\">\r\n          <code>${commandData.usage || `/${commandData.name}`}</code>\r\n        </div>\r\n    `;\r\n    \r\n    // 예시\r\n    if (commandData.examples && commandData.examples.length > 0) {\r\n      content += `\r\n        <h2>예시</h2>\r\n        <ul class=\"command-examples-list\">\r\n          ${commandData.examples.map((example: string) => `<li><code>${example}</code></li>`).join('')}\r\n        </ul>\r\n      `;\r\n    }\r\n    \r\n    // 별칭\r\n    if (commandData.aliases && commandData.aliases.length > 0) {\r\n      content += `\r\n        <h2>별칭</h2>\r\n        <div class=\"command-aliases\">\r\n          ${commandData.aliases.map((alias: string) => `<code>/${alias}</code>`).join(', ')}\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    // 관련 명령어\r\n    if (commandData.related && commandData.related.length > 0) {\r\n      content += `\r\n        <h2>관련 명령어</h2>\r\n        <div class=\"related-commands\">\r\n          ${commandData.related.map((cmd: string) => \r\n            `<a href=\"#\" class=\"related-command\" onclick=\"sendCommandToVSCode('${cmd}')\">${cmd}</a>`\r\n          ).join(', ')}\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    content += `\r\n      </div>\r\n      <div class=\"back-link\">\r\n        <a href=\"#\" onclick=\"sendCommandToVSCode('help')\">← 모든 명령어 보기</a>\r\n      </div>\r\n    `;\r\n    \r\n    return getHelpPageHtml(content);\r\n  } catch (error) {\r\n    console.error('명령어 상세 정보 HTML 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>명령어 정보 로드 오류</h1>\r\n      <p>명령어 정보를 로드하는 중 오류가 발생했습니다: ${error}</p>\r\n    `);\r\n  }\r\n}\r\n\r\n/**\r\n * FAQ HTML 생성\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateFaqHtml(): Promise<string> {\r\n  try {\r\n    const helpData = await loadHelpData();\r\n    const faqs = helpData.faq || [];\r\n    \r\n    let content = `\r\n      <h1>APE 자주 묻는 질문 (FAQ)</h1>\r\n      <div class=\"faq-list\">\r\n    `;\r\n    \r\n    for (const faq of faqs) {\r\n      content += `\r\n        <div class=\"faq-item\">\r\n          <div class=\"faq-question\">${faq.question}</div>\r\n          <div class=\"faq-answer\">${faq.answer}</div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    content += `\r\n      </div>\r\n      <div class=\"back-link\">\r\n        <a href=\"#\" onclick=\"sendCommandToVSCode('help')\">← 도움말로 돌아가기</a>\r\n      </div>\r\n    `;\r\n    \r\n    return getHelpPageHtml(content);\r\n  } catch (error) {\r\n    console.error('FAQ HTML 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>FAQ 로드 오류</h1>\r\n      <p>FAQ 데이터를 로드하는 중 오류가 발생했습니다: ${error}</p>\r\n    `);\r\n  }\r\n}\r\n\r\n/**\r\n * 가이드 문서 HTML 생성\r\n * @param guideId 가이드 ID\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateGuideHtml(guideId: string): Promise<string> {\r\n  try {\r\n    const helpData = await loadHelpData();\r\n    const guides = helpData.guides || [];\r\n    const guide = guides.find((g: any) => g.id === guideId);\r\n    \r\n    if (!guide) {\r\n      return getHelpPageHtml(`\r\n        <h1>가이드를 찾을 수 없음</h1>\r\n        <p>'${guideId}' 가이드를 찾을 수 없습니다.</p>\r\n        <p><a href=\"#\" onclick=\"sendCommandToVSCode('help guides')\">모든 가이드 보기</a></p>\r\n      `);\r\n    }\r\n    \r\n    // 마크다운 형식 그대로 표시\r\n    const content = `\r\n      <div class=\"guide-content markdown-body\">\r\n        ${guide.content}\r\n      </div>\r\n      <div class=\"back-link\">\r\n        <a href=\"#\" onclick=\"sendCommandToVSCode('help guides')\">← 모든 가이드 보기</a>\r\n      </div>\r\n    `;\r\n    \r\n    return getHelpPageHtml(content);\r\n  } catch (error) {\r\n    console.error('가이드 HTML 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>가이드 로드 오류</h1>\r\n      <p>가이드 데이터를 로드하는 중 오류가 발생했습니다: ${error}</p>\r\n    `);\r\n  }\r\n}\r\n\r\n/**\r\n * 모든 가이드 목록 HTML 생성\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateGuidesListHtml(): Promise<string> {\r\n  try {\r\n    const helpData = await loadHelpData();\r\n    const guides = helpData.guides || [];\r\n    \r\n    let content = `\r\n      <h1>APE 가이드 문서</h1>\r\n      <p>사용 가능한 가이드 문서 목록입니다. 각 가이드에 대한 자세한 정보를 보려면 제목을 클릭하세요.</p>\r\n      <div class=\"guides-list\">\r\n    `;\r\n    \r\n    for (const guide of guides) {\r\n      content += `\r\n        <div class=\"guide-item\">\r\n          <h2 class=\"guide-title\">\r\n            <a href=\"#\" onclick=\"sendCommandToVSCode('help guide ${guide.id}')\">${guide.title}</a>\r\n          </h2>\r\n          <div class=\"guide-description\">\r\n            ${guide.content.split('\\n')[0].replace(/^#+\\s+.*$/, '')}\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    content += `\r\n      </div>\r\n      <div class=\"back-link\">\r\n        <a href=\"#\" onclick=\"sendCommandToVSCode('help')\">← 도움말로 돌아가기</a>\r\n      </div>\r\n    `;\r\n    \r\n    return getHelpPageHtml(content);\r\n  } catch (error) {\r\n    console.error('가이드 목록 HTML 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>가이드 목록 로드 오류</h1>\r\n      <p>가이드 목록을 로드하는 중 오류가 발생했습니다: ${error}</p>\r\n    `);\r\n  }\r\n}\r\n\r\n/**\r\n * LLM을 사용한 스마트 도움말 생성\r\n * @param query 사용자 질문\r\n * @param llmService LLM 서비스 인스턴스\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateSmartHelpHtml(query: string, llmService: LLMService): Promise<string> {\r\n  try {\r\n    const helpData = await loadHelpData();\r\n    \r\n    // LLM 프롬프트 생성\r\n    const prompt = generateHelpSystemPrompt(helpData, query);\r\n    \r\n    // LLM에 질문 전송\r\n    const result = await llmService.getCompletion(prompt);\r\n    \r\n    if (!result.success || !result.data) {\r\n      throw new Error(result.error?.message || 'LLM 응답을 받을 수 없습니다.');\r\n    }\r\n    \r\n    // 마크다운 응답을 HTML로 변환\r\n    const markdownResponse = result.data;\r\n    \r\n    const content = `\r\n      <div class=\"smart-help\">\r\n        <h1>APE 도움말 - ${escapeHtml(query)}</h1>\r\n        <div class=\"markdown-body\">\r\n          ${markdownToHtml(markdownResponse)}\r\n        </div>\r\n      </div>\r\n      <div class=\"back-link\">\r\n        <a href=\"#\" onclick=\"sendCommandToVSCode('help')\">← 도움말로 돌아가기</a>\r\n      </div>\r\n    `;\r\n    \r\n    return getHelpPageHtml(content);\r\n  } catch (error) {\r\n    console.error('스마트 도움말 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>도움말 응답 오류</h1>\r\n      <p>도움말을 생성하는 중 오류가 발생했습니다: ${error}</p>\r\n      <p><a href=\"#\" onclick=\"sendCommandToVSCode('help')\">도움말로 돌아가기</a></p>\r\n    `);\r\n  }\r\n}\r\n\r\n/**\r\n * 도움말 페이지 HTML 래핑\r\n * @param content 내용 HTML\r\n * @returns 완성된 HTML 문자열\r\n */\r\nfunction getHelpPageHtml(content: string): string {\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html lang=\"ko\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <title>APE 도움말</title>\r\n      <link rel=\"stylesheet\" href=\"${getCodiconCssUri().toString()}\" />\r\n      <style>\r\n        :root {\r\n          --bg-color: var(--vscode-editor-background, #ffffff);\r\n          --text-color: var(--vscode-editor-foreground, #333333);\r\n          --link-color: var(--vscode-textLink-foreground, #3794ff);\r\n          --heading-color: var(--vscode-editor-foreground, #333333);\r\n          --border-color: var(--vscode-panel-border, #e7e7e7);\r\n          --accent-color: var(--vscode-button-background, #0e639c);\r\n          --accent-hover-color: var(--vscode-button-hoverBackground, #1177bb);\r\n          --card-bg-color: var(--vscode-editor-inactiveSelectionBackground, #f5f5f5);\r\n          --code-bg-color: var(--vscode-textBlockQuote-background, #f1f1f1);\r\n        }\r\n        \r\n        body {\r\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n          line-height: 1.6;\r\n          color: var(--text-color);\r\n          background-color: var(--bg-color);\r\n          margin: 0;\r\n          padding: 20px;\r\n          max-width: 1000px;\r\n          margin: 0 auto;\r\n        }\r\n        \r\n        h1, h2, h3, h4, h5, h6 {\r\n          color: var(--heading-color);\r\n          margin-top: 24px;\r\n          margin-bottom: 16px;\r\n          font-weight: 600;\r\n          line-height: 1.25;\r\n        }\r\n        \r\n        h1 {\r\n          font-size: 2em;\r\n          padding-bottom: 0.3em;\r\n          border-bottom: 1px solid var(--border-color);\r\n        }\r\n        \r\n        h2 {\r\n          font-size: 1.5em;\r\n          padding-bottom: 0.3em;\r\n        }\r\n        \r\n        a {\r\n          color: var(--link-color);\r\n          text-decoration: none;\r\n        }\r\n        \r\n        a:hover {\r\n          text-decoration: underline;\r\n        }\r\n        \r\n        p {\r\n          margin-top: 0;\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        code {\r\n          font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;\r\n          padding: 0.2em 0.4em;\r\n          margin: 0;\r\n          font-size: 85%;\r\n          background-color: var(--code-bg-color);\r\n          border-radius: 3px;\r\n        }\r\n        \r\n        pre {\r\n          background-color: var(--code-bg-color);\r\n          border-radius: 3px;\r\n          padding: 16px;\r\n          overflow: auto;\r\n        }\r\n        \r\n        pre code {\r\n          background-color: transparent;\r\n          padding: 0;\r\n          margin: 0;\r\n          font-size: 100%;\r\n          word-break: normal;\r\n          white-space: pre;\r\n        }\r\n        \r\n        ul, ol {\r\n          margin-top: 0;\r\n          margin-bottom: 16px;\r\n          padding-left: 2em;\r\n        }\r\n        \r\n        li {\r\n          margin-top: 0.25em;\r\n        }\r\n        \r\n        .help-category {\r\n          margin-bottom: 30px;\r\n        }\r\n        \r\n        .command-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n          gap: 12px;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        .command-card {\r\n          background-color: var(--card-bg-color);\r\n          border-radius: 8px;\r\n          padding: 16px;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n          border: 1px solid var(--border-color);\r\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n          position: relative;\r\n          overflow: hidden;\r\n        }\r\n        \r\n        .command-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n          border-color: var(--accent-color);\r\n        }\r\n        \r\n        .command-card::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 4px;\r\n          height: 100%;\r\n          background-color: var(--accent-color);\r\n          opacity: 0;\r\n          transition: opacity 0.2s ease;\r\n        }\r\n        \r\n        .command-card:hover::before {\r\n          opacity: 1;\r\n        }\r\n        \r\n        .clickable-command {\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n        \r\n        .clickable-command:hover {\r\n          color: var(--accent-color);\r\n          text-decoration: underline;\r\n        }\r\n        \r\n        .command-name {\r\n          font-weight: bold;\r\n          margin-bottom: 10px;\r\n          color: var(--accent-color);\r\n          font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;\r\n          font-size: 1.1em;\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n        \r\n        .command-description {\r\n          margin-bottom: 10px;\r\n          color: var(--text-color);\r\n          line-height: 1.4;\r\n        }\r\n        \r\n        .command-examples {\r\n          font-size: 0.85em;\r\n          color: var(--vscode-descriptionForeground, #747474);\r\n          font-style: italic;\r\n          padding: 4px 0;\r\n        }\r\n        \r\n        .command-aliases {\r\n          font-size: 0.85em;\r\n          color: var(--vscode-descriptionForeground, #747474);\r\n          background-color: var(--code-bg-color);\r\n          border-radius: 3px;\r\n          padding: 2px 6px;\r\n          display: inline-block;\r\n          margin-top: 4px;\r\n        }\r\n        \r\n        .command-icon {\r\n          font-size: 1em;\r\n          margin-right: 6px;\r\n          position: relative;\r\n          top: 1px;\r\n        }\r\n        \r\n        .command-text {\r\n          font-weight: bold;\r\n        }\r\n        \r\n        .command-usage {\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        .command-aliases, .related-commands {\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        .related-command {\r\n          margin-right: 8px;\r\n        }\r\n        \r\n        .back-link {\r\n          margin-top: 24px;\r\n          padding-top: 16px;\r\n          border-top: 1px solid var(--border-color);\r\n        }\r\n        \r\n        .faq-list {\r\n          margin-top: 24px;\r\n        }\r\n        \r\n        .faq-item {\r\n          margin-bottom: 24px;\r\n          border-bottom: 1px solid var(--border-color);\r\n          padding-bottom: 16px;\r\n        }\r\n        \r\n        .faq-question {\r\n          font-weight: 600;\r\n          font-size: 1.2em;\r\n          margin-bottom: 8px;\r\n          color: var(--accent-color);\r\n        }\r\n        \r\n        .guides-list {\r\n          margin-top: 24px;\r\n        }\r\n        \r\n        .guide-item {\r\n          margin-bottom: 24px;\r\n          border-bottom: 1px solid var(--border-color);\r\n          padding-bottom: 16px;\r\n        }\r\n        \r\n        .guide-title {\r\n          margin-bottom: 8px;\r\n        }\r\n        \r\n        .guide-description {\r\n          margin-bottom: 8px;\r\n        }\r\n        \r\n        .markdown-body {\r\n          line-height: 1.6;\r\n        }\r\n        \r\n        .markdown-body img {\r\n          max-width: 100%;\r\n          box-sizing: content-box;\r\n        }\r\n        \r\n        .markdown-body blockquote {\r\n          padding: 0 1em;\r\n          color: var(--vscode-editor-foreground, #6a737d);\r\n          border-left: 0.25em solid var(--vscode-panel-border, #dfe2e5);\r\n          margin: 0 0 16px 0;\r\n        }\r\n        \r\n        .markdown-body table {\r\n          display: block;\r\n          width: 100%;\r\n          overflow: auto;\r\n          border-collapse: collapse;\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        .markdown-body table th,\r\n        .markdown-body table td {\r\n          padding: 6px 13px;\r\n          border: 1px solid var(--vscode-panel-border, #dfe2e5);\r\n        }\r\n        \r\n        .markdown-body table tr {\r\n          background-color: var(--bg-color);\r\n          border-top: 1px solid var(--vscode-panel-border, #c6cbd1);\r\n        }\r\n        \r\n        .markdown-body table tr:nth-child(2n) {\r\n          background-color: var(--vscode-editor-inactiveSelectionBackground, #f6f8fa);\r\n        }\r\n        \r\n        /* 퀵 액션 스타일 */\r\n        .quick-actions {\r\n          margin: 20px 0 30px;\r\n          background-color: var(--vscode-editor-inactiveSelectionBackground, #f6f8fa);\r\n          border-radius: 8px;\r\n          padding: 16px;\r\n          border: 1px solid var(--border-color);\r\n        }\r\n        \r\n        .quick-actions h2 {\r\n          margin-top: 0;\r\n          font-size: 1.3em;\r\n          color: var(--accent-color);\r\n          padding-left: 4px;\r\n        }\r\n        \r\n        .quick-buttons {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 10px;\r\n        }\r\n        \r\n        .quick-button {\r\n          display: flex;\r\n          align-items: center;\r\n          padding: 8px 16px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-weight: 500;\r\n          border: none;\r\n          min-width: 120px;\r\n          font-size: 0.95em;\r\n          transition: all 0.2s ease;\r\n          color: white;\r\n        }\r\n        \r\n        .quick-button:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n        }\r\n        \r\n        .quick-button .codicon {\r\n          margin-right: 8px;\r\n          font-size: 1.2em;\r\n        }\r\n        \r\n        .quick-button.git {\r\n          background-color: #F05033;\r\n        }\r\n        \r\n        .quick-button.code {\r\n          background-color: #007ACC;\r\n        }\r\n        \r\n        .quick-button.utility {\r\n          background-color: #6C757D;\r\n        }\r\n        \r\n        .quick-button.model {\r\n          background-color: #28A745;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"help-content\">\r\n        ${content}\r\n      </div>\r\n      \r\n      <script>\r\n        // VS Code API와 통신\r\n        const vscode = acquireVsCodeApi();\r\n        \r\n        // 명령어 VS Code로 전송\r\n        function sendCommandToVSCode(command) {\r\n          vscode.postMessage({\r\n            type: 'command',\r\n            command: command\r\n          });\r\n        }\r\n        \r\n        // 채팅창에 명령어 입력\r\n        function insertCommandToChatInput(command) {\r\n          vscode.postMessage({\r\n            type: 'insertCommand',\r\n            command: command\r\n          });\r\n        }\r\n        \r\n        // 명령어 카드 클릭 시 명령어 입력\r\n        document.addEventListener('click', (event) => {\r\n          const target = event.target;\r\n          \r\n          // 명령어 카드 클릭 처리\r\n          const commandCard = target.closest('.command-card');\r\n          if (commandCard) {\r\n            const cmdName = commandCard.querySelector('.command-name')?.textContent;\r\n            if (cmdName) {\r\n              insertCommandToChatInput(cmdName);\r\n            }\r\n          }\r\n          \r\n          // A 태그 이벤트 처리\r\n          if (target.tagName === 'A' && target.getAttribute('href') === '#') {\r\n            event.preventDefault();\r\n            // 이벤트 처리는 각 요소의 onclick에서 처리\r\n          }\r\n        });\r\n        \r\n        // 코드 블록 내 명령어 클릭 처리\r\n        document.querySelectorAll('code').forEach(codeElement => {\r\n          if (codeElement.textContent.startsWith('/')) {\r\n            codeElement.classList.add('clickable-command');\r\n            codeElement.addEventListener('click', () => {\r\n              insertCommandToChatInput(codeElement.textContent);\r\n            });\r\n          }\r\n        });\r\n      </script>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n\r\n/**\r\n * HTML 이스케이프\r\n * @param unsafe 이스케이프할 문자열\r\n * @returns 이스케이프된 문자열\r\n */\r\nfunction escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\")\r\n    .replace(/'/g, \"&#039;\");\r\n}\r\n\r\n/**\r\n * 카테고리별 Codicon 아이콘 이름 가져오기\r\n * @param category 카테고리 ID\r\n * @returns Codicon 아이콘 이름\r\n */\r\nfunction getCategoryIcon(category: string): string {\r\n  switch (category) {\r\n    case 'general':\r\n      return 'info';\r\n    case 'git':\r\n      return 'git-commit';\r\n    case 'code':\r\n      return 'code';\r\n    case 'utility':\r\n      return 'tools';\r\n    case 'advanced':\r\n      return 'settings-gear';\r\n    default:\r\n      return 'symbol-event';\r\n  }\r\n}\r\n\r\n/**\r\n * 도구별 미니멀 아이콘 가져오기\r\n * @param toolName 도구 이름\r\n * @returns 미니멀 아이콘\r\n */\r\nfunction getToolEmoji(toolName: string): string {\r\n  switch (toolName) {\r\n    case 'Bash':\r\n      return '▶';     // 터미널 실행\r\n    case 'Batch':\r\n      return '⧉';     // 병렬 실행\r\n    case 'Glob':\r\n      return '◎';     // 검색 조회\r\n    case 'Grep':\r\n      return '⌕';     // 내용 검색\r\n    case 'LS':\r\n      return '⊞';     // 디렉토리 목록\r\n    case 'Read':\r\n      return '◯';     // 파일 읽기\r\n    case 'Edit':\r\n      return '✎';     // 편집\r\n    case 'MultiEdit':\r\n      return '⧠';     // 다중 편집\r\n    case 'Write':\r\n      return '⊕';     // 새 파일 생성\r\n    case 'TodoRead':\r\n      return '☰';     // 할일 목록\r\n    case 'TodoWrite':\r\n      return '✓';     // 할일 완료\r\n    case 'WebFetch':\r\n      return '⇥';     // 웹 가져오기\r\n    case 'WebSearch':\r\n      return '⌕';     // 웹 검색\r\n    case 'Task':\r\n      return '◈';     // 작업 실행\r\n    default:\r\n      return '◇';     // 기본 도구\r\n  }\r\n}\r\n\r\n/**\r\n * 마크다운을 HTML로 변환 (간단 구현)\r\n */\r\nfunction markdownToHtml(markdown: string): string {\r\n  return markdown\r\n    // 헤더 변환\r\n    .replace(/^# (.+)$/gm, '<h1>$1</h1>')\r\n    .replace(/^## (.+)$/gm, '<h2>$1</h2>')\r\n    .replace(/^### (.+)$/gm, '<h3>$1</h3>')\r\n    .replace(/^#### (.+)$/gm, '<h4>$1</h4>')\r\n    .replace(/^##### (.+)$/gm, '<h5>$1</h5>')\r\n    .replace(/^###### (.+)$/gm, '<h6>$1</h6>')\r\n\r\n    // 코드 블록 변환\r\n    .replace(/```([a-z]*)\\n([\\s\\S]*?)\\n```/g, '<pre><code class=\"language-$1\">$2</code></pre>')\r\n\r\n    // 인라인 코드 변환\r\n    .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n\r\n    // 볼드 텍스트 변환\r\n    .replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>')\r\n    .replace(/__([^_]+)__/g, '<strong>$1</strong>')\r\n\r\n    // 이탤릭 텍스트 변환\r\n    .replace(/\\*([^*]+)\\*/g, '<em>$1</em>')\r\n    .replace(/_([^_]+)_/g, '<em>$1</em>')\r\n\r\n    // 목록 변환\r\n    .replace(/^- (.+)$/gm, '<li>$1</li>')\r\n    .replace(/^([0-9]+)\\. (.+)$/gm, '<li>$2</li>')\r\n    .replace(/(<li>.*<\\/li>\\n)+/g, '<ul>$&</ul>')\r\n\r\n    // 링크 변환\r\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\">$1</a>')\r\n\r\n    // 줄바꿈 변환\r\n    .replace(/\\n\\n/g, '</p><p>')\r\n    .replace(/\\n/g, '<br>')\r\n\r\n    // 단락 감싸기\r\n    .replace(/^(.+?)(?=<\\/p>|<h[1-6]|<ul>|$)/s, '<p>$1</p>');\r\n}\r\n\r\n/**\r\n * Agent 도구 목록 HTML 생성\r\n * @returns HTML 문자열\r\n */\r\nexport async function generateToolsHelpHtml(): Promise<string> {\r\n  try {\r\n    // 도구 페이지 스타일\r\n    const toolsPageStyle = `\r\n      .tools-page {\r\n        max-width: 900px;\r\n        margin: 0 auto;\r\n        padding: 10px 0;\r\n      }\r\n      \r\n      .tools-page h1 {\r\n        text-align: center;\r\n        margin-bottom: 30px;\r\n        color: var(--vscode-editor-foreground);\r\n        font-size: 32px;\r\n      }\r\n      \r\n      .tools-page p {\r\n        text-align: center;\r\n        margin-bottom: 40px;\r\n        line-height: 1.6;\r\n        color: var(--text-color);\r\n        opacity: 0.8;\r\n      }\r\n      \r\n      .tools-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n        gap: 24px;\r\n        margin-bottom: 40px;\r\n      }\r\n      \r\n      .tool-card {\r\n        background-color: var(--bg-color);\r\n        border-radius: var(--modern-radius);\r\n        padding: 24px;\r\n        box-shadow: var(--modern-card-shadow);\r\n        transition: var(--modern-transition);\r\n        border: 1px solid rgba(0, 0, 0, 0.05);\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      .tool-card::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 4px;\r\n        background: linear-gradient(90deg, var(--modern-accent), #7C4DFF);\r\n        opacity: 0;\r\n        transition: opacity 0.3s ease;\r\n      }\r\n      \r\n      .tool-card:hover {\r\n        transform: translateY(-5px);\r\n        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);\r\n      }\r\n      \r\n      .tool-card:hover::before {\r\n        opacity: 1;\r\n      }\r\n      \r\n      .tool-header {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 16px;\r\n      }\r\n      \r\n      .tool-icon {\r\n        margin-right: 12px;\r\n        font-size: 24px;\r\n        color: var(--modern-accent);\r\n        background-color: var(--modern-accent-light);\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        transition: var(--modern-transition);\r\n      }\r\n      \r\n      .tool-card:hover .tool-icon {\r\n        transform: scale(1.1);\r\n        background-color: var(--modern-accent);\r\n        color: white;\r\n      }\r\n      \r\n      .tool-icon-svg {\r\n        width: 24px;\r\n        height: 24px;\r\n        filter: var(--vscode-editor-foreground-filter, none);\r\n      }\r\n      \r\n      .tool-name {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: var(--heading-color);\r\n      }\r\n      \r\n      .tool-description {\r\n        font-size: 14px;\r\n        color: var(--text-color);\r\n        opacity: 0.8;\r\n        line-height: 1.6;\r\n        margin-bottom: 16px;\r\n      }\r\n      \r\n      .tool-examples {\r\n        background-color: var(--card-bg-color);\r\n        border-radius: 8px;\r\n        padding: 10px;\r\n      }\r\n      \r\n      .tool-examples-title {\r\n        font-size: 13px;\r\n        font-weight: 600;\r\n        color: var(--heading-color);\r\n        margin-bottom: 8px;\r\n      }\r\n      \r\n      .tool-examples-list {\r\n        font-size: 12px;\r\n        color: var(--text-color);\r\n        opacity: 0.8;\r\n        line-height: 1.5;\r\n      }\r\n      \r\n      .tool-examples-list li {\r\n        margin-bottom: 4px;\r\n      }\r\n      \r\n      /* 다크 모드 조정 */\r\n      .vscode-dark .tool-card {\r\n        background-color: var(--bg-color);\r\n        border-color: rgba(255, 255, 255, 0.1);\r\n      }\r\n      \r\n      .vscode-dark .tool-examples {\r\n        background-color: rgba(30, 30, 30, 0.6);\r\n      }\r\n      \r\n      /* 반응형 */\r\n      @media (max-width: 768px) {\r\n        .tools-grid {\r\n          grid-template-columns: 1fr;\r\n        }\r\n      }\r\n    `;\r\n    \r\n    // 도구 데이터 목록\r\n    const tools = [\r\n      {\r\n        name: 'Bash',\r\n        description: '쉘 명령을 실행하여 파일 시스템을 조작하고 시스템 작업을 수행합니다.',\r\n        icon: 'terminal',\r\n        examples: ['디렉터리 내용 나열', '파일 이동 및 복사', '시스템 정보 조회']\r\n      },\r\n      {\r\n        name: 'Batch',\r\n        description: '여러 도구 호출을 병렬로 실행하여 작업 속도를 향상시킵니다.',\r\n        icon: 'layers',\r\n        examples: ['여러 파일 동시 읽기', '복수 Bash 명령 실행', '병렬 검색 수행']\r\n      },\r\n      {\r\n        name: 'Glob',\r\n        description: '패턴 매칭을 사용하여 파일 시스템에서 파일을 검색합니다.',\r\n        icon: 'filter',\r\n        examples: ['.js 파일 찾기', '특정 디렉터리 내 파일 검색', '제외 패턴 사용']\r\n      },\r\n      {\r\n        name: 'Grep',\r\n        description: '파일 내용에서 정규식 패턴을 검색합니다.',\r\n        icon: 'search',\r\n        examples: ['함수 정의 찾기', '오류 메시지 검색', '코드 패턴 식별']\r\n      },\r\n      {\r\n        name: 'LS',\r\n        description: '디렉터리 내용을 나열하여 파일과 폴더를 표시합니다.',\r\n        icon: 'folder-opened',\r\n        examples: ['디렉터리 구조 확인', '숨겨진 파일 표시', '파일 메타데이터 확인']\r\n      },\r\n      {\r\n        name: 'Read',\r\n        description: '파일 내용을 읽어 텍스트로 표시합니다.',\r\n        icon: 'preview',\r\n        examples: ['소스 코드 읽기', '구성 파일 검사', '로그 파일 분석']\r\n      },\r\n      {\r\n        name: 'Edit',\r\n        description: '파일 내용을 수정하고 변경 사항을 저장합니다.',\r\n        icon: 'edit',\r\n        examples: ['코드 버그 수정', '구성 설정 업데이트', '문서 수정']\r\n      },\r\n      {\r\n        name: 'MultiEdit',\r\n        description: '여러 편집 작업을 단일 파일에 원자적으로 적용합니다.',\r\n        icon: 'multiple-edit',\r\n        examples: ['여러 코드 섹션 수정', '클래스/함수 이름 변경', '여러 버그 한 번에 수정']\r\n      },\r\n      {\r\n        name: 'Write',\r\n        description: '새 파일을 생성하거나 기존 파일을 덮어씁니다.',\r\n        icon: 'new-file',\r\n        examples: ['새 소스 파일 생성', '구성 파일 작성', '로그 파일 생성']\r\n      },\r\n      {\r\n        name: 'WebFetch',\r\n        description: '웹 URL에서 콘텐츠를 가져와 분석합니다.',\r\n        icon: 'globe',\r\n        examples: ['API 문서 읽기', '웹 페이지 콘텐츠 분석', '외부 데이터 가져오기']\r\n      },\r\n      {\r\n        name: 'WebSearch',\r\n        description: '인터넷에서 최신 정보를 검색합니다.',\r\n        icon: 'web-search',\r\n        examples: ['기술 문서 찾기', '오류 솔루션 검색', '라이브러리 사용법 검색']\r\n      },\r\n      {\r\n        name: 'TodoRead',\r\n        description: '세션의 현재 할 일 목록을 읽습니다.',\r\n        icon: 'list-selection',\r\n        examples: ['작업 진행 상황 확인', '남은 작업 파악', '작업 우선순위 확인']\r\n      },\r\n      {\r\n        name: 'TodoWrite',\r\n        description: '할 일 목록을 업데이트하고 작업 상태를 관리합니다.',\r\n        icon: 'checklist',\r\n        examples: ['새 작업 추가', '작업 상태 업데이트', '완료된 작업 표시']\r\n      },\r\n      {\r\n        name: 'Task',\r\n        description: '하위 에이전트를 실행하여 독립적인 작업을 수행합니다.',\r\n        icon: 'agent',\r\n        examples: ['코드베이스 검색', '복잡한의 작업 위임', '배경 분석 수행']\r\n      }\r\n    ];\r\n    \r\n    // HTML 생성\r\n    let content = `\r\n      <div class=\"tools-page\">\r\n        <h1>APE 지원 도구</h1>\r\n        <p>APE에서 사용할 수 있는 다양한 Agent 도구 목록입니다. 이러한 도구를 활용하여 코드 작성, 검색, 분석 등 다양한 작업을 수행할 수 있습니다.</p>\r\n        \r\n        <div class=\"tools-grid\">\r\n    `;\r\n    \r\n    // 각 도구별 카드 생성\r\n    for (const tool of tools) {\r\n      // 미니멀 아이콘 사용\r\n      const iconEmoji = getToolEmoji(tool.name);\r\n      const iconHtml = `<div class=\"tool-icon minimal-icon\">${iconEmoji}</div>`;\r\n      \r\n      content += `\r\n        <div class=\"tool-card\">\r\n          <div class=\"tool-header\">\r\n            ${iconHtml}\r\n            <div class=\"tool-name\">${tool.name}</div>\r\n          </div>\r\n          <div class=\"tool-description\">${tool.description}</div>\r\n          \r\n          <div class=\"tool-examples\">\r\n            <div class=\"tool-examples-title\">주요 사용 사례</div>\r\n            <ul class=\"tool-examples-list\">\r\n              ${tool.examples.map(ex => `<li>${ex}</li>`).join('')}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    content += `\r\n        </div>\r\n        \r\n        <div class=\"back-link\">\r\n          <a href=\"#\" onclick=\"sendCommandToVSCode('help')\">← 도움말로 돌아가기</a>\r\n        </div>\r\n      </div>\r\n    `;\r\n    \r\n    // 전체 HTML 생성\r\n    return getHelpPageHtml(toolsPageStyle + content);\r\n  } catch (error) {\r\n    console.error('Agent 도구 HTML 생성 오류:', error);\r\n    return getHelpPageHtml(`\r\n      <h1>도구 목록 로드 오류</h1>\r\n      <p>도구 목록을 로드하는 중 오류가 발생했습니다: ${error}</p>\r\n      <div class=\"back-link\">\r\n        <a href=\"#\" onclick=\"sendCommandToVSCode('help')\">← 도움말로 돌아가기</a>\r\n      </div>\r\n    `);\r\n  }\r\n}","/**\r\n * 슬래시 커맨드 매니저\r\n * \r\n * 채팅 인터페이스에서 슬래시(/)로 시작하는 명령어를 처리하는 시스템\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { SlashCommand, CommandSuggestion, BilingualCommand } from './slashCommand';\r\nimport { createDefaultCommands } from './defaultCommands';\r\nimport { \r\n  generateHelpHtml, \r\n  generateCommandDetailHtml, \r\n  generateFaqHtml, \r\n  generateGuideHtml, \r\n  generateGuidesListHtml,\r\n  generateSmartHelpHtml,\r\n  generateToolsHelpHtml,\r\n  setExtensionContext\r\n} from './helpRenderer';\r\nimport { LLMService } from '../llm/llmService';\r\n\r\n/**\r\n * 슬래시 커맨드 매니저 클래스\r\n */\r\nexport class SlashCommandManager {\r\n  // 등록된 명령어 목록\r\n  private readonly commands: Map<string, SlashCommand> = new Map();\r\n\r\n  // 명령어 별칭 맵\r\n  private readonly aliasMap: Map<string, string> = new Map();\r\n\r\n  // 한국어 명령어 맵 (한국어 명령어 -> 영어 명령어 이름)\r\n  private readonly koreanCommandMap: Map<string, string> = new Map();\r\n\r\n  // 의도 기반 매핑 (통합된 intentMap)\r\n  private readonly intentMap: Record<string, string> = {};\r\n\r\n  // 이벤트 이미터\r\n  private readonly _onDidSuggestCommands = new vscode.EventEmitter<CommandSuggestion[]>();\r\n\r\n  /**\r\n   * 명령어 제안 이벤트\r\n   */\r\n  public readonly onDidSuggestCommands = this._onDidSuggestCommands.event;\r\n\r\n  /**\r\n   * 생성자\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly llmService?: LLMService,\r\n    private readonly services?: any\r\n  ) {\r\n    // 확장 컨텍스트 설정 (도움말 렌더러에 전달)\r\n    setExtensionContext();\r\n    \r\n    // 기본 명령어 등록\r\n    this.registerDefaultCommands();\r\n\r\n    // 명령어 등록\r\n    this.registerVSCodeCommands();\r\n  }\r\n\r\n  /**\r\n   * 기본 명령어 등록\r\n   */\r\n  private registerDefaultCommands(): void {\r\n    createDefaultCommands(this.services).forEach(command => {\r\n      this.registerCommand(command);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * VS Code 명령어 등록\r\n   */\r\n  private registerVSCodeCommands(): void {\r\n    // 도움말 명령어 등록\r\n    const showHelpCommand = vscode.commands.registerCommand('ape.showCommandHelp', (category?: string) => {\r\n      this.showCommandHelp(category);\r\n    });\r\n\r\n    // 'executeSlashCommand'는 CommandManager에서 이미 등록되므로 여기서는 제거\r\n    // 중복 등록으로 인한 충돌 방지\r\n\r\n    // Git 상태 표시 명령어\r\n    const showGitStatus = vscode.commands.registerCommand('ape.git.showStatus', () => {\r\n      this.showGitStatus();\r\n    });\r\n\r\n    // 명령어 등록 해제\r\n    this.context.subscriptions.push(\r\n      showHelpCommand,\r\n      showGitStatus\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 명령어 등록\r\n   */\r\n  public registerCommand(command: SlashCommand): void {\r\n    // 기본 명령어 등록\r\n    this.commands.set(command.name, command);\r\n\r\n    // 별칭 등록\r\n    if (command.aliases) {\r\n      command.aliases.forEach(alias => {\r\n        this.aliasMap.set(alias, command.name);\r\n      });\r\n    }\r\n    \r\n    // BilingualCommand인 경우 한국어 지원 등록\r\n    if (this.isBilingualCommand(command)) {\r\n      this.registerBilingualCommand(command as BilingualCommand);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 이중 언어 명령어 등록\r\n   * BilingualCommand 인터페이스로 정의된 명령어에 대한 한국어 지원을 등록합니다.\r\n   */\r\n  private registerBilingualCommand(command: BilingualCommand): void {\r\n    // 한국어 기본 명령어 등록 (있는 경우)\r\n    if (command.koreanName) {\r\n      this.koreanCommandMap.set(command.koreanName, command.name);\r\n      \r\n      // 의도 맵에도 추가\r\n      this.intentMap[command.koreanName] = command.name;\r\n    }\r\n    \r\n    // 한국어 별칭 등록\r\n    if (command.koreanAliases) {\r\n      command.koreanAliases.forEach(alias => {\r\n        this.koreanCommandMap.set(alias, command.name);\r\n        \r\n        // 의도 맵에도 추가\r\n        this.intentMap[alias] = command.name;\r\n      });\r\n    }\r\n    \r\n    // 의도 매핑 등록 (있는 경우)\r\n    if (command.intentMap) {\r\n      // 명령어가 제공하는 의도 맵 병합\r\n      Object.entries(command.intentMap).forEach(([intent, cmd]) => {\r\n        this.intentMap[intent] = cmd;\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 명령어가 BilingualCommand 인터페이스를 구현하는지 확인\r\n   */\r\n  private isBilingualCommand(command: SlashCommand): boolean {\r\n    return (\r\n      'koreanName' in command || \r\n      'koreanAliases' in command || \r\n      'koreanDescription' in command ||\r\n      'koreanExamples' in command ||\r\n      'intentMap' in command\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 모든 명령어 가져오기\r\n   */\r\n  public getAllCommands(): SlashCommand[] {\r\n    return Array.from(this.commands.values());\r\n  }\r\n\r\n  /**\r\n   * 특정 명령어 가져오기\r\n   */\r\n  public getCommand(name: string): SlashCommand | undefined {\r\n    // 직접 명령어 이름으로 찾기\r\n    if (this.commands.has(name)) {\r\n      return this.commands.get(name);\r\n    }\r\n\r\n    // 별칭으로 찾기\r\n    const originalName = this.aliasMap.get(name);\r\n    if (originalName) {\r\n      return this.commands.get(originalName);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  \r\n  /**\r\n   * 유사 명령어 찾기\r\n   * \r\n   * 레벤슈타인 거리 알고리즘을 사용하여 입력된 명령어와 가장 유사한 명령어를 찾습니다.\r\n   * @param name 입력된 명령어 이름\r\n   * @param maxDistance 최대 허용 거리 (기본값: 2)\r\n   * @returns 가장 유사한 명령어 목록 (거리 오름차순)\r\n   */\r\n  public findSimilarCommands(name: string, maxDistance: number = 2): Array<{command: SlashCommand, distance: number}> {\r\n    const result: Array<{command: SlashCommand, distance: number}> = [];\r\n    \r\n    // 모든 명령어 및 별칭과 비교\r\n    for (const command of this.getAllCommands()) {\r\n      // 메인 명령어 비교\r\n      const distance = this.levenshteinDistance(name, command.name);\r\n      if (distance <= maxDistance) {\r\n        result.push({ command, distance });\r\n      }\r\n      \r\n      // 별칭 비교\r\n      if (command.aliases) {\r\n        for (const alias of command.aliases) {\r\n          const aliasDistance = this.levenshteinDistance(name, alias);\r\n          if (aliasDistance <= maxDistance && aliasDistance < distance) {\r\n            // 별칭이 더 유사하면 기존 항목 대체\r\n            const existing = result.findIndex(r => r.command === command);\r\n            if (existing >= 0) {\r\n              result[existing].distance = aliasDistance;\r\n            } else {\r\n              result.push({ command, distance: aliasDistance });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 거리 기준 정렬 (가장 유사한 것부터)\r\n    return result.sort((a, b) => a.distance - b.distance);\r\n  }\r\n  \r\n  /**\r\n   * 레벤슈타인 거리 계산\r\n   * \r\n   * 두 문자열 간의 편집 거리를 계산합니다. 값이 작을수록 문자열이 유사합니다.\r\n   * @param a 첫 번째 문자열\r\n   * @param b 두 번째 문자열\r\n   * @returns 편집 거리\r\n   */\r\n  private levenshteinDistance(a: string, b: string): number {\r\n    // 공백 제거 및 소문자 변환\r\n    a = a.toLowerCase().trim();\r\n    b = b.toLowerCase().trim();\r\n    \r\n    if (a === b) return 0;\r\n    if (a.length === 0) return b.length;\r\n    if (b.length === 0) return a.length;\r\n    \r\n    // 매트릭스 생성\r\n    const matrix: number[][] = Array(a.length + 1).fill(null).map(() => \r\n      Array(b.length + 1).fill(null)\r\n    );\r\n    \r\n    // 첫 행과 열 초기화\r\n    for (let i = 0; i <= a.length; i++) {\r\n      matrix[i][0] = i;\r\n    }\r\n    \r\n    for (let j = 0; j <= b.length; j++) {\r\n      matrix[0][j] = j;\r\n    }\r\n    \r\n    // 행렬 채우기\r\n    for (let i = 1; i <= a.length; i++) {\r\n      for (let j = 1; j <= b.length; j++) {\r\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\r\n        \r\n        matrix[i][j] = Math.min(\r\n          matrix[i - 1][j] + 1,      // 삭제\r\n          matrix[i][j - 1] + 1,      // 삽입\r\n          matrix[i - 1][j - 1] + cost // 대체\r\n        );\r\n      }\r\n    }\r\n    \r\n    return matrix[a.length][b.length];\r\n  }\r\n\r\n  /**\r\n   * 한글 의도 기반 명령어 매칭 (개선된 버전)\r\n   * \r\n   * 한글로 된 자연어 입력을 의도에 맞는 명령어로 매핑합니다.\r\n   * 자연어 이해 기능으로 사용자 의도에 맞는 명령어를 찾아냅니다.\r\n   * @param input 사용자 입력 (슬래시 포함)\r\n   * @returns 매칭된 명령어 또는 undefined\r\n   */\r\n  private matchCommandByIntent(input: string): SlashCommand | undefined {\r\n    // 의도 문구와 명령어 이름 매핑\r\n    const intentMap: Record<string, string> = {\r\n      // 도움말 관련\r\n      '뭐해야해': 'help',           // 뭐 해야 할지 모르겠음 → 도움말\r\n      '뭐부터해야해': 'help',        // 무엇부터 해야할지 → 도움말 \r\n      '도와줘': 'help',             // 도와줘 → 도움말\r\n      '명령어': 'help',             // 명령어 확인 → 도움말\r\n      '어떻게': 'help',             // 어떻게 사용하지 → 도움말\r\n      '사용법': 'help',             // 사용법 → 도움말\r\n      '기능': 'help',               // 기능 → 도움말\r\n      '메뉴': 'help',               // 메뉴 → 도움말\r\n      '도움': 'help',               // 도움 → 도움말\r\n      '안내': 'help',               // 안내 → 도움말\r\n      '사용방법': 'help',           // 사용 방법 → 도움말\r\n      '기능목록': 'help',           // 기능 목록 → 도움말\r\n      '설명서': 'help',             // 설명서 → 도움말\r\n      '가이드': 'help',             // 가이드 → 도움말\r\n      '튜토리얼': 'help',           // 튜토리얼 → 도움말\r\n      '도움말': 'help',             // 도움말 → 도움말\r\n      '어떻게사용': 'help',         // 어떻게 사용 → 도움말\r\n      '사용방식': 'help',           // 사용 방식 → 도움말\r\n      '시작하기': 'help',           // 시작하기 → 도움말\r\n      '힌트': 'help',               // 힌트 → 도움말\r\n      '도움주세요': 'help',         // 도움 주세요 → 도움말 (신규)\r\n      '사용법알려줘': 'help',       // 사용법 알려줘 → 도움말 (신규)\r\n      '어떻게쓰는거야': 'help',     // 어떻게 쓰는거야 → 도움말 (신규)\r\n      '어떻게작동해': 'help',       // 어떻게 작동해 → 도움말 (신규)\r\n      '사용설명': 'help',           // 사용 설명 → 도움말 (신규)\r\n      \r\n      // 메모리 관련\r\n      '기억해': 'memory',           // 기억해 → 메모리 저장\r\n      '저장해': 'memory',           // 저장해 → 메모리 저장\r\n      '메모': 'memory',             // 메모 → 메모리 저장\r\n      '노트': 'memory',             // 노트 → 메모리 저장\r\n      '기록': 'memory',             // 기록 → 메모리 저장\r\n      '메모리': 'memory',           // 메모리 → 메모리 저장\r\n      '내용저장': 'memory',         // 내용 저장 → 메모리 저장\r\n      '기록저장': 'memory',         // 기록 저장 → 메모리 저장\r\n      '적어둬': 'memory',           // 적어둬 → 메모리 저장\r\n      '메모장': 'memory',           // 메모장 → 메모리 저장\r\n      '저장소': 'memory',           // 저장소 → 메모리 저장\r\n      '북마크': 'memory',           // 북마크 → 메모리 저장\r\n      '메모해줘': 'memory',         // 메모해줘 → 메모리 저장\r\n      '기억': 'memory',             // 기억 → 메모리 저장\r\n      '저장': 'memory',             // 저장 → 메모리 저장\r\n      '메모저장': 'memory',         // 메모 저장 → 메모리 저장\r\n      \r\n      // VAULT 관련 (볼트 시스템)\r\n      '볼트': 'vault',                  // 볼트 → vault\r\n      '금고': 'vault',                  // 금고 → vault\r\n      '컨텍스트': 'vault',              // 컨텍스트 → vault\r\n      '문맥': 'vault',                  // 문맥 → vault\r\n      '자료저장소': 'vault',            // 자료저장소 → vault\r\n      '자료보관': 'vault',              // 자료보관 → vault\r\n      '볼트저장': 'vault save',         // 볼트저장 → vault save\r\n      '볼트목록': 'vault list',         // 볼트목록 → vault list\r\n      '볼트조회': 'vault list',         // 볼트조회 → vault list\r\n      '볼트내용': 'vault show',         // 볼트내용 → vault show\r\n      '컨텍스트저장': 'vault save',     // 컨텍스트저장 → vault save\r\n      '볼트검색': 'vault search',       // 볼트검색 → vault search\r\n      '볼트찾기': 'vault search',       // 볼트찾기 → vault search\r\n      '컨텍스트찾기': 'vault search',   // 컨텍스트찾기 → vault search\r\n      '볼트생성': 'vault create',       // 볼트생성 → vault create\r\n      '볼트만들기': 'vault create',     // 볼트만들기 → vault create\r\n      '컨텍스트생성': 'vault create',   // 컨텍스트생성 → vault create\r\n      '볼트삭제': 'vault delete',       // 볼트삭제 → vault delete\r\n      '볼트지우기': 'vault delete',     // 볼트지우기 → vault delete\r\n      '컨텍스트삭제': 'vault delete',   // 컨텍스트삭제 → vault delete\r\n      '볼트사용': 'vault use',          // 볼트사용 → vault use\r\n      '볼트가져오기': 'vault use',      // 볼트가져오기 → vault use\r\n      '컨텍스트사용': 'vault use',      // 컨텍스트사용 → vault use\r\n      \r\n      // Git 관련\r\n      '깃상태': 'git status',       // 깃 상태 → git status\r\n      '깃': 'git status',           // 깃 → git status\r\n      '깃커밋': 'git commit',       // 깃 커밋 → git commit\r\n      '커밋': 'git commit',         // 커밋 → git commit\r\n      '푸시': 'git push',           // 푸시 → git push\r\n      '풀': 'git pull',             // 풀 → git pull\r\n      '충돌': 'git solve',          // 충돌 → git solve\r\n      '자동커밋': 'git auto',        // 자동커밋 → git auto\r\n      '변경사항': 'git status',     // 변경사항 → git status\r\n      '깃상황': 'git status',       // 깃 상황 → git status\r\n      '깃저장': 'git commit',       // 깃 저장 → git commit\r\n      '깃푸시': 'git push',         // 깃 푸시 → git push\r\n      '깃풀': 'git pull',           // 깃 풀 → git pull\r\n      '깃충돌': 'git solve',        // 깃 충돌 → git solve\r\n      '깃원격': 'git push',         // 깃 원격 → git push\r\n      '깃합치기': 'git merge',      // 깃 합치기 → git merge\r\n      '깃브랜치': 'git branch',     // 깃 브랜치 → git branch\r\n      '깃전환': 'git checkout',     // 깃 전환 → git checkout\r\n      '깃이력': 'git log',          // 깃 이력 → git log\r\n      '깃로그': 'git log',          // 깃 로그 → git log\r\n      '깃버전': 'git log',          // 깃 버전 → git log\r\n      '깃스테이지': 'git add',      // 깃 스테이지 → git add\r\n      '깃추가': 'git add',          // 깃 추가 → git add\r\n      '깃상태알려줘': 'git status', // 깃 상태 알려줘 → git status (신규)\r\n      '깃상태확인': 'git status',   // 깃 상태 확인 → git status (신규)\r\n      '변경확인': 'git status',     // 변경 확인 → git status (신규)\r\n      '코드커밋': 'git commit',     // 코드 커밋 → git commit (신규)\r\n      '변경저장': 'git commit',     // 변경 저장 → git commit (신규)\r\n      '코드저장': 'git commit',     // 코드 저장 → git commit (신규)\r\n      '브랜치확인': 'git branch',   // 브랜치 확인 → git branch (신규)\r\n      '브랜치목록': 'git branch',   // 브랜치 목록 → git branch (신규)\r\n      '머지충돌': 'git solve',      // 머지 충돌 → git solve (신규)\r\n      '원격저장소업데이트': 'git push', // 원격 저장소 업데이트 → git push (신규)\r\n      \r\n      // 파일 관련\r\n      '파일열어': 'open',           // 파일 열기 → open\r\n      '열기': 'open',               // 열기 → open\r\n      '파일': 'open',               // 파일 → open\r\n      '코드열어': 'open',           // 코드 열기 → open\r\n      '파일오픈': 'open',           // 파일 오픈 → open\r\n      '파일보기': 'open',           // 파일 보기 → open\r\n      '소스열기': 'open',           // 소스 열기 → open\r\n      '문서열기': 'open',           // 문서 열기 → open\r\n      '코드파일': 'open',           // 코드 파일 → open\r\n      '열어줘': 'open',             // 열어줘 → open\r\n      '파일내용': 'open',           // 파일 내용 → open\r\n      '파일내용보기': 'open',       // 파일 내용 보기 → open\r\n      '코드파일열기': 'open',       // 코드 파일 열기 → open\r\n      '파일경로': 'open',           // 파일 경로 → open\r\n      '경로열기': 'open',           // 경로 열기 → open\r\n      '이파일열어줘': 'open',       // 이 파일 열어줘 → open (신규)\r\n      '소스코드열기': 'open',       // 소스코드 열기 → open (신규)\r\n      '코드내용보기': 'open',       // 코드 내용 보기 → open (신규)\r\n      '파일열어볼래': 'open',       // 파일 열어볼래 → open (신규)\r\n      '파일보여줘': 'open',         // 파일 보여줘 → open (신규)\r\n      '문서보여줘': 'open',         // 문서 보여줘 → open (신규)\r\n      '소스보여줘': 'open',         // 소스 보여줘 → open (신규)\r\n      \r\n      // 실행 관련\r\n      '실행해': 'execute',          // 실행해 → execute\r\n      '실행': 'execute',            // 실행 → execute\r\n      '돌려': 'execute',            // 돌려 → execute\r\n      '코드실행': 'execute',        // 코드 실행 → execute\r\n      '구동': 'execute',            // 구동 → execute\r\n      '실행시켜': 'execute',        // 실행시켜 → execute\r\n      '돌려봐': 'execute',          // 돌려봐 → execute\r\n      '실행해봐': 'execute',        // 실행해봐 → execute\r\n      '실행해줘': 'execute',        // 실행해줘 → execute\r\n      '코드돌려': 'execute',        // 코드 돌려 → execute\r\n      '코드구동': 'execute',        // 코드 구동 → execute\r\n      '스크립트실행': 'execute',    // 스크립트 실행 → execute\r\n      '명령실행': 'execute',        // 명령 실행 → execute\r\n      '명령어실행': 'execute',      // 명령어 실행 → execute\r\n      \r\n      // 분석 관련\r\n      '분석해': 'analyze',          // 분석해 → analyze\r\n      '분석': 'analyze',            // 분석 → analyze\r\n      '코드분석': 'analyze',        // 코드분석 → analyze\r\n      '검토': 'analyze',            // 검토 → analyze\r\n      '리뷰': 'analyze',            // 리뷰 → analyze\r\n      '코드리뷰': 'analyze',        // 코드리뷰 → analyze\r\n      '코드검토': 'analyze',        // 코드 검토 → analyze\r\n      '분석하기': 'analyze',        // 분석하기 → analyze\r\n      '살펴봐': 'analyze',          // 살펴봐 → analyze\r\n      '파악해': 'analyze',          // 파악해 → analyze\r\n      '이해': 'analyze',            // 이해 → analyze\r\n      '코드이해': 'analyze',        // 코드 이해 → analyze\r\n      '코드파악': 'analyze',        // 코드 파악 → analyze\r\n      '분석해봐': 'analyze',        // 분석해봐 → analyze\r\n      '분석해줘': 'analyze',        // 분석해줘 → analyze\r\n      '검토해줘': 'analyze',        // 검토해줘 → analyze\r\n      '리뷰해줘': 'analyze',        // 리뷰해줘 → analyze\r\n      '코드진단': 'analyze',        // 코드 진단 → analyze\r\n      '진단': 'analyze',            // 진단 → analyze\r\n      '코드리뷰해줘': 'analyze',    // 코드 리뷰해줘 → analyze (신규)\r\n      '코드개선': 'analyze',        // 코드 개선 → analyze (신규)\r\n      '코드품질': 'analyze',        // 코드 품질 → analyze (신규)\r\n      '코드평가': 'analyze',        // 코드 평가 → analyze (신규)\r\n      '코드분석해줘': 'analyze',    // 코드 분석해줘 → analyze (신규)\r\n      '이코드어때': 'analyze',      // 이 코드 어때 → analyze (신규)\r\n      '코드문제': 'analyze',        // 코드 문제 → analyze (신규)\r\n      '버그분석': 'analyze',        // 버그 분석 → analyze (신규)\r\n      '코드최적화': 'analyze',      // 코드 최적화 → analyze (신규)\r\n      '성능분석': 'analyze',        // 성능 분석 → analyze (신규)\r\n      \r\n      // 설정 및 모델 관련\r\n      '모델바꿔': 'model',          // 모델 변경 → model\r\n      '모델': 'model',              // 모델 → model\r\n      '설정해': 'settings',         // 설정 변경 → settings\r\n      '설정': 'settings',           // 설정 → settings\r\n      '환경설정': 'settings',       // 환경설정 → settings\r\n      '옵션': 'settings',           // 옵션 → settings\r\n      '모델변경': 'model',          // 모델 변경 → model\r\n      '모델목록': 'model list',     // 모델 목록 → model list\r\n      '설정변경': 'settings',       // 설정 변경 → settings\r\n      '모델선택': 'model',          // 모델 선택 → model\r\n      '에이아이변경': 'model',      // AI 변경 → model\r\n      '모델교체': 'model',          // 모델 교체 → model\r\n      '모델전환': 'model',          // 모델 전환 → model\r\n      '설정보기': 'settings',       // 설정 보기 → settings\r\n      '옵션변경': 'settings',       // 옵션 변경 → settings\r\n      '옵션보기': 'settings',       // 옵션 보기 → settings\r\n      '설정메뉴': 'settings',       // 설정 메뉴 → settings\r\n      '환경': 'settings',           // 환경 → settings\r\n      '모델종류': 'model list',     // 모델 종류 → model list\r\n      '모델타입': 'model list',     // 모델 타입 → model list\r\n      '모델확인': 'model',          // 모델 확인 → model\r\n      \r\n      // 검색 관련\r\n      '검색해': 'search',           // 검색해 → search\r\n      '검색': 'search',             // 검색 → search\r\n      '찾아': 'search',             // 찾아 → search\r\n      '찾기': 'search',             // 찾기 → search\r\n      '찾아줘': 'search',           // 찾아줘 → search\r\n      '코드검색': 'search',         // 코드 검색 → search\r\n      '검색하기': 'search',         // 검색하기 → search\r\n      '내용찾기': 'search',         // 내용 찾기 → search\r\n      '검색해줘': 'search',         // 검색해줘 → search\r\n      '코드찾기': 'search',         // 코드 찾기 → search\r\n      '파일검색': 'search',         // 파일 검색 → search\r\n      '파일찾기': 'search',         // 파일 찾기 → search\r\n      '키워드검색': 'search',       // 키워드 검색 → search\r\n      '텍스트검색': 'search',       // 텍스트 검색 → search\r\n      '문자검색': 'search',         // 문자 검색 → search\r\n      '검색어': 'search',           // 검색어 → search\r\n      '문자열검색': 'search',       // 문자열 검색 → search\r\n      '찾아보기': 'search',         // 찾아보기 → search\r\n      \r\n      // 상태 및 기타\r\n      '지금뭐해': 'status',         // 지금 뭐해 → status\r\n      '상태': 'status',             // 상태 → status\r\n      '초기화': 'clear',            // 초기화 → clear\r\n      '지워': 'clear',              // 지워 → clear\r\n      '새로고침': 'clear',          // 새로고침 → clear\r\n      '시스템상태': 'status',       // 시스템 상태 → status\r\n      '현재상태': 'status',         // 현재 상태 → status\r\n      '뭐하고있어': 'status',       // 뭐하고 있어 → status\r\n      '채팅지우기': 'clear',        // 채팅 지우기 → clear\r\n      '내용지우기': 'clear',        // 내용 지우기 → clear\r\n      '다시시작': 'clear',          // 다시 시작 → clear\r\n      '상태확인': 'status',         // 상태 확인 → status\r\n      '시스템확인': 'status',       // 시스템 확인 → status\r\n      '상태보기': 'status',         // 상태 보기 → status\r\n      '작업현황': 'status',         // 작업 현황 → status\r\n      '진행현황': 'status',         // 진행 현황 → status\r\n      '지금상태': 'status',         // 지금 상태 → status\r\n      '비우기': 'clear',            // 비우기 → clear\r\n      '삭제': 'clear',              // 삭제 → clear\r\n      '내용삭제': 'clear',          // 내용 삭제 → clear\r\n      '전체삭제': 'clear',          // 전체 삭제 → clear\r\n      '재시작': 'clear',            // 재시작 → clear\r\n      '처음부터': 'clear',          // 처음부터 → clear\r\n      \r\n      // JIRA 관련\r\n      '지라': 'jira',               // 지라 → jira\r\n      '지라이슈': 'jira issue',     // 지라 이슈 → jira issue\r\n      '이슈': 'jira issue',         // 이슈 → jira issue\r\n      '지라검색': 'jira search',    // 지라 검색 → jira search\r\n      '지라목록': 'jira list',      // 지라 목록 → jira list\r\n      '지라상태': 'jira status',    // 지라 상태 → jira status\r\n      '지라업데이트': 'jira update',// 지라 업데이트 → jira update\r\n      '지라생성': 'jira create',    // 지라 생성 → jira create\r\n      '이슈생성': 'jira create',    // 이슈 생성 → jira create\r\n      '지라정보': 'jira info',      // 지라 정보 → jira info\r\n      \r\n      // Todo 관련\r\n      '할일': 'todo',               // 할일 → todo\r\n      '투두': 'todo',               // 투두 → todo\r\n      '태스크': 'todo',             // 태스크 → todo\r\n      '작업': 'todo',               // 작업 → todo\r\n      '할일추가': 'todo add',       // 할일 추가 → todo add\r\n      '할일목록': 'todo list',      // 할일 목록 → todo list\r\n      '투두목록': 'todo list',      // 투두 목록 → todo list\r\n      '태스크목록': 'todo list',    // 태스크 목록 → todo list\r\n      '작업목록': 'todo list',      // 작업 목록 → todo list\r\n      '할일관리': 'todo',           // 할일 관리 → todo\r\n      '투두관리': 'todo',           // 투두 관리 → todo\r\n      '태스크관리': 'todo',         // 태스크 관리 → todo\r\n      '작업관리': 'todo',           // 작업 관리 → todo\r\n      '할일추가하기': 'todo add',   // 할일 추가하기 → todo add (신규)\r\n      '할일등록': 'todo add',       // 할일 등록 → todo add (신규)\r\n      '태스크등록': 'todo add',     // 태스크 등록 → todo add (신규)\r\n      '작업등록': 'todo add',       // 작업 등록 → todo add (신규)\r\n      '할일삭제': 'todo delete',    // 할일 삭제 → todo delete (신규)\r\n      '태스크삭제': 'todo delete',  // 태스크 삭제 → todo delete (신규)\r\n      '작업삭제': 'todo delete',    // 작업 삭제 → todo delete (신규)\r\n      '작업상태': 'todo status',    // 작업 상태 → todo status (신규)\r\n      '할일상태': 'todo status',    // 할일 상태 → todo status (신규)\r\n      '태스크상태': 'todo status',  // 태스크 상태 → todo status (신규)\r\n      '할일완료': 'todo status',    // 할일 완료 → todo status (신규)\r\n      '작업완료': 'todo status',    // 작업 완료 → todo status (신규)\r\n      '태스크완료': 'todo status',  // 태스크 완료 → todo status (신규)\r\n      '작업우선순위': 'todo priority', // 작업 우선순위 → todo priority (신규)\r\n      '할일우선순위': 'todo priority', // 할일 우선순위 → todo priority (신규)\r\n      '태스크우선순위': 'todo priority', // 태스크 우선순위 → todo priority (신규)\r\n      \r\n      // 채팅 저장/보기\r\n      '대화저장': 'stack',          // 대화 저장 → stack\r\n      '채팅저장': 'stack',          // 채팅 저장 → stack\r\n      '대화기록': 'stack',          // 대화 기록 → stack\r\n      '채팅기록': 'stack',          // 채팅 기록 → stack\r\n      '대화내역': 'show',           // 대화 내역 → show\r\n      '채팅내역': 'show',           // 채팅 내역 → show\r\n      '대화목록': 'show',           // 대화 목록 → show\r\n      '채팅목록': 'show',           // 채팅 목록 → show\r\n      '대화보기': 'show',           // 대화 보기 → show\r\n      '채팅보기': 'show',           // 채팅 보기 → show\r\n      '기록보기': 'show',           // 기록 보기 → show\r\n    };\r\n    \r\n    // 입력 정규화 (슬래시 제거 및 소문자 변환)\r\n    const normalizedInput = input.substring(1).trim().toLowerCase();\r\n    \r\n    // 1. 정확한 의도 매칭 먼저 시도\r\n    for (const [intent, commandName] of Object.entries(intentMap)) {\r\n      if (normalizedInput === intent) {\r\n        return this.getCommand(commandName.split(' ')[0]);\r\n      }\r\n    }\r\n    \r\n    // 2. 부분 매칭 시도 (입력에 특정 의도 단어가 포함된 경우)\r\n    for (const [intent, commandName] of Object.entries(intentMap)) {\r\n      if (normalizedInput.includes(intent)) {\r\n        return this.getCommand(commandName.split(' ')[0]);\r\n      }\r\n    }\r\n    \r\n    // 3. 공백을 제거한 매칭 시도 (예: \"뭐 해야 해\" → \"뭐해야해\")\r\n    const normalizedWithoutSpaces = normalizedInput.replace(/\\s+/g, '');\r\n    for (const [intent, commandName] of Object.entries(intentMap)) {\r\n      if (normalizedWithoutSpaces === intent || normalizedWithoutSpaces.includes(intent)) {\r\n        return this.getCommand(commandName.split(' ')[0]);\r\n      }\r\n    }\r\n    \r\n    // 4. 유사 매칭 - 자음/모음 기반 유사도 계산 (한글만 적용)\r\n    if (/[\\uAC00-\\uD7AF]/.test(normalizedInput)) {\r\n      // 향상된 유사도 계산 함수\r\n      const calculateSimilarity = (a: string, b: string): number => {\r\n        // 완전 일치하는 경우\r\n        if (a === b) return 1.0;\r\n        if (a.length === 0 || b.length === 0) return 0.0;\r\n        \r\n        // 음절 단위로 분리\r\n        const charsA = Array.from(a);\r\n        const charsB = Array.from(b);\r\n        \r\n        // 한글 초성 매칭 가중치 추가\r\n        // 초성 추출 함수\r\n        const getInitialConsonant = (char: string): string => {\r\n          if (!/^[가-힣]$/.test(char)) return char;\r\n          \r\n          const code = char.charCodeAt(0) - 0xAC00;\r\n          const consonantIndex = Math.floor(code / 28 / 21);\r\n          const consonants = [\r\n            'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', \r\n            'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n          ];\r\n          \r\n          return consonants[consonantIndex];\r\n        };\r\n        \r\n        // 초성 추출\r\n        const initialA = charsA.map(getInitialConsonant).join('');\r\n        const initialB = charsB.map(getInitialConsonant).join('');\r\n        \r\n        // 초성 일치 점수 (가중치: 0.3)\r\n        const initialScore = initialA === initialB ? 0.3 : 0;\r\n        \r\n        // 각 문자열의 n-gram 생성 (1-gram, 2-gram)\r\n        const generateNgrams = (str: string, n: number): string[] => {\r\n          const ngrams: string[] = [];\r\n          for (let i = 0; i <= str.length - n; i++) {\r\n            ngrams.push(str.substring(i, i + n));\r\n          }\r\n          return ngrams;\r\n        };\r\n        \r\n        // 1-gram (음절) 유사도 (가중치: 0.3)\r\n        const chars1A = new Set(charsA);\r\n        const chars1B = new Set(charsB);\r\n        const charIntersection = new Set([...chars1A].filter(x => chars1B.has(x)));\r\n        const charUnion = new Set([...chars1A, ...chars1B]);\r\n        const charScore = charIntersection.size / charUnion.size * 0.3;\r\n        \r\n        // 2-gram (음절 쌍) 유사도 (가중치: 0.4)\r\n        const bigrams2A = new Set(generateNgrams(a, 2));\r\n        const bigrams2B = new Set(generateNgrams(b, 2));\r\n        const bigramIntersection = new Set([...bigrams2A].filter(x => bigrams2B.has(x)));\r\n        const bigramUnion = new Set([...bigrams2A, ...bigrams2B]);\r\n        const bigramScore = bigrams2A.size > 0 && bigrams2B.size > 0 ? \r\n          bigramIntersection.size / bigramUnion.size * 0.4 : 0;\r\n        \r\n        // 길이 유사도 - 길이가 비슷할수록 높은 점수 (가중치: 0.2)\r\n        const lengthScore = 1 - (Math.abs(a.length - b.length) / Math.max(a.length, b.length, 1)) * 0.2;\r\n        \r\n        // 접두사 가중치 - 시작 부분이 같으면 가중치 부여\r\n        const prefixBonus = a.startsWith(b.charAt(0)) || b.startsWith(a.charAt(0)) ? 0.1 : 0;\r\n        \r\n        // 전체 유사도 점수\r\n        return Math.min(1.0, initialScore + charScore + bigramScore + lengthScore + prefixBonus);\r\n      };\r\n      \r\n      const similarityThreshold = 0.45; // 유사도 임계값 (약간 낮춤)\r\n      let bestMatch: {intent: string; command: string; similarity: number} | null = null;\r\n      \r\n      for (const [intent, commandName] of Object.entries(intentMap)) {\r\n        const similarity = calculateSimilarity(normalizedInput, intent);\r\n        \r\n        if (similarity >= similarityThreshold && (!bestMatch || similarity > bestMatch.similarity)) {\r\n          bestMatch = {intent, command: commandName, similarity};\r\n        }\r\n      }\r\n      \r\n      if (bestMatch) {\r\n        console.log(`한글 유사도 매칭 (개선): \"${normalizedInput}\" → \"${bestMatch.intent}\" (${bestMatch.similarity.toFixed(2)})`);\r\n        return this.getCommand(bestMatch.command.split(' ')[0]);\r\n      }\r\n    }\r\n    \r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * 명령어 실행\r\n   */\r\n  public async executeCommand(input: string): Promise<boolean> {\r\n    // 슬래시로 시작하는지 확인\r\n    if (!input.startsWith('/') && !input.startsWith('@')) {\r\n      return false;\r\n    }\r\n\r\n    // 명령어와 인자 분리\r\n    const trimmedInput = input.trim();\r\n    const parts = trimmedInput.split(' ');\r\n    \r\n    // @ 명령어 처리 (특수 접두사)\r\n    if (trimmedInput.startsWith('@')) {\r\n      const specialCommand = parts[0].substring(1); // @ 제거\r\n      \r\n      // 지원되지 않는 @ 명령어\r\n      vscode.window.showInformationMessage(`'@${specialCommand}'는 현재 지원되지 않는 명령어입니다.`);\r\n      return false;\r\n    }\r\n    \r\n    // 일반 슬래시 명령어 처리\r\n    const commandName = parts[0].substring(1); // 슬래시 제거\r\n    const args = parts.slice(1);\r\n\r\n    // 1. 직접 명령어 매칭 시도\r\n    let command = this.getCommand(commandName);\r\n    \r\n    // 2. 한글 텍스트가 있는 경우 의도 기반 매칭 시도\r\n    if (!command && /[\\uAC00-\\uD7AF]/.test(commandName)) {\r\n      command = this.matchCommandByIntent(trimmedInput);\r\n    }\r\n    \r\n    // 3. 명령어를 찾지 못한 경우\r\n    if (!command) {\r\n      // 유사 명령어 찾기\r\n      const similarCommands = this.findSimilarCommands(commandName);\r\n      \r\n      if (similarCommands.length > 0 && similarCommands[0].distance <= 1) {\r\n        // 매우 유사한 명령어가 있는 경우 (오타로 간주)\r\n        const closestCommand = similarCommands[0].command;\r\n        const result = await vscode.window.showInformationMessage(\r\n          `명령어 '/${commandName}'를 찾을 수 없습니다. '/${closestCommand.name}'를 실행하시겠습니까?`,\r\n          '실행',\r\n          '취소'\r\n        );\r\n        \r\n        if (result === '실행') {\r\n          // 사용자가 수정된 명령어 실행에 동의함\r\n          try {\r\n            await closestCommand.execute({\r\n              extensionContext: this.context,\r\n              args,\r\n              originalInput: `/${closestCommand.name} ${args.join(' ')}`.trim()\r\n            });\r\n            return true;\r\n          } catch (error) {\r\n            console.error(`Error executing command /${closestCommand.name}:`, error);\r\n            vscode.window.showErrorMessage(`명령어 실행 오류: /${closestCommand.name}`);\r\n            return true; // 명령어는 처리됨 (오류 발생)\r\n          }\r\n        } else {\r\n          // 사용자가 취소함 - LLM 추천 또는 오류 메시지 표시\r\n          if (this.llmService) {\r\n            await this.handleUnknownCommandWithSuggestions(commandName, trimmedInput, similarCommands);\r\n            return true; // 명령어는 처리됨 (대체 처리)\r\n          } else {\r\n            this.showSimilarCommandSuggestions(commandName, similarCommands);\r\n            return false;\r\n          }\r\n        }\r\n      } else {\r\n        // 유사한 명령어가 없거나 충분히 유사하지 않은 경우\r\n        if (this.llmService) {\r\n          await this.handleUnknownCommandWithSuggestions(commandName, trimmedInput, similarCommands);\r\n          return true; // 명령어는 처리됨 (대체 처리)\r\n        } else {\r\n          if (similarCommands.length > 0) {\r\n            this.showSimilarCommandSuggestions(commandName, similarCommands);\r\n          } else {\r\n            vscode.window.showErrorMessage(`알 수 없는 명령어: /${commandName}`);\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 명령어 실행\r\n    try {\r\n      await command.execute({\r\n        extensionContext: this.context,\r\n        args,\r\n        originalInput: trimmedInput\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Error executing command /${commandName}:`, error);\r\n      vscode.window.showErrorMessage(`명령어 실행 오류: /${commandName}`);\r\n      return true; // 명령어는 처리됨 (오류 발생)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 유사 명령어 추천 메시지 표시\r\n   */\r\n  private showSimilarCommandSuggestions(commandName: string, similarCommands: Array<{command: SlashCommand, distance: number}>): void {\r\n    if (similarCommands.length === 0) {\r\n      vscode.window.showErrorMessage(`알 수 없는 명령어: /${commandName}`);\r\n      return;\r\n    }\r\n    \r\n    // 최대 3개까지만 표시\r\n    const suggestionsLimit = Math.min(3, similarCommands.length);\r\n    const suggestions = similarCommands.slice(0, suggestionsLimit);\r\n    \r\n    // 메시지 구성\r\n    const message = `명령어 '/${commandName}'를 찾을 수 없습니다. 이것을 의미했나요?`;\r\n    \r\n    // 버튼 생성\r\n    const buttons = suggestions.map(s => `/${s.command.name}`);\r\n    \r\n    // 메시지 표시\r\n    vscode.window.showErrorMessage(message, ...buttons)\r\n      .then(selected => {\r\n        if (selected) {\r\n          // 선택한 명령어 실행\r\n          this.executeCommand(selected);\r\n        }\r\n      });\r\n  }\r\n  \r\n  /**\r\n   * 알 수 없는 명령어 처리 - LLM을 통한 해석 및 추천\r\n   * @param commandName 알 수 없는 명령어 이름\r\n   * @param originalInput 원본 입력\r\n   */\r\n  private async handleUnknownCommand(commandName: string, originalInput: string): Promise<void> {\r\n    try {\r\n      // 1. 도움말 데이터 로드\r\n      const helpData = await this.loadHelpData();\r\n      \r\n      // 2. 가이드 데이터 로드\r\n      const guideData = await this.loadGuideData();\r\n      \r\n      // 3. LLM 프롬프트 생성\r\n      const prompt = this.generateUnknownCommandPrompt(commandName, originalInput, helpData, guideData);\r\n      \r\n      // 4. LLM 응답 요청\r\n      const result = await this.llmService!.getCompletion(prompt);\r\n      \r\n      if (!result.success || !result.data) {\r\n        throw new Error(result.error?.message || 'LLM 응답을 받을 수 없습니다.');\r\n      }\r\n      \r\n      // 5. LLM 응답 처리 및 UI에 표시 (WebView 패널 사용)\r\n      await this.showLlmResponsePanel('명령어 도움말', result.data);\r\n      \r\n    } catch (error) {\r\n      console.error('알 수 없는 명령어 처리 오류:', error);\r\n      vscode.window.showErrorMessage(`'/${commandName}' 명령어 해석 중 오류가 발생했습니다. 기본 도움말을 참조하세요.`);\r\n      \r\n      // 오류 발생 시 기본 도움말 표시\r\n      await vscode.commands.executeCommand('ape.showCommandHelp');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 알 수 없는 명령어 처리 - 유사 명령어 정보를 포함한 LLM 추천\r\n   * @param commandName 알 수 없는 명령어 이름\r\n   * @param originalInput 원본 입력\r\n   * @param similarCommands 유사 명령어 목록\r\n   */\r\n  private async handleUnknownCommandWithSuggestions(\r\n    commandName: string, \r\n    originalInput: string, \r\n    similarCommands: Array<{command: SlashCommand, distance: number}>\r\n  ): Promise<void> {\r\n    try {\r\n      // 1. 도움말 데이터 로드\r\n      const helpData = await this.loadHelpData();\r\n      \r\n      // 2. 가이드 데이터 로드\r\n      const guideData = await this.loadGuideData();\r\n      \r\n      // 3. LLM 프롬프트 생성 (유사 명령어 정보 포함)\r\n      const prompt = this.generateUnknownCommandPromptWithSuggestions(\r\n        commandName, \r\n        originalInput, \r\n        helpData, \r\n        guideData,\r\n        similarCommands\r\n      );\r\n      \r\n      // 4. LLM 응답 요청\r\n      const result = await this.llmService!.getCompletion(prompt);\r\n      \r\n      if (!result.success || !result.data) {\r\n        throw new Error(result.error?.message || 'LLM 응답을 받을 수 없습니다.');\r\n      }\r\n      \r\n      // 5. LLM 응답 처리 및 UI에 표시 (WebView 패널 사용)\r\n      await this.showLlmResponsePanel('명령어 도움말', result.data);\r\n      \r\n    } catch (error) {\r\n      console.error('알 수 없는 명령어 처리 오류:', error);\r\n      \r\n      // 오류 발생 시 기본 유사 명령어 추천 사용\r\n      this.showSimilarCommandSuggestions(commandName, similarCommands);\r\n      \r\n      // 필요시 기본 도움말도 표시 가능\r\n      // await vscode.commands.executeCommand('ape.showCommandHelp');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 도움말 데이터 로드\r\n   */\r\n  private async loadHelpData(): Promise<any> {\r\n    try {\r\n      const extensionPath = this.context.extensionPath;\r\n      const helpFilePath = path.join(extensionPath, 'src', 'data', 'help.json');\r\n      const helpDataStr = fs.readFileSync(helpFilePath, 'utf8');\r\n      return JSON.parse(helpDataStr);\r\n    } catch (error) {\r\n      console.error('도움말 데이터 로드 오류:', error);\r\n      return {};\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 가이드 데이터 로드\r\n   */\r\n  private async loadGuideData(): Promise<any> {\r\n    try {\r\n      const extensionPath = this.context.extensionPath;\r\n      const guideFilePath = path.join(extensionPath, 'src', 'data', 'guide.json');\r\n      const guideDataStr = fs.readFileSync(guideFilePath, 'utf8');\r\n      return JSON.parse(guideDataStr);\r\n    } catch (error) {\r\n      console.error('가이드 데이터 로드 오류:', error);\r\n      return {};\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 알 수 없는 명령어 처리를 위한 LLM 프롬프트 생성\r\n   */\r\n  private generateUnknownCommandPrompt(commandName: string, originalInput: string, helpData: any, guideData: any): string {\r\n    return `\r\n# APE 명령어 해석 및 추천 시스템\r\n\r\n당신은 APE(Agentic Pipeline Extension)의 도움말 시스템입니다. 사용자가 입력한 알 수 없는 명령어를 해석하고 관련된 유효한 명령어나 질문을 추천해야 합니다.\r\n\r\n## 사용자 입력\r\n\r\n사용자가 입력한 알 수 없는 명령어: \\`${originalInput}\\`\r\n\r\n## 도움말 데이터\r\n\r\n${JSON.stringify(helpData, null, 2)}\r\n\r\n## 가이드 데이터\r\n\r\n${JSON.stringify(guideData, null, 2)}\r\n\r\n## 응답 지침\r\n\r\n1. 사용자 입력을 분석하여 의도를 파악하세요. 특히 한글로 입력된 자연어 질문이나 명령에 주의하세요.\r\n2. 입력과 유사하거나 관련된 유효한 명령어를 추천하세요. \r\n3. 한글 입력의 경우 \"뭐해야해\", \"뭐부터해야해\" 같은 자연어 질문으로 이해하고 적절한 워크플로우를 제안하세요.\r\n4. 현재 상황에 적합한 컨텍스트 질문도 추천하세요 (예: \"Git 형상이 세팅됐나요?\", \"Jira 작업이 필요한가요?\" 등).\r\n5. 응답은 다음 형식으로 작성하세요:\r\n\r\n---\r\n### 명령어 해석\r\n\r\n[입력한 명령어에 대한 해석 및 추측 - 한글 입력의 경우 사용자 의도를 자세히 분석]\r\n\r\n### 추천 명령어\r\n\r\n- **[명령어1]**: [설명]\r\n- **[명령어2]**: [설명]\r\n- **[명령어3]**: [설명]\r\n\r\n### 추천 질문\r\n\r\n- [질문1]\r\n- [질문2]\r\n- [질문3]\r\n\r\n---\r\n\r\n응답을 시작하세요.\r\n`;\r\n  }\r\n  \r\n  /**\r\n   * 유사 명령어 정보를 포함한 알 수 없는 명령어 처리 프롬프트 생성\r\n   */\r\n  private generateUnknownCommandPromptWithSuggestions(\r\n    commandName: string, \r\n    originalInput: string, \r\n    helpData: any, \r\n    guideData: any,\r\n    similarCommands: Array<{command: SlashCommand, distance: number}>\r\n  ): string {\r\n    // 유사 명령어 정보 추출\r\n    const similarCommandsInfo = similarCommands.map(sc => ({\r\n      name: sc.command.name,\r\n      description: sc.command.description,\r\n      category: sc.command.category,\r\n      aliases: sc.command.aliases || [],\r\n      examples: sc.command.examples || [],\r\n      distance: sc.distance\r\n    }));\r\n    \r\n    return `\r\n# APE 명령어 해석 및 추천 시스템 (향상된 버전)\r\n\r\n당신은 APE(Agentic Pipeline Extension)의 도움말 시스템입니다. 사용자가 입력한 알 수 없는 명령어를 해석하고 관련된 유효한 명령어나 질문을 추천해야 합니다.\r\n\r\n## 사용자 입력\r\n\r\n사용자가 입력한 알 수 없는 명령어: \\`${originalInput}\\`\r\n\r\n## 도움말 데이터\r\n\r\n${JSON.stringify(helpData, null, 2)}\r\n\r\n## 가이드 데이터\r\n\r\n${JSON.stringify(guideData, null, 2)}\r\n\r\n## 유사 명령어 (레벤슈타인 거리 기반)\r\n\r\n${JSON.stringify(similarCommandsInfo, null, 2)}\r\n\r\n## 응답 지침\r\n\r\n1. 사용자 입력을 분석하여 의도를 파악하세요. 특히 한글로 입력된 자연어 질문이나 명령에 주의하세요.\r\n2. 제공된 유사 명령어를 참고하여 사용자가 실제로 원했을 가능성이 높은 명령어를 추천하세요.\r\n3. 사용자 입력과 유사한 명령어가 있다면 오타일 가능성을 언급하세요. (예: \"/gti status\"는 \"/git status\"의 오타로 보입니다)\r\n4. 한글 입력의 경우 \"뭐해야해\", \"뭐부터해야해\" 같은 자연어 질문으로 이해하고 적절한 워크플로우를 제안하세요.\r\n5. 특히 레벤슈타인 거리가 가장 작은 명령어를 우선적으로 추천하되, 맥락상 맞지 않는 경우는 제외하세요.\r\n6. 현재 상황에 적합한 컨텍스트 질문도 추천하세요.\r\n7. 응답은 친절하고 도움이 되는 톤으로 작성하세요.\r\n8. 응답은 다음 형식으로 작성하세요:\r\n\r\n---\r\n### 명령어 해석\r\n\r\n[입력한 명령어에 대한 해석 및 추측 - 한글 입력의 경우 사용자 의도를 자세히 분석]\r\n\r\n### 추천 명령어\r\n\r\n- **[명령어1]**: [설명] [오타 가능성 또는 추천 이유 언급]\r\n- **[명령어2]**: [설명]\r\n- **[명령어3]**: [설명]\r\n\r\n### 추천 질문\r\n\r\n- [질문1]\r\n- [질문2]\r\n- [질문3]\r\n\r\n---\r\n\r\n응답을 시작하세요.\r\n`;\r\n  }\r\n  \r\n  /**\r\n   * LLM 응답을 WebView 패널로 표시\r\n   */\r\n  private async showLlmResponsePanel(title: string, content: string): Promise<void> {\r\n    // WebView 패널 생성\r\n    const panel = vscode.window.createWebviewPanel(\r\n      'apeLlmResponse',\r\n      title,\r\n      vscode.ViewColumn.One,\r\n      {\r\n        enableScripts: true,\r\n        localResourceRoots: [vscode.Uri.joinPath(this.context.extensionUri, 'media')]\r\n      }\r\n    );\r\n    \r\n    // LLM 응답에서 명령어 추출 (한글 명령어 포함)\r\n    const commandRegex = /\\*\\*\\/([\\p{L}\\p{N}-]+)(?:\\s+[\\p{L}\\p{N}-]+)*\\*\\*/gu;\r\n    const extractedCommands: string[] = [];\r\n    \r\n    let match: RegExpExecArray | null;\r\n    while ((match = commandRegex.exec(content)) !== null) {\r\n      extractedCommands.push(`/${match[1]}`);\r\n    }\r\n    \r\n    // 질문 추출\r\n    const questionRegex = /- ([^-\\n]+)/g;\r\n    const extractedQuestions: string[] = [];\r\n    \r\n    match = null;\r\n    while ((match = questionRegex.exec(content)) !== null) {\r\n      const question = match[1].trim();\r\n      if (question && !question.startsWith('/')) {\r\n        extractedQuestions.push(question);\r\n      }\r\n    }\r\n    \r\n    // 패널에 HTML 설정\r\n    panel.webview.html = this.getLlmResponseHtml(content, extractedCommands, extractedQuestions);\r\n    \r\n    // 메시지 핸들러 설정\r\n    panel.webview.onDidReceiveMessage(async message => {\r\n      if (message.type === 'executeCommand') {\r\n        // 명령어 실행\r\n        await this.executeCommand(message.command);\r\n      } else if (message.type === 'insertToChat') {\r\n        // 채팅 입력창에 텍스트 삽입 (이벤트 발생)\r\n        vscode.commands.executeCommand('ape.insertToChatInput', message.text);\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * LLM 응답 HTML 생성\r\n   */\r\n  private getLlmResponseHtml(content: string, commands: string[], questions: string[]): string {\r\n    // 마크다운을 HTML로 변환\r\n    const markdownContent = content\r\n      // 제목 변환\r\n      .replace(/^### (.*$)/gm, '<h3>$1</h3>')\r\n      .replace(/^## (.*$)/gm, '<h2>$1</h2>')\r\n      .replace(/^# (.*$)/gm, '<h1>$1</h1>')\r\n      \r\n      // 볼드 및 코드 변환\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      \r\n      // 목록 변환\r\n      .replace(/^- (.*$)/gm, '<li>$1</li>')\r\n      .replace(/(<li>.*<\\/li>\\n)+/g, '<ul>$&</ul>');\r\n    \r\n    // 명령어 및 질문 버튼 HTML 생성\r\n    let commandsHtml = '';\r\n    if (commands.length > 0) {\r\n      commandsHtml = `\r\n        <div class=\"command-buttons\">\r\n          <h3>명령어 바로 실행</h3>\r\n          <div class=\"button-container\">\r\n            ${commands.map(cmd => `\r\n              <button class=\"command-button\" onclick=\"executeCommand('${cmd}')\">${cmd}</button>\r\n            `).join('')}\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    let questionsHtml = '';\r\n    if (questions.length > 0) {\r\n      questionsHtml = `\r\n        <div class=\"question-buttons\">\r\n          <h3>질문 추천</h3>\r\n          <div class=\"button-container\">\r\n            ${questions.map(q => `\r\n              <button class=\"question-button\" onclick=\"insertToChat('${q.replace(/'/g, \"\\\\'\")}')\">${q}</button>\r\n            `).join('')}\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    return `\r\n      <!DOCTYPE html>\r\n      <html lang=\"ko\">\r\n      <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>APE 명령어 도움말</title>\r\n        <style>\r\n          :root {\r\n            --bg-color: var(--vscode-editor-background, #1e1e1e);\r\n            --text-color: var(--vscode-editor-foreground, #d4d4d4);\r\n            --link-color: var(--vscode-textLink-foreground, #3794ff);\r\n            --button-bg: var(--vscode-button-background, #0e639c);\r\n            --button-fg: var(--vscode-button-foreground, white);\r\n            --button-hover-bg: var(--vscode-button-hoverBackground, #1177bb);\r\n            --code-bg: var(--vscode-textBlockQuote-background, #2a2d2e);\r\n          }\r\n          \r\n          body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n            line-height: 1.6;\r\n            color: var(--text-color);\r\n            background-color: var(--bg-color);\r\n            margin: 0;\r\n            padding: 20px;\r\n            max-width: 900px;\r\n            margin: 0 auto;\r\n          }\r\n          \r\n          h1, h2, h3 {\r\n            margin-top: 20px;\r\n            margin-bottom: 10px;\r\n          }\r\n          \r\n          ul {\r\n            margin-bottom: 20px;\r\n          }\r\n          \r\n          code {\r\n            background-color: var(--code-bg);\r\n            padding: 2px 4px;\r\n            border-radius: 3px;\r\n            font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, monospace;\r\n          }\r\n          \r\n          .content {\r\n            margin-bottom: 20px;\r\n            padding-bottom: 10px;\r\n            border-bottom: 1px solid #444;\r\n          }\r\n          \r\n          .button-container {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            gap: 8px;\r\n            margin-bottom: 20px;\r\n          }\r\n          \r\n          .command-button, .question-button {\r\n            background-color: var(--button-bg);\r\n            color: var(--button-fg);\r\n            border: none;\r\n            padding: 6px 12px;\r\n            border-radius: 4px;\r\n            cursor: pointer;\r\n            font-size: 14px;\r\n            transition: background-color 0.2s;\r\n          }\r\n          \r\n          .command-button:hover, .question-button:hover {\r\n            background-color: var(--button-hover-bg);\r\n          }\r\n          \r\n          .question-button {\r\n            background-color: var(--vscode-badge-background, #4d4d4d);\r\n          }\r\n          \r\n          .question-button:hover {\r\n            background-color: var(--vscode-list-hoverBackground, #2a2d2e);\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"content\">\r\n          ${markdownContent}\r\n        </div>\r\n        \r\n        ${commandsHtml}\r\n        ${questionsHtml}\r\n        \r\n        <script>\r\n          const vscode = acquireVsCodeApi();\r\n          \r\n          function executeCommand(command) {\r\n            vscode.postMessage({\r\n              type: 'executeCommand',\r\n              command: command\r\n            });\r\n          }\r\n          \r\n          function insertToChat(text) {\r\n            vscode.postMessage({\r\n              type: 'insertToChat',\r\n              text: text\r\n            });\r\n          }\r\n        </script>\r\n      </body>\r\n      </html>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * 명령어 제안 항목 가져오기\r\n   */\r\n  public getCommandSuggestions(input: string = ''): CommandSuggestion[] {\r\n    // 입력한 텍스트 처리\r\n    const trimmedInput = input.trim();\r\n    const isSlashCommand = trimmedInput.startsWith('/');\r\n\r\n    // 슬래시가 없으면 빈 배열 반환\r\n    if (!isSlashCommand && trimmedInput !== '') {\r\n      return [];\r\n    }\r\n\r\n    // 슬래시 이후 텍스트 추출\r\n    const searchText = isSlashCommand ? trimmedInput.substring(1).toLowerCase() : '';\r\n\r\n    // 명령어 필터링\r\n    return this.filterCommands(searchText);\r\n  }\r\n\r\n  /**\r\n   * 명령어 필터링\r\n   */\r\n  private filterCommands(searchText: string): CommandSuggestion[] {\r\n    const suggestions: CommandSuggestion[] = [];\r\n\r\n    for (const command of this.getAllCommands()) {\r\n      // 검색어 필터링\r\n      if (searchText && !command.name.toLowerCase().includes(searchText)) {\r\n        // 별칭 검색\r\n        const hasMatchingAlias = command.aliases?.some(alias =>\r\n          alias.toLowerCase().includes(searchText)\r\n        );\r\n\r\n        // 매칭되는 별칭이 없으면 건너뛰기\r\n        if (!hasMatchingAlias) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // 제안 항목 생성\r\n      suggestions.push({\r\n        label: `/${command.name}`,\r\n        description: command.description,\r\n        detail: command.examples ? `예시: ${command.examples.join(', ')}` : undefined,\r\n        category: command.category,\r\n        insertText: `/${command.name} `,\r\n        iconPath: this.getIconForCategory(command.category)\r\n      });\r\n    }\r\n\r\n    // 우선순위 및 이름으로 정렬\r\n    return suggestions.sort((a, b) => {\r\n      // 우선 카테고리로 정렬\r\n      const commandA = this.getCommand(a.label.substring(1));\r\n      const commandB = this.getCommand(b.label.substring(1));\r\n\r\n      // 우선순위 비교\r\n      const priorityA = commandA?.priority || 100;\r\n      const priorityB = commandB?.priority || 100;\r\n\r\n      if (priorityA !== priorityB) {\r\n        return priorityA - priorityB;\r\n      }\r\n\r\n      // 이름으로 정렬\r\n      return a.label.localeCompare(b.label);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 카테고리별 아이콘 가져오기\r\n   */\r\n  private getIconForCategory(category: string): vscode.ThemeIcon {\r\n    // 이모지 아이콘 대신 ThemeIcon 사용\r\n    switch (category) {\r\n      case 'general':\r\n        return new vscode.ThemeIcon('info');\r\n      case 'git':\r\n        return new vscode.ThemeIcon('git-commit');\r\n      case 'code':\r\n        return new vscode.ThemeIcon('code');\r\n      case 'utility':\r\n        return new vscode.ThemeIcon('tools');\r\n      case 'advanced':\r\n        return new vscode.ThemeIcon('settings-gear');\r\n      default:\r\n        return new vscode.ThemeIcon('symbol-event');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 명령어 자동완성 제공\r\n   */\r\n  public provideCompletions(input: string): string[] {\r\n    // 입력한 텍스트 처리\r\n    const trimmedInput = input.trim();\r\n    if (!trimmedInput.startsWith('/')) {\r\n      return [];\r\n    }\r\n\r\n    const parts = trimmedInput.split(' ');\r\n    const commandName = parts[0].substring(1); // 슬래시 제거\r\n    const partialArg = parts.length > 1 ? parts[parts.length - 1] : '';\r\n\r\n    // 명령어 찾기\r\n    const command = this.getCommand(commandName);\r\n    if (!command || !command.provideCompletions) {\r\n      return [];\r\n    }\r\n\r\n    // 명령어별 자동완성 호출\r\n    return command.provideCompletions(partialArg);\r\n  }\r\n\r\n  /**\r\n   * 명령어 제안 업데이트\r\n   * \r\n   * 채팅 입력 필드 값이 변경될 때 호출됩니다.\r\n   */\r\n  public updateSuggestions(input: string): void {\r\n    const suggestions = this.getCommandSuggestions(input);\r\n    this._onDidSuggestCommands.fire(suggestions);\r\n  }\r\n\r\n  /**\r\n   * 명령어 도움말 표시\r\n   * \r\n   * 새로운 JSON 기반 도움말 시스템 사용\r\n   */\r\n  private async showCommandHelp(arg?: string): Promise<void> {\r\n    // 도움말 패널 생성\r\n    const helpPanel = vscode.window.createWebviewPanel(\r\n      'apeCommandHelp',\r\n      'APE 도움말',\r\n      vscode.ViewColumn.One,\r\n      {\r\n        enableScripts: true, // 스크립트 활성화 (도움말 내비게이션 위함)\r\n        localResourceRoots: [vscode.Uri.joinPath(this.context.extensionUri, 'media')]\r\n      }\r\n    );\r\n    \r\n    // 메시지 핸들러 설정\r\n    helpPanel.webview.onDidReceiveMessage(async message => {\r\n      if (message.type === 'command') {\r\n        // 도움말 내에서 명령어 실행\r\n        if (message.command.startsWith('help ')) {\r\n          // 도움말 내부 링크 처리\r\n          const helpArg = message.command.substring(5);\r\n          await this.processHelpCommand(helpPanel, helpArg);\r\n        } else {\r\n          // 다른 명령어는 슬래시 명령어로 실행\r\n          await this.executeCommand(`/${message.command}`);\r\n        }\r\n      } else if (message.type === 'expandTreeView') {\r\n        // 트리 뷰 확장 요청\r\n        await vscode.commands.executeCommand('ape.focusTreeView');\r\n      }\r\n    });\r\n    \r\n    // 초기 도움말 내용 표시\r\n    if (!arg) {\r\n      // 카테고리 또는 명령어 미지정 시 기본 도움말 표시\r\n      helpPanel.webview.html = await generateHelpHtml();\r\n    } else if (arg.startsWith('guide ')) {\r\n      // 가이드 문서 표시\r\n      const guideId = arg.substring(6);\r\n      helpPanel.webview.html = await generateGuideHtml(guideId);\r\n    } else if (arg === 'guides' || arg === 'guide') {\r\n      // 가이드 목록 표시\r\n      helpPanel.webview.html = await generateGuidesListHtml();\r\n    } else if (arg === 'faq') {\r\n      // FAQ 표시\r\n      helpPanel.webview.html = await generateFaqHtml();\r\n    } else if (arg === 'tools') {\r\n      // Agent 도구 목록 표시\r\n      helpPanel.webview.html = await generateToolsHelpHtml();\r\n    } else if (this.getCommand(arg)) {\r\n      // 명령어 상세 정보 표시\r\n      helpPanel.webview.html = await generateCommandDetailHtml(arg);\r\n    } else if (arg.startsWith('search ')) {\r\n      // 도움말 검색 기능\r\n      const query = arg.substring(7);\r\n      \r\n      if (this.llmService) {\r\n        // LLM 서비스가 있는 경우 스마트 도움말 사용\r\n        helpPanel.webview.html = await generateSmartHelpHtml(query, this.llmService);\r\n      } else {\r\n        // LLM 서비스가 없는 경우 기본 도움말 표시와 메시지\r\n        helpPanel.webview.html = await generateHelpHtml();\r\n        vscode.window.showWarningMessage('스마트 도움말 검색을 위한 LLM 서비스를 사용할 수 없습니다.');\r\n      }\r\n    } else {\r\n      // 카테고리 지정 시 해당 카테고리 도움말 표시\r\n      helpPanel.webview.html = await generateHelpHtml(arg);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 도움말 명령어 처리\r\n   * \r\n   * 도움말 패널 내에서 명령어 실행 시 처리\r\n   */\r\n  private async processHelpCommand(helpPanel: vscode.WebviewPanel, arg: string): Promise<void> {\r\n    // 도움말 내부 링크 클릭 처리\r\n    if (!arg) {\r\n      // 인자 없는 경우 기본 도움말 표시\r\n      helpPanel.webview.html = await generateHelpHtml();\r\n    } else if (arg.startsWith('guide ')) {\r\n      // 가이드 문서 표시\r\n      const guideId = arg.substring(6);\r\n      helpPanel.webview.html = await generateGuideHtml(guideId);\r\n    } else if (arg === 'guides' || arg === 'guide') {\r\n      // 가이드 목록 표시\r\n      helpPanel.webview.html = await generateGuidesListHtml();\r\n    } else if (arg === 'faq') {\r\n      // FAQ 표시\r\n      helpPanel.webview.html = await generateFaqHtml();\r\n    } else if (arg === 'tools') {\r\n      // Agent 도구 목록 표시\r\n      helpPanel.webview.html = await generateToolsHelpHtml();\r\n    } else if (arg.startsWith('search ')) {\r\n      // 도움말 검색 기능\r\n      const query = arg.substring(7);\r\n      \r\n      if (this.llmService) {\r\n        // LLM 서비스가 있는 경우 스마트 도움말 사용\r\n        helpPanel.webview.html = await generateSmartHelpHtml(query, this.llmService);\r\n      } else {\r\n        // LLM 서비스가 없는 경우 기본 도움말 표시와 메시지\r\n        helpPanel.webview.html = await generateHelpHtml();\r\n        vscode.window.showWarningMessage('스마트 도움말 검색을 위한 LLM 서비스를 사용할 수 없습니다.');\r\n      }\r\n    } else {\r\n      // 명령어 이름으로 처리\r\n      const command = this.getCommand(arg);\r\n      if (command) {\r\n        // 명령어 상세 정보 표시\r\n        helpPanel.webview.html = await generateCommandDetailHtml(arg);\r\n      } else {\r\n        // 카테고리로 처리\r\n        helpPanel.webview.html = await generateHelpHtml(arg);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 카테고리 제목 가져오기\r\n   */\r\n  private getCategoryTitle(category: string): string {\r\n    switch (category) {\r\n      case 'general':\r\n        return '일반 명령어';\r\n      case 'git':\r\n        return 'Git 관련 명령어';\r\n      case 'code':\r\n        return '코드 관련 명령어';\r\n      case 'utility':\r\n        return '유틸리티 명령어';\r\n      case 'advanced':\r\n        return '고급 명령어';\r\n      default:\r\n        return category;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 도움말 패널 HTML 생성\r\n   */\r\n  private getHelpPanelHtml(content: string): string {\r\n    return `\r\n      <!DOCTYPE html>\r\n      <html lang=\"ko\">\r\n      <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>슬래시 명령어 도움말</title>\r\n        <style>\r\n          body {\r\n            font-family: var(--vscode-font-family, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif);\r\n            padding: 0 20px;\r\n            color: var(--vscode-foreground);\r\n            font-size: var(--vscode-font-size);\r\n            background-color: var(--vscode-editor-background);\r\n          }\r\n          h1 {\r\n            border-bottom: 1px solid var(--vscode-panel-border);\r\n            padding-bottom: 10px;\r\n            color: var(--vscode-symbolIcon-classForeground);\r\n          }\r\n          h2 {\r\n            margin-top: 20px;\r\n            color: var(--vscode-symbolIcon-constantForeground);\r\n            border-left: 3px solid var(--vscode-activityBarBadge-background);\r\n            padding-left: 10px;\r\n          }\r\n          code {\r\n            font-family: var(--vscode-editor-font-family, monospace);\r\n            background-color: var(--vscode-textBlockQuote-background);\r\n            padding: 2px 4px;\r\n            border-radius: 3px;\r\n          }\r\n          .command-name {\r\n            font-weight: bold;\r\n            color: var(--vscode-symbolIcon-functionForeground);\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        ${this.markdownToHtml(content)}\r\n      </body>\r\n      </html>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * 마크다운을 HTML로 변환 (간단 구현)\r\n   */\r\n  private markdownToHtml(markdown: string): string {\r\n    return markdown\r\n      // 헤더 변환\r\n      .replace(/^# (.+)$/gm, '<h1>$1</h1>')\r\n      .replace(/^## (.+)$/gm, '<h2>$1</h2>')\r\n      .replace(/^### (.+)$/gm, '<h3>$1</h3>')\r\n\r\n      // 볼드 텍스트 변환\r\n      .replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>')\r\n\r\n      // 명령어 강조 (한글, 영문 모두 지원)\r\n      .replace(/\\/([\\p{L}\\p{N}-]+)/gu, '<code>/$1</code>')\r\n\r\n      // 목록 변환\r\n      .replace(/^- (.+)$/gm, '<li>$1</li>')\r\n      .replace(/(<li>.*<\\/li>\\n)+/g, '<ul>$&</ul>')\r\n\r\n      // 줄바꿈 변환\r\n      .replace(/\\n\\n/g, '</p><p>')\r\n      .replace(/\\n/g, '<br>')\r\n\r\n      // 단락 감싸기\r\n      .replace(/^(.+?)(?=<\\/p>|<h[1-6]|<ul>|$)/s, '<p>$1</p>');\r\n  }\r\n\r\n  /**\r\n   * Git 상태 표시\r\n   */\r\n  private async showGitStatus(): Promise<void> {\r\n    try {\r\n      // Git 확장 API 가져오기\r\n      const gitExtension = vscode.extensions.getExtension('vscode.git')?.exports;\r\n\r\n      if (!gitExtension) {\r\n        vscode.window.showErrorMessage('Git 확장이 활성화되지 않았습니다.');\r\n        return;\r\n      }\r\n\r\n      const git = gitExtension.getAPI(1);\r\n\r\n      if (!git) {\r\n        vscode.window.showErrorMessage('Git API를 가져올 수 없습니다.');\r\n        return;\r\n      }\r\n\r\n      // 현재 저장소 가져오기\r\n      const repositories = git.repositories;\r\n\r\n      if (repositories.length === 0) {\r\n        vscode.window.showInformationMessage('Git 저장소가 없습니다.');\r\n        return;\r\n      }\r\n\r\n      // 현재 저장소 상태 표시\r\n      const repo = repositories[0];\r\n      const state = repo.state;\r\n\r\n      // 상태 메시지 생성\r\n      const changes = state.workingTreeChanges.length;\r\n      const staged = state.indexChanges.length;\r\n      const untracked = state.untrackedChanges.length;\r\n\r\n      const statusMessage = `# Git 상태 요약\\n\\n` +\r\n        `- 브랜치: **${state.HEAD?.name || 'detached HEAD'}**\\n` +\r\n        `- 변경: **${changes}**개 파일\\n` +\r\n        `- 스테이징: **${staged}**개 파일\\n` +\r\n        `- 추적되지 않음: **${untracked}**개 파일\\n\\n` +\r\n        `## 변경된 파일\\n\\n` +\r\n        state.workingTreeChanges.map((c: any) => `- ${c.uri.fsPath.split('/').pop()} (${this.getChangeTypeLabel(c.status)})`).join('\\n');\r\n\r\n      // 도움말 패널로 표시\r\n      const statusPanel = vscode.window.createWebviewPanel(\r\n        'apeGitStatus',\r\n        'Git 상태',\r\n        vscode.ViewColumn.One,\r\n        {\r\n          enableScripts: false,\r\n          localResourceRoots: []\r\n        }\r\n      );\r\n\r\n      statusPanel.webview.html = this.getHelpPanelHtml(statusMessage);\r\n\r\n    } catch (error) {\r\n      vscode.window.showErrorMessage(`Git 상태 확인 오류: ${error}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 변경 유형 라벨 가져오기\r\n   */\r\n  private getChangeTypeLabel(status: number): string {\r\n    // Git 변경 타입 매핑\r\n    switch (status) {\r\n      case 0: return '추가됨'; // Added\r\n      case 1: return '수정됨'; // Modified\r\n      case 2: return '삭제됨'; // Deleted\r\n      case 3: return '이름 변경됨'; // Renamed\r\n      case 4: return '복사됨'; // Copied\r\n      default: return '알 수 없음';\r\n    }\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { ChatViewProvider } from '../../ui/chatViewProvider';\r\nimport { LLMService } from '../llm/llmService';\r\nimport { MemoryService } from '../memory/memoryService';\r\nimport { SlashCommandManager } from './slashCommandManager';\r\n// LLMModel 는 현재 사용되지 않지만 향후 확장을 위해 유지합니다.\r\n// import { LLMModel } from '../../types/chat';\r\nimport { ModelManager } from '../llm/modelManager';\r\n\r\n/**\r\n * Manages all commands for the extension\r\n */\r\nexport class CommandManager {\r\n  private readonly _slashCommandManager: SlashCommandManager;\r\n\r\n  constructor(\r\n    private readonly _context: vscode.ExtensionContext,\r\n    private readonly _chatViewProvider: ChatViewProvider,\r\n    private readonly _llmService: LLMService,\r\n    private readonly _memoryService: MemoryService,\r\n    private readonly _modelManager: ModelManager,\r\n    private readonly _rulesService?: any, // Rules 서비스\r\n    private readonly _vaultService?: any, // Vault 서비스\r\n    private readonly _jiraService?: any   // Jira 서비스\r\n  ) {\r\n    // Initialize slash command manager with LLMService for smart help and services\r\n    const services = {\r\n      llmService: this._llmService,\r\n      memoryService: this._memoryService,\r\n      modelManager: this._modelManager,\r\n      rulesService: this._rulesService,\r\n      vaultService: this._vaultService,\r\n      jiraService: this._jiraService\r\n    };\r\n    \r\n    this._slashCommandManager = new SlashCommandManager(this._context, this._llmService, services);\r\n  }\r\n\r\n  /**\r\n   * Gets the slash command manager instance\r\n   */\r\n  public get slashCommandManager(): SlashCommandManager {\r\n    return this._slashCommandManager;\r\n  }\r\n\r\n  /**\r\n   * Registers all commands for the extension\r\n   */\r\n  public registerCommands(): void {\r\n    // Chat commands\r\n    this._registerCommand('ape.openChat', this._openChat.bind(this));\r\n    this._registerCommand('ape.clearChat', this._clearChat.bind(this));\r\n    this._registerCommand('ape.sendMessage', this._sendMessage.bind(this));\r\n\r\n    // Model commands\r\n    this._registerCommand('ape.selectModel', this.selectModel.bind(this));\r\n    this._registerCommand('ape.switchModel', this.switchModel.bind(this));\r\n\r\n    // Code commands\r\n    this._registerCommand('ape.analyzeCode', this._analyzeCode.bind(this));\r\n\r\n    // Slash commands\r\n    this._registerCommand('ape.executeSlashCommand', this._executeSlashCommand.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Registers a single command\r\n   */\r\n  private _registerCommand(commandId: string, handler: (...args: any[]) => any): void {\r\n    const disposable = vscode.commands.registerCommand(commandId, handler);\r\n    this._context.subscriptions.push(disposable);\r\n  }\r\n\r\n  /**\r\n   * Opens the chat view\r\n   */\r\n  private async _openChat(): Promise<void> {\r\n    await vscode.commands.executeCommand('workbench.view.extension.ape-sidebar');\r\n  }\r\n\r\n  /**\r\n   * Clears the chat history\r\n   */\r\n  private async _clearChat(): Promise<void> {\r\n    await this._chatViewProvider.clearChat();\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the chat\r\n   */\r\n  private async _sendMessage(content?: string): Promise<void> {\r\n    if (!content) {\r\n      // If no content provided, prompt the user\r\n      const message = await vscode.window.showInputBox({\r\n        prompt: 'Enter message to send to APE',\r\n        placeHolder: 'Type your message here...'\r\n      });\r\n\r\n      if (message) {\r\n        await this._chatViewProvider.sendMessage(message);\r\n      }\r\n    } else {\r\n      await this._chatViewProvider.sendMessage(content);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens model selection dialog\r\n   */\r\n  public async selectModel(): Promise<void> {\r\n    const models = this._modelManager.getAvailableModels();\r\n    const activeModel = this._modelManager.getActiveModel();\r\n\r\n    // Create friendly display names for models\r\n    const selectedModel = await vscode.window.showQuickPick(\r\n      models.map(model => ({\r\n        label: this._modelManager.getModelDisplayName(model),\r\n        description: model === activeModel ? '(active)' : '',\r\n        detail: this._modelManager.getModelDescription(model),\r\n        model: model // Keep original model ID\r\n      })),\r\n      {\r\n        placeHolder: 'Select a model to use',\r\n        title: 'APE Model Selection'\r\n      }\r\n    );\r\n\r\n    if (selectedModel) {\r\n      await this.switchModel(selectedModel.model);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to a specific model\r\n   */\r\n  public async switchModel(modelName: string): Promise<void> {\r\n    try {\r\n      // Use the ModelManager to switch models\r\n      const success = await this._modelManager.setActiveModel(modelName as any);\r\n      \r\n      if (success) {\r\n        // Update the UI to reflect the model change\r\n        this._chatViewProvider.updateModelIndicator();\r\n        \r\n        vscode.window.showInformationMessage(`${this._modelManager.getModelDisplayName(modelName)} 모델로 전환했습니다`);\r\n      } else {\r\n        vscode.window.showErrorMessage(`모델 전환 실패: 유효하지 않은 모델 또는 전환 중 오류 발생`);\r\n      }\r\n    } catch (error) {\r\n      vscode.window.showErrorMessage(`모델 전환 실패: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets user-friendly display name for a model - Deprecated, use ModelManager.getModelDisplayName instead\r\n   * @param modelId The model ID\r\n   * @returns User-friendly display name\r\n   * @deprecated This method is kept for backward compatibility. Use ModelManager.getModelDisplayName instead\r\n   */\r\n  private _getModelDisplayName(modelId: string): string {\r\n    return this._modelManager.getModelDisplayName(modelId);\r\n  }\r\n\r\n  /**\r\n   * Executes a slash command\r\n   */\r\n  private async _executeSlashCommand(commandText: string): Promise<void> {\r\n    const executed = await this._slashCommandManager.executeCommand(commandText);\r\n\r\n    if (!executed) {\r\n      // If not a slash command, treat as regular message\r\n      await this._sendMessage(commandText);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets description for a model - Deprecated, use ModelManager.getModelDescription instead\r\n   * @param model The model ID\r\n   * @returns Model description\r\n   * @deprecated This method is kept for backward compatibility. Use ModelManager.getModelDescription instead\r\n   */\r\n  private _getModelDescription(model: string): string {\r\n    return this._modelManager.getModelDescription(model);\r\n  }\r\n\r\n  /**\r\n   * Analyzes selected code with APE\r\n   */\r\n  private async _analyzeCode(): Promise<void> {\r\n    const editor = vscode.window.activeTextEditor;\r\n\r\n    if (!editor) {\r\n      vscode.window.showErrorMessage('No active editor');\r\n      return;\r\n    }\r\n\r\n    const selection = editor.selection;\r\n\r\n    if (selection.isEmpty) {\r\n      vscode.window.showInformationMessage('Please select code to analyze');\r\n      return;\r\n    }\r\n\r\n    const selectedText = editor.document.getText(selection);\r\n    const filePath = editor.document.fileName;\r\n    const fileExtension = filePath.split('.').pop() || '';\r\n    const fileName = filePath.split('/').pop() || '';\r\n\r\n    // Create analysis prompt with improved message for APE analysis\r\n    const prompt = `Please analyze this ${fileExtension} code from ${fileName}:\\n\\n\\`\\`\\`${fileExtension}\\n${selectedText}\\n\\`\\`\\`\\n\\nProvide a detailed APE analysis including:\\n1. Code functionality\\n2. Potential issues or improvements\\n3. Best practices recommendations`;\r\n\r\n    // Show notification that analysis is starting\r\n    vscode.window.showInformationMessage('Analyzing selected code with APE...');\r\n\r\n    // Open chat and send the prompt\r\n    await this._openChat();\r\n    await this._sendMessage(prompt);\r\n  }\r\n}","/**\r\n * Auto Commit Service\r\n * \r\n * 자동 커밋, 커밋 메시지 생성, 충돌 해결 기능을 제공하는 서비스\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\n// import * as fs from 'fs';\r\nimport { LLMService } from '../llm/llmService';\r\nimport { BitbucketService } from './bitbucketService';\r\nimport { exec } from 'child_process';\r\nimport { promisify } from 'util';\r\n\r\nconst execAsync = promisify(exec);\r\n\r\n/**\r\n * 자동 커밋 서비스 클래스\r\n */\r\nexport class AutoCommitService implements vscode.Disposable {\r\n  private workspaceRoot: string | undefined;\r\n  private statusBarItem: vscode.StatusBarItem;\r\n  private commitInProgress: boolean = false;\r\n  private disposables: vscode.Disposable[] = [];\r\n  private gitWatcher: vscode.FileSystemWatcher | undefined;\r\n  \r\n  /**\r\n   * 생성자\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly llmService: LLMService,\r\n    private readonly bitbucketService?: BitbucketService\r\n  ) {\r\n    // 워크스페이스 루트 설정\r\n    this.workspaceRoot = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\r\n    \r\n    // 상태 표시줄 아이템 생성\r\n    this.statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\r\n    this.statusBarItem.text = \"$(git-commit) 자동 커밋 준비됨\";\r\n    this.statusBarItem.tooltip = \"APE 자동 커밋 서비스\";\r\n    this.statusBarItem.command = \"ape.git.toggleAutoCommit\";\r\n    this.statusBarItem.show();\r\n    \r\n    // 명령어 등록\r\n    this.registerCommands();\r\n    \r\n    // Git 변경 감지 설정\r\n    this.setupGitWatcher();\r\n  }\r\n  \r\n  /**\r\n   * 명령어 등록\r\n   */\r\n  private registerCommands(): void {\r\n    // 자동 커밋 토글\r\n    this.disposables.push(\r\n      vscode.commands.registerCommand('ape.git.toggleAutoCommit', () => this.toggleAutoCommit())\r\n    );\r\n    \r\n    // 수동 커밋\r\n    this.disposables.push(\r\n      vscode.commands.registerCommand('ape.git.commit', () => this.createCommit())\r\n    );\r\n    \r\n    // 임시 커밋 통합\r\n    this.disposables.push(\r\n      vscode.commands.registerCommand('ape.git.consolidateTemporaryCommits', () => this.consolidateTemporaryCommits())\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * Git 변경 감지 설정\r\n   */\r\n  private setupGitWatcher(): void {\r\n    if (!this.workspaceRoot) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // .git/index 파일 변경 감지\r\n      const gitIndexPath = path.join(this.workspaceRoot, '.git', 'index');\r\n      this.gitWatcher = vscode.workspace.createFileSystemWatcher(gitIndexPath);\r\n      \r\n      // 파일 변경 시 상태 업데이트\r\n      this.gitWatcher.onDidChange(() => {\r\n        this.updateStatusBar();\r\n      });\r\n      \r\n      this.disposables.push(this.gitWatcher);\r\n      \r\n      // 초기 상태 업데이트\r\n      this.updateStatusBar();\r\n      \r\n      // 에디터 저장 이벤트 감지\r\n      vscode.workspace.onDidSaveTextDocument(() => {\r\n        // 자동 커밋이 활성화되었을 때 파일 저장 시 변경 사항 감지\r\n        void this.handleFileSaved();\r\n      }, this, this.disposables);\r\n    } catch (error) {\r\n      // Git 저장소가 아닌 경우 무시\r\n      console.log('Git 저장소가 아닙니다:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 상태 표시줄 업데이트\r\n   */\r\n  private async updateStatusBar(): Promise<void> {\r\n    if (!this.workspaceRoot) {\r\n      this.statusBarItem.hide();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Git 상태 확인\r\n      const { stdout } = await execAsync('git status --porcelain', { cwd: this.workspaceRoot });\r\n      \r\n      if (stdout.trim() === '') {\r\n        // 변경 사항 없음\r\n        this.statusBarItem.text = \"$(git-commit) 자동 커밋 준비됨\";\r\n        this.statusBarItem.tooltip = \"변경 사항이 없습니다\";\r\n      } else {\r\n        // 변경된 파일 수 계산\r\n        const changedFiles = stdout.split('\\n').filter(line => line.trim() !== '').length;\r\n        this.statusBarItem.text = `$(git-commit) 자동 커밋 (${changedFiles})`;\r\n        this.statusBarItem.tooltip = `${changedFiles}개 파일이 변경되었습니다`;\r\n      }\r\n      \r\n      this.statusBarItem.show();\r\n    } catch {\r\n      // Git 저장소가 아닌 경우\r\n      this.statusBarItem.text = \"$(git-commit) Git 저장소 아님\";\r\n      this.statusBarItem.tooltip = \"현재 폴더는 Git 저장소가 아닙니다\";\r\n      this.statusBarItem.show();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 자동 커밋 토글\r\n   */\r\n  private toggleAutoCommit(): void {\r\n    const config = vscode.workspace.getConfiguration('ape.git');\r\n    const current = config.get<boolean>('autoCommit', false);\r\n    \r\n    // 설정 토글\r\n    config.update('autoCommit', !current, vscode.ConfigurationTarget.Workspace).then(() => {\r\n      vscode.window.showInformationMessage(`자동 커밋이 ${!current ? '활성화' : '비활성화'}되었습니다`);\r\n      \r\n      // 상태 표시줄 업데이트\r\n      if (!current) {\r\n        this.statusBarItem.text = \"$(git-commit) 자동 커밋 활성화됨\";\r\n        this.statusBarItem.backgroundColor = new vscode.ThemeColor('statusBarItem.warningBackground');\r\n      } else {\r\n        this.statusBarItem.text = \"$(git-commit) 자동 커밋 준비됨\";\r\n        this.statusBarItem.backgroundColor = undefined;\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 파일 저장 처리\r\n   */\r\n  private async handleFileSaved(): Promise<void> {\r\n    if (this.commitInProgress) {\r\n      return;\r\n    }\r\n    \r\n    // 자동 커밋 설정 확인\r\n    const config = vscode.workspace.getConfiguration('ape.git');\r\n    const autoCommitEnabled = config.get<boolean>('autoCommit', false);\r\n    \r\n    if (!autoCommitEnabled) {\r\n      return;\r\n    }\r\n    \r\n    // 일정 시간 후 커밋 (연속 저장 방지)\r\n    setTimeout(async () => {\r\n      try {\r\n        // 변경 사항 확인\r\n        const { stdout } = await execAsync('git status --porcelain', { cwd: this.workspaceRoot });\r\n        \r\n        if (stdout.trim() !== '') {\r\n          // 변경 사항이 있으면 커밋\r\n          await this.createCommit();\r\n        }\r\n      } catch (error) {\r\n        console.error('자동 커밋 오류:', error);\r\n      }\r\n    }, 2000); // 2초 지연\r\n  }\r\n  \r\n  /**\r\n   * 커밋 생성\r\n   */\r\n  public async createCommit(): Promise<void> {\r\n    if (!this.workspaceRoot || this.commitInProgress) {\r\n      return;\r\n    }\r\n    \r\n    this.commitInProgress = true;\r\n    \r\n    try {\r\n      // Git 상태 확인\r\n      const { stdout: statusOutput } = await execAsync('git status --porcelain', { cwd: this.workspaceRoot });\r\n      \r\n      if (statusOutput.trim() === '') {\r\n        vscode.window.showInformationMessage('커밋할 변경 사항이 없습니다');\r\n        this.commitInProgress = false;\r\n        return;\r\n      }\r\n      \r\n      // 변경된 파일 목록\r\n      const changedFiles = statusOutput\r\n        .split('\\n')\r\n        .filter(line => line.trim() !== '')\r\n        .map(line => {\r\n          const status = line.substring(0, 2).trim();\r\n          const file = line.substring(3).trim();\r\n          return { status, file };\r\n        });\r\n      \r\n      // 변경 내용 확인\r\n      const { stdout: diffOutput } = await execAsync('git diff --staged', { cwd: this.workspaceRoot });\r\n      const unstaged = await execAsync('git diff', { cwd: this.workspaceRoot });\r\n      \r\n      try {\r\n        // 자동 커밋 메시지 생성\r\n        let commitMessage = await this.generateCommitMessage(changedFiles, diffOutput + unstaged.stdout);\r\n        \r\n        // 자동 커밋의 경우 프리픽스 추가\r\n        const config = vscode.workspace.getConfiguration('ape.git');\r\n        const autoCommitEnabled = config.get<boolean>('autoCommit', false);\r\n        \r\n        if (autoCommitEnabled) {\r\n          // 자동 커밋인 경우 [APE][Temporary] 프리픽스 추가\r\n          commitMessage = `[APE][Temporary] ${commitMessage}`;\r\n        }\r\n        \r\n        // 변경 사항 스테이징\r\n        await execAsync('git add .', { cwd: this.workspaceRoot });\r\n        \r\n        // 커밋 생성\r\n        await execAsync(`git commit -m \"${commitMessage}\"`, { cwd: this.workspaceRoot });\r\n        \r\n        // 성공 메시지\r\n        vscode.window.showInformationMessage(`커밋 성공: ${commitMessage}`);\r\n        \r\n        // 상태 업데이트\r\n        this.updateStatusBar();\r\n      } catch (error: any) {\r\n        // 커밋 메시지 생성 실패 처리\r\n        const errorMessage = error.message || '알 수 없는 오류';\r\n        \r\n        // BitBucket 오류나 Jira 오류 등 외부 API 오류일 경우 구체적인 메시지 전달\r\n        if (errorMessage.includes('BitBucket') || errorMessage.includes('Jira')) {\r\n          vscode.window.showErrorMessage(`서비스 연결 실패: ${errorMessage}. 설정을 확인하세요.`);\r\n        } else {\r\n          vscode.window.showErrorMessage(`커밋 실패: ${errorMessage}`);\r\n        }\r\n        \r\n        // API 설정 안내\r\n        const openSettings = '설정 열기';\r\n        vscode.window.showInformationMessage(\r\n          '아틀라시안 API 설정이 올바르지 않거나 누락되었습니다. 설정에서 확인해보세요.', \r\n          openSettings\r\n        ).then(selection => {\r\n          if (selection === openSettings) {\r\n            vscode.commands.executeCommand('workbench.action.openSettings', 'ape.bitbucket');\r\n          }\r\n        });\r\n      }\r\n    } catch (error: any) {\r\n      // Git 명령 실행 자체의 오류 (status 조회, diff 실패 등)\r\n      vscode.window.showErrorMessage(`Git 명령 실패: ${error.message}`);\r\n    } finally {\r\n      this.commitInProgress = false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 자동 커밋 메시지 생성\r\n   */\r\n  private async generateCommitMessage(\r\n    changedFiles: Array<{ status: string, file: string }>,\r\n    diff: string\r\n  ): Promise<string> {\r\n    try {\r\n      // 설정에서 LLM 사용 여부 확인\r\n      const config = vscode.workspace.getConfiguration('ape.git');\r\n      const useLLM = config.get<boolean>('useLLMForCommitMessages', false);\r\n      \r\n      // LLM 사용 시 고급 커밋 메시지 생성\r\n      if (useLLM && diff.length > 0) {\r\n        try {\r\n          return await this.generateLLMCommitMessage(changedFiles, diff);\r\n        } catch (error) {\r\n          console.error('LLM 커밋 메시지 생성 실패:', error);\r\n          // LLM 생성 실패 시 기본 메시지 생성 로직으로 폴백\r\n        }\r\n      }\r\n      \r\n      // 간단한 커밋 메시지 헤더 생성 로직\r\n      let messagePrefix = '';\r\n      \r\n      // 변경 유형에 따른 접두사 결정\r\n      const newFiles = changedFiles.filter(file => file.status.includes('A') || file.status.includes('?'));\r\n      const modifiedFiles = changedFiles.filter(file => file.status.includes('M'));\r\n      const deletedFiles = changedFiles.filter(file => file.status.includes('D'));\r\n      \r\n      if (newFiles.length > 0 && modifiedFiles.length === 0 && deletedFiles.length === 0) {\r\n        messagePrefix = 'Add';\r\n      } else if (modifiedFiles.length > 0 && newFiles.length === 0 && deletedFiles.length === 0) {\r\n        messagePrefix = 'Update';\r\n      } else if (deletedFiles.length > 0 && newFiles.length === 0 && modifiedFiles.length === 0) {\r\n        messagePrefix = 'Remove';\r\n      } else if (deletedFiles.length > 0 || newFiles.length > 0) {\r\n        messagePrefix = 'Refactor';\r\n      } else {\r\n        messagePrefix = 'Fix';\r\n      }\r\n      \r\n      // 변경된 파일 경로에서 주요 구성 요소 추출\r\n      const fileComponents: string[] = [];\r\n      for (const file of changedFiles) {\r\n        const ext = path.extname(file.file);\r\n        const dir = path.dirname(file.file);\r\n        \r\n        // 확장자 및 디렉토리 정보 수집\r\n        if (ext && !fileComponents.includes(ext.substring(1))) {\r\n          fileComponents.push(ext.substring(1));\r\n        }\r\n        \r\n        // 주요 디렉토리 경로 추출\r\n        const mainDir = dir.split('/')[0];\r\n        if (mainDir && mainDir !== '.' && !fileComponents.includes(mainDir)) {\r\n          fileComponents.push(mainDir);\r\n        }\r\n      }\r\n      \r\n      // 변경된 파일 목록 요약\r\n      let fileList = '';\r\n      if (changedFiles.length <= 3) {\r\n        fileList = changedFiles.map(f => path.basename(f.file)).join(', ');\r\n      } else {\r\n        fileList = `${changedFiles.length} files`;\r\n      }\r\n      \r\n      // 기본 커밋 메시지 생성\r\n      const component = fileComponents.length > 0 ? fileComponents.join(', ') : 'code';\r\n      const baseMessage = `${messagePrefix} ${component}: `;\r\n      \r\n      return `${baseMessage}${fileList}`;\r\n    } catch (error) {\r\n      console.error('커밋 메시지 생성 오류:', error);\r\n      throw new Error(`커밋 메시지 생성 실패: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * LLM을 사용한 고급 커밋 메시지 생성\r\n   * @throws Error 커밋 메시지 생성 실패 시 오류를 던짐\r\n   */\r\n  private async generateLLMCommitMessage(\r\n    changedFiles: Array<{ status: string, file: string }>,\r\n    diff: string\r\n  ): Promise<string> {\r\n    // 커밋 메시지 예제 가져오기\r\n    let commitExamples = '';\r\n    \r\n    try {\r\n      // BitBucket 서비스가 주입되었는지 확인\r\n      if (this.bitbucketService) {\r\n        try {\r\n          // BitBucket API를 사용하여 사용자 이름 가져오기\r\n          const userName = await this.bitbucketService.getGitUsername();\r\n          \r\n          if (userName) {\r\n            // BitBucket API를 사용하여 사용자의 최근 커밋 이력 검색\r\n            const commits = await this.bitbucketService.getCommitHistory(userName, 20);\r\n            \r\n            if (commits && commits.length > 0) {\r\n              // 커밋 이력을 포맷팅하여 예제로 사용\r\n              const formattedHistory = commits.map(commit => \r\n                `${commit.displayId} - ${commit.message}`\r\n              ).join('\\n');\r\n              \r\n              // 사용자의 최근 커밋 메시지를 예제로 사용\r\n              commitExamples = `Here are some example commit messages to follow the style:\\n${formattedHistory}\\n\\n`;\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('BitBucket 서비스 오류:', error);\r\n          // BitBucket 서비스 오류 시 로컬 Git 명령어를 사용하여 폴백\r\n          await this.fallbackToLocalGitHistory();\r\n        }\r\n      } else {\r\n        // BitBucket 서비스가 주입되지 않은 경우 로컬 Git 명령어 사용\r\n        await this.fallbackToLocalGitHistory();\r\n      }\r\n    } catch (error) {\r\n      console.error('커밋 이력 검색 오류:', error);\r\n      // 모든 방법이 실패하면 기본 예제 사용\r\n      const defaultExamples = [\r\n        \"feat(ui): add slash command suggestions to chat interface\",\r\n        \"fix(core): resolve memory leak in service initialization\",\r\n        \"docs(api): update API documentation with examples\",\r\n        \"refactor(git): improve auto-commit change detection\",\r\n        \"style(ui): update chat interface styling\",\r\n        \"test(llm): add integration tests for LLM service\",\r\n        \"perf(stream): optimize streaming response handling\",\r\n        \"chore(deps): update dependencies to latest versions\"\r\n      ];\r\n      commitExamples = `Here are some example commit messages to follow the style:\\n${defaultExamples.join('\\n')}\\n\\n`;\r\n    }\r\n    \r\n    // diff가 너무 길면 잘라내기\r\n    const maxDiffLength = 5000; // 최대 5000자\r\n    const truncatedDiff = diff.length > maxDiffLength ? \r\n      diff.substring(0, maxDiffLength) + '\\n... (truncated)' : diff;\r\n    \r\n    // 파일 목록 생성\r\n    const fileChangeList = changedFiles.map(file => {\r\n      return `${file.status} ${file.file}`;\r\n    }).join('\\n');\r\n    \r\n    // Conventional Commits 형식 안내\r\n    const prompt = `Please generate a concise and meaningful Git commit message for the following changes. \r\nUse the Conventional Commits format: <type>(<scope>): <description>\r\n\r\nTypes: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert\r\n\r\n${commitExamples}\r\nChanged files:\r\n${fileChangeList}\r\n\r\nDiff:\r\n${truncatedDiff}\r\n\r\nGenerate ONLY the commit message without any explanation. Keep it under 72 characters if possible.`;\r\n\r\n    try {\r\n      // LLM에 요청 보내기\r\n      const result = await this.llmService.getCompletion(prompt);\r\n      \r\n      if (result.success && result.data) {\r\n        // 공백 제거 및 정리\r\n        const message = result.data.trim();\r\n        \r\n        // 결과가 짧고 의미있을 경우 사용\r\n        if (message.length > 0 && message.length < 200) {\r\n          return message;\r\n        }\r\n      }\r\n      \r\n      // LLM 결과가 적절하지 않을 경우 오류 발생\r\n      throw new Error('LLM 생성 결과가 적절하지 않습니다');\r\n    } catch (error) {\r\n      // LLM 서비스 오류 로깅\r\n      console.error('LLM 커밋 메시지 생성 오류:', error);\r\n      \r\n      // 오류 전파 - 호출자에서 기본 메시지 생성 로직으로 폴백\r\n      throw new Error(`LLM 커밋 메시지 생성 실패: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 로컬 Git 명령어를 사용하여 커밋 이력 가져오기 (BitBucket 폴백)\r\n   * @private\r\n   */\r\n  private async fallbackToLocalGitHistory(): Promise<string> {\r\n    try {\r\n      const { stdout: userName } = await execAsync('git config --get user.name', { cwd: this.workspaceRoot });\r\n      \r\n      if (userName.trim()) {\r\n        // 사용자 이름으로 커밋 이력 검색\r\n        const { stdout: commitHistory } = await execAsync(\r\n          `git log --author=\"${userName.trim()}\" -n 20 --pretty=format:\"%h - %s\"`, \r\n          { cwd: this.workspaceRoot }\r\n        );\r\n        \r\n        if (commitHistory.trim()) {\r\n          // 사용자의 최근 커밋 메시지를 예제로 사용\r\n          return `Here are some example commit messages to follow the style:\\n${commitHistory.trim()}\\n\\n`;\r\n        }\r\n      }\r\n      \r\n      // 로컬 Git 명령어도 실패하면 빈 문자열 반환\r\n      return '';\r\n    } catch (error) {\r\n      console.error('로컬 Git 이력 검색 오류:', error);\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 임시 커밋 통합\r\n   * \r\n   * [APE][Temporary] 프리픽스가 붙은 모든 임시 커밋을 찾아서\r\n   * 이들을 통합하여 하나의 정상적인 커밋으로 만듭니다.\r\n   */\r\n  public async consolidateTemporaryCommits(): Promise<void> {\r\n    if (!this.workspaceRoot) {\r\n      vscode.window.showErrorMessage('Git 저장소가 없습니다.');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // 진행 중 안내\r\n      vscode.window.withProgress({\r\n        location: vscode.ProgressLocation.Notification,\r\n        title: \"임시 커밋 통합 중...\",\r\n        cancellable: false\r\n      }, async (progress) => {\r\n        progress.report({ message: \"임시 커밋 찾는 중...\" });\r\n        \r\n        // [APE][Temporary] 프리픽스가 붙은 커밋 찾기\r\n        const { stdout: logOutput } = await execAsync(\r\n          'git log --pretty=format:\"%H %s\" -n 30', \r\n          { cwd: this.workspaceRoot }\r\n        );\r\n        \r\n        // 임시 커밋 목록 추출\r\n        const allCommits = logOutput.split('\\n')\r\n          .map(line => {\r\n            const space = line.indexOf(' ');\r\n            return {\r\n              hash: line.substring(0, space),\r\n              message: line.substring(space + 1),\r\n              isTemporary: line.substring(space + 1).includes('[APE][Temporary]')\r\n            };\r\n          });\r\n        \r\n        // 연속된 임시 커밋 그룹 찾기\r\n        const temporaryGroups = [];\r\n        let currentGroup = [];\r\n        \r\n        // 가장 최근 커밋부터 검사하여 연속된 임시 커밋 그룹 찾기\r\n        for (const commit of allCommits) {\r\n          if (commit.isTemporary) {\r\n            currentGroup.push(commit);\r\n          } else {\r\n            // 일반 커밋을 만나면 지금까지의 그룹을 저장하고 새 그룹 시작\r\n            if (currentGroup.length > 0) {\r\n              temporaryGroups.push([...currentGroup]);\r\n              currentGroup = [];\r\n            }\r\n          }\r\n        }\r\n        \r\n        // 마지막 그룹이 남아있으면 추가\r\n        if (currentGroup.length > 0) {\r\n          temporaryGroups.push(currentGroup);\r\n        }\r\n        \r\n        // 임시 커밋이 없는 경우\r\n        if (temporaryGroups.length === 0 || temporaryGroups[0].length === 0) {\r\n          vscode.window.showInformationMessage('통합할 임시 커밋이 없습니다.');\r\n          return;\r\n        }\r\n        \r\n        // 가장 최근의 연속된 임시 커밋 그룹 선택 (첫 번째 그룹)\r\n        const commits = temporaryGroups[0];\r\n        \r\n        // 임시 커밋 이전 해시 찾기\r\n        const oldestTempCommitHash = commits[commits.length - 1].hash;\r\n        \r\n        // 임시 커밋 이전 커밋 찾기\r\n        const { stdout: parentHash } = await execAsync(\r\n          `git rev-parse ${oldestTempCommitHash}^`, \r\n          { cwd: this.workspaceRoot }\r\n        );\r\n        \r\n        // 통합할 커밋 수 확인\r\n        const commitCount = commits.length;\r\n        \r\n        // 메시지 생성\r\n        progress.report({ message: \"변경 내용 취합 중...\" });\r\n        \r\n        // 변경 사항 취합을 위한 설명 작성\r\n        let commitDescription = '';\r\n        try {\r\n          // 변경 내용 diff 가져오기\r\n          const { stdout: diffOutput } = await execAsync(\r\n            `git diff ${parentHash.trim()} HEAD`, \r\n            { cwd: this.workspaceRoot }\r\n          );\r\n          \r\n          // 임시 커밋 메시지 모음\r\n          const messages = commits.map(c => c.message.replace('[APE][Temporary] ', '')).join('\\n');\r\n          \r\n          // 설명 생성 (LLM 사용)\r\n          progress.report({ message: \"커밋 설명 생성 중...\" });\r\n          \r\n          // LLM 사용 설정 확인\r\n          const config = vscode.workspace.getConfiguration('ape.git');\r\n          const useLLM = config.get<boolean>('useLLMForCommitMessages', false);\r\n          \r\n          if (useLLM) {\r\n            // LLM으로 통합 커밋 메시지 생성\r\n            const prompt = `다음은 여러 임시 커밋을 통합하기 위한 정보입니다.\r\n\r\n임시 커밋 메시지들:\r\n${messages}\r\n\r\n변경 내용 요약 (diff):\r\n${diffOutput.length > 5000 ? diffOutput.substring(0, 5000) + '\\n... (잘림)' : diffOutput}\r\n\r\n위 임시 커밋들을 통합하는 하나의 정식 커밋 메시지를 작성해주세요.\r\nConventional Commits 형식을 사용하세요: <type>(<scope>): <description>\r\n타입: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert\r\n설명만 제공하고 다른 설명은 하지 마세요. 가능하면 72자 미만으로 작성하세요.`;\r\n\r\n            const result = await this.llmService.getCompletion(prompt);\r\n            if (result.success && result.data) {\r\n              commitDescription = result.data.trim();\r\n            }\r\n          }\r\n          \r\n          // LLM 실패 또는 비활성화된 경우 기본 메시지 생성\r\n          if (!commitDescription) {\r\n            commitDescription = `chore(git): consolidate ${commitCount} temporary commits`;\r\n          }\r\n          \r\n        } catch (error) {\r\n          console.error('커밋 설명 생성 오류:', error);\r\n          commitDescription = `chore(git): consolidate ${commitCount} temporary commits`;\r\n        }\r\n        \r\n        // 사용자에게 최종 확인 요청\r\n        progress.report({ message: \"통합 준비 완료...\" });\r\n        \r\n        const result = await vscode.window.showInformationMessage(\r\n          `${commitCount}개의 임시 커밋을 통합하시겠습니까?`,\r\n          { modal: true },\r\n          '통합하기', '취소'\r\n        );\r\n        \r\n        if (result !== '통합하기') {\r\n          return;\r\n        }\r\n        \r\n        // git reset --soft로 변경 사항 유지하며 커밋 취소\r\n        progress.report({ message: \"임시 커밋 리셋 중...\" });\r\n        \r\n        await execAsync(\r\n          `git reset --soft ${parentHash.trim()}`,\r\n          { cwd: this.workspaceRoot }\r\n        );\r\n        \r\n        // 통합 커밋 생성\r\n        progress.report({ message: \"통합 커밋 생성 중...\" });\r\n        \r\n        await execAsync(\r\n          `git commit -m \"${commitDescription.replace(/\"/g, '\\\\\"')}\"`, \r\n          { cwd: this.workspaceRoot }\r\n        );\r\n        \r\n        // 성공 메시지\r\n        vscode.window.showInformationMessage(\r\n          `${commitCount}개의 임시 커밋이 성공적으로 통합되었습니다.`\r\n        );\r\n        \r\n        // 상태 업데이트\r\n        this.updateStatusBar();\r\n      });\r\n      \r\n    } catch (error: any) {\r\n      vscode.window.showErrorMessage(`임시 커밋 통합 오류: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    this.statusBarItem.dispose();\r\n    \r\n    for (const disposable of this.disposables) {\r\n      disposable.dispose();\r\n    }\r\n    \r\n    this.disposables = [];\r\n  }\r\n}","/**\r\n * BitBucket 서비스\r\n * \r\n * BitBucket API를 사용하여 Git 저장소 정보를 조회하고 관리하는 서비스입니다.\r\n * 내부망 BitBucket 서버와 통신하며, 실제 서버를 사용할 수 없는 경우 Mock 데이터를 사용합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\r\nimport { ServiceConfigManager, ServiceType, AuthType } from '../services/serviceConfig';\r\n\r\n/**\r\n * BitBucket 커밋 정보 인터페이스\r\n */\r\nexport interface BitbucketCommit {\r\n  id: string;           // 커밋 해시\r\n  displayId: string;    // 짧은 해시 (7자)\r\n  message: string;      // 커밋 메시지\r\n  author: {\r\n    name: string;       // 작성자 이름\r\n    emailAddress: string; // 작성자 이메일\r\n  };\r\n  authorTimestamp: number; // 작성 시간 (Unix timestamp)\r\n}\r\n\r\n/**\r\n * BitBucket 서비스 오류 유형\r\n */\r\nexport enum BitbucketErrorType {\r\n  ConnectionFailed = 'connection_failed',\r\n  AuthenticationFailed = 'authentication_failed',\r\n  PermissionDenied = 'permission_denied',\r\n  ResourceNotFound = 'resource_not_found',\r\n  ServerError = 'server_error',\r\n  Unknown = 'unknown'\r\n}\r\n\r\n/**\r\n * BitBucket 서비스 오류 인터페이스\r\n */\r\nexport interface BitbucketError {\r\n  type: BitbucketErrorType;\r\n  message: string;\r\n  details?: any;\r\n}\r\n\r\n/**\r\n * BitBucket 서비스 클래스\r\n */\r\nexport class BitbucketService implements vscode.Disposable {\r\n  private baseUrl: string = '';\r\n  private projectKey: string = '';\r\n  private repoSlug: string = '';\r\n  private username: string = '';\r\n  private password: string = '';\r\n  private token: string = '';\r\n  private authType: AuthType = AuthType.Basic;\r\n  private useMock: boolean = true;\r\n  private disposables: vscode.Disposable[] = [];\r\n  private _lastError: BitbucketError | null = null;\r\n\r\n  /**\r\n   * BitBucket 서비스 생성자\r\n   * @param context VSCode 확장 컨텍스트\r\n   * @param serviceConfigManager 서비스 설정 관리자 (선택적)\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly serviceConfigManager?: ServiceConfigManager\r\n  ) {\r\n    // 설정 로드\r\n    this.loadConfiguration();\r\n\r\n    // 설정 변경 감지\r\n    this.disposables.push(\r\n      vscode.workspace.onDidChangeConfiguration(e => {\r\n        if (e.affectsConfiguration('ape.bitbucket')) {\r\n          this.loadConfiguration();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 설정 다시 로드\r\n   */\r\n  private loadConfiguration(): void {\r\n    if (this.serviceConfigManager) {\r\n      // 서비스 설정 관리자를 사용하여 설정 로드\r\n      const config = this.serviceConfigManager.getServiceConfig(ServiceType.Bitbucket);\r\n      this.baseUrl = config.url;\r\n      this.authType = config.authType;\r\n      this.username = config.username || '';\r\n      this.password = config.password || '';\r\n      this.token = config.token || '';\r\n      this.useMock = config.useMock;\r\n      \r\n      // 추가 파라미터에서 프로젝트 키와 저장소 슬러그 가져오기\r\n      const additionalParams = config.additionalParams || {};\r\n      this.projectKey = additionalParams.projectKey || '';\r\n      this.repoSlug = additionalParams.repositorySlug || '';\r\n    } else {\r\n      // 직접 VSCode 설정에서 로드\r\n      const config = vscode.workspace.getConfiguration('ape.bitbucket');\r\n      this.baseUrl = config.get('url', '');\r\n      this.projectKey = config.get('projectKey', '');\r\n      this.repoSlug = config.get('repositorySlug', '');\r\n      this.username = config.get('username', '');\r\n      this.password = config.get('password', '');\r\n      this.token = config.get('token', '');\r\n      this.authType = config.get('authType', AuthType.Basic);\r\n      this.useMock = config.get('useMock', false);\r\n    }\r\n    \r\n    // 필수 설정이 없으면 모의 모드 강제 활성화\r\n    if (!this.baseUrl || (this.authType === AuthType.Basic && (!this.username || !this.password)) || \r\n        (this.authType === AuthType.Token && !this.token)) {\r\n      this.useMock = true;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 마지막 오류 가져오기\r\n   */\r\n  public get lastError(): BitbucketError | null {\r\n    return this._lastError;\r\n  }\r\n\r\n  /**\r\n   * 특정 사용자의 최근 커밋 이력 가져오기\r\n   * @param authorName 작성자 이름 (비어 있으면 모든 커밋 가져옴)\r\n   * @param limit 가져올 커밋 수 (기본값: 20)\r\n   * @returns 커밋 목록\r\n   * @throws Error 연결 실패 또는 서버 오류 시 오류를 던짐\r\n   */\r\n  public async getCommitHistory(authorName?: string, limit: number = 20): Promise<BitbucketCommit[]> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 모의 모드인 경우 모의 데이터 반환\r\n      if (this.useMock) {\r\n        return this.getMockCommitHistory(authorName, limit);\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('BitBucket 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('BitBucket 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('BitBucket 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (!this.projectKey || !this.repoSlug) {\r\n        throw new Error('BitBucket 프로젝트 키 또는 저장소 슬러그가 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      // BitBucket REST API 엔드포인트\r\n      const url = `${this.baseUrl}/rest/api/1.0/projects/${this.projectKey}/repos/${this.repoSlug}/commits`;\r\n      \r\n      // 쿼리 파라미터\r\n      const params: Record<string, string | number> = {\r\n        limit: limit\r\n      };\r\n      \r\n      // 작성자 필터링\r\n      if (authorName) {\r\n        // BitBucket Server API는 'until' 파라미터를 사용하여 커밋 범위를 지정할 수 있음\r\n        params.until = 'HEAD';\r\n        // 'since'는 선택적으로 사용 (필요하면 추가)\r\n      }\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {};\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // 쿼리 파라미터 설정\r\n      config.params = params;\r\n      \r\n      // API 요청 실행\r\n      const response = await axios.get(url, config);\r\n      \r\n      // 응답 데이터 파싱\r\n      const commits: BitbucketCommit[] = response.data.values.filter((commit: any) => {\r\n        // 작성자 필터링 (서버에서 지원하지 않는 경우 클라이언트측에서 필터링)\r\n        return !authorName || commit.author.name === authorName;\r\n      }).map((commit: any) => ({\r\n        id: commit.id,\r\n        displayId: commit.displayId,\r\n        message: commit.message,\r\n        author: {\r\n          name: commit.author.name,\r\n          emailAddress: commit.author.emailAddress\r\n        },\r\n        authorTimestamp: commit.authorTimestamp\r\n      }));\r\n      \r\n      return commits;\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error);\r\n      \r\n      // 오류 로그\r\n      console.error('BitBucket 커밋 이력 가져오기 실패:', error);\r\n      \r\n      // 마지막 오류 객체를 통해 예외 생성\r\n      if (this._lastError) {\r\n        throw new Error(`BitBucket 오류 (${this._lastError.type}): ${this._lastError.message}`);\r\n      } else {\r\n        throw error; // 원본 오류 전파\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 오류 처리 및 분류\r\n   * @param error 발생한 오류\r\n   * @private\r\n   */\r\n  private handleError(error: Error | AxiosError): void {\r\n    if (axios.isAxiosError(error)) {\r\n      const axiosError = error as AxiosError;\r\n      \r\n      if (!axiosError.response) {\r\n        // 네트워크 오류\r\n        this.setError(BitbucketErrorType.ConnectionFailed, \r\n            `BitBucket 서버 연결 실패: ${error.message}. 서버 URL을 확인하세요: ${this.baseUrl}`);\r\n      } else {\r\n        // HTTP 상태 코드에 따른 오류 분류\r\n        const status = axiosError.response.status;\r\n        \r\n        if (status === 401 || status === 403) {\r\n          this.setError(BitbucketErrorType.AuthenticationFailed, \r\n              `BitBucket 인증 실패: ${error.message}. 사용자 이름과 비밀번호를 확인하세요.`);\r\n        } else if (status === 404) {\r\n          this.setError(BitbucketErrorType.ResourceNotFound, \r\n              `BitBucket 리소스를 찾을 수 없습니다: ${error.message}. 프로젝트 키와 저장소 슬러그를 확인하세요.`);\r\n        } else if (status >= 500) {\r\n          this.setError(BitbucketErrorType.ServerError, \r\n              `BitBucket 서버 오류: ${error.message}. 서버 상태를 확인하세요.`);\r\n        } else {\r\n          this.setError(BitbucketErrorType.Unknown, \r\n              `BitBucket 오류: ${error.message}`);\r\n        }\r\n      }\r\n    } else {\r\n      // 일반 오류\r\n      this.setError(BitbucketErrorType.Unknown, \r\n          `BitBucket 오류: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 오류 설정\r\n   * @param type 오류 유형\r\n   * @param message 오류 메시지\r\n   * @param details 추가 세부 정보\r\n   * @private\r\n   */\r\n  private setError(type: BitbucketErrorType, message: string, details?: any): void {\r\n    this._lastError = {\r\n      type,\r\n      message,\r\n      details\r\n    };\r\n    \r\n    // 콘솔에 오류 기록\r\n    console.error(`BitBucket 오류 (${type}):`, message, details || '');\r\n  }\r\n\r\n  /**\r\n   * 사용자의 Git 사용자 이름 가져오기 (BitBucket 계정 이름과 다를 수 있음)\r\n   * @returns Git 사용자 이름\r\n   * @throws Error 연결 실패 또는 서버 오류 시 오류를 던짐\r\n   */\r\n  public async getGitUsername(): Promise<string> {\r\n    try {\r\n      // 마지막 오류 초기화\r\n      this._lastError = null;\r\n      \r\n      // 모의 모드인 경우 모의 데이터 반환\r\n      if (this.useMock) {\r\n        return 'TestUser';\r\n      }\r\n      \r\n      // 필수 설정 확인\r\n      if (!this.baseUrl) {\r\n        throw new Error('BitBucket 서버 URL이 설정되지 않았습니다. 설정을 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Basic && (!this.username || !this.password)) {\r\n        throw new Error('BitBucket 인증 정보가 설정되지 않았습니다. 사용자 이름과 비밀번호를 확인하세요.');\r\n      }\r\n      \r\n      if (this.authType === AuthType.Token && !this.token) {\r\n        throw new Error('BitBucket 인증 토큰이 설정되지 않았습니다. 토큰 설정을 확인하세요.');\r\n      }\r\n      \r\n      // BitBucket REST API를 통해 현재 사용자 정보 가져오기\r\n      const url = `${this.baseUrl}/rest/api/1.0/users/~`;\r\n      \r\n      // API 요청 설정\r\n      const config: AxiosRequestConfig = {};\r\n      \r\n      // 인증 유형에 따른 설정\r\n      if (this.authType === AuthType.Basic) {\r\n        config.auth = {\r\n          username: this.username,\r\n          password: this.password\r\n        };\r\n      } else if (this.authType === AuthType.Token) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          'Authorization': `Bearer ${this.token}`\r\n        };\r\n      }\r\n      \r\n      // API 요청 실행\r\n      const response = await axios.get(url, config);\r\n      return response.data.displayName || response.data.name || this.username;\r\n    } catch (error) {\r\n      // 오류 처리 및 분류\r\n      this.handleError(error as Error);\r\n      \r\n      // 오류 로그\r\n      console.error('BitBucket 사용자 정보 가져오기 실패:', error);\r\n      \r\n      // 마지막 오류 객체를 통해 예외 생성\r\n      if (this._lastError) {\r\n        throw new Error(`BitBucket 오류 (${this._lastError.type}): ${this._lastError.message}`);\r\n      } else {\r\n        throw error; // 원본 오류 전파\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 모의 커밋 이력 생성\r\n   * @param authorName 작성자 이름\r\n   * @param limit 가져올 커밋 수\r\n   * @returns 모의 커밋 목록\r\n   */\r\n  private getMockCommitHistory(authorName?: string, limit: number = 20): BitbucketCommit[] {\r\n    // 모의 커밋 데이터\r\n    const mockCommits: BitbucketCommit[] = [\r\n      {\r\n        id: 'abcdef1234567890abcdef1234567890abcdef12',\r\n        displayId: 'abcdef1',\r\n        message: 'feat(ui): add slash command suggestions to chat interface',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 1\r\n      },\r\n      {\r\n        id: 'bcdef1234567890abcdef1234567890abcdef123',\r\n        displayId: 'bcdef12',\r\n        message: 'fix(core): resolve memory leak in service initialization',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 2\r\n      },\r\n      {\r\n        id: 'cdef1234567890abcdef1234567890abcdef1234',\r\n        displayId: 'cdef123',\r\n        message: 'docs(api): update API documentation with examples',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 3\r\n      },\r\n      {\r\n        id: 'def1234567890abcdef1234567890abcdef12345',\r\n        displayId: 'def1234',\r\n        message: 'refactor(git): improve auto-commit change detection',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 4\r\n      },\r\n      {\r\n        id: 'ef1234567890abcdef1234567890abcdef123456',\r\n        displayId: 'ef12345',\r\n        message: 'style(ui): update chat interface styling',\r\n        author: { name: 'OtherUser', emailAddress: 'otheruser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 5\r\n      },\r\n      {\r\n        id: 'f1234567890abcdef1234567890abcdef1234567',\r\n        displayId: 'f123456',\r\n        message: 'test(llm): add integration tests for LLM service',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 6\r\n      },\r\n      {\r\n        id: '1234567890abcdef1234567890abcdef12345678',\r\n        displayId: '1234567',\r\n        message: 'perf(stream): optimize streaming response handling',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 7\r\n      },\r\n      {\r\n        id: '234567890abcdef1234567890abcdef123456789',\r\n        displayId: '2345678',\r\n        message: 'chore(deps): update dependencies to latest versions',\r\n        author: { name: 'OtherUser', emailAddress: 'otheruser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 8\r\n      },\r\n      {\r\n        id: '34567890abcdef1234567890abcdef1234567890',\r\n        displayId: '3456789',\r\n        message: 'feat(commands): add support for keyboard shortcuts',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 9\r\n      },\r\n      {\r\n        id: '4567890abcdef1234567890abcdef12345678901',\r\n        displayId: '4567890',\r\n        message: 'fix(ui): correct positioning of dropdown menu',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 10\r\n      },\r\n      {\r\n        id: '567890abcdef1234567890abcdef123456789012',\r\n        displayId: '567890a',\r\n        message: 'docs(readme): update installation instructions',\r\n        author: { name: 'OtherUser', emailAddress: 'otheruser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 11\r\n      },\r\n      {\r\n        id: '67890abcdef1234567890abcdef1234567890123',\r\n        displayId: '67890ab',\r\n        message: 'refactor(core): simplify service initialization logic',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 12\r\n      },\r\n      {\r\n        id: '7890abcdef1234567890abcdef12345678901234',\r\n        displayId: '7890abc',\r\n        message: 'style(icons): update icon set for better visibility',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 13\r\n      },\r\n      {\r\n        id: '890abcdef1234567890abcdef123456789012345',\r\n        displayId: '890abcd',\r\n        message: 'test(core): improve test coverage for core services',\r\n        author: { name: 'OtherUser', emailAddress: 'otheruser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 14\r\n      },\r\n      {\r\n        id: '90abcdef1234567890abcdef1234567890123456',\r\n        displayId: '90abcde',\r\n        message: 'perf(memory): optimize memory usage in large operations',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 15\r\n      },\r\n      {\r\n        id: '0abcdef1234567890abcdef12345678901234567',\r\n        displayId: '0abcdef',\r\n        message: 'chore(build): update build configuration',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 16\r\n      },\r\n      {\r\n        id: 'abcdef1234567890abcdef123456789012345678',\r\n        displayId: 'abcdef1',\r\n        message: 'feat(git): enhance commit message generation',\r\n        author: { name: 'OtherUser', emailAddress: 'otheruser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 17\r\n      },\r\n      {\r\n        id: 'bcdef1234567890abcdef1234567890123456789',\r\n        displayId: 'bcdef12',\r\n        message: 'fix(auth): resolve authentication token refresh issue',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 18\r\n      },\r\n      {\r\n        id: 'cdef1234567890abcdef12345678901234567890',\r\n        displayId: 'cdef123',\r\n        message: 'docs(api): add examples for new API endpoints',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 19\r\n      },\r\n      {\r\n        id: 'def1234567890abcdef123456789012345678901',\r\n        displayId: 'def1234',\r\n        message: 'refactor(ui): reorganize component hierarchy',\r\n        author: { name: 'TestUser', emailAddress: 'testuser@example.com' },\r\n        authorTimestamp: Date.now() - 86400000 * 20\r\n      }\r\n    ];\r\n    \r\n    // 작성자로 필터링\r\n    const filteredCommits = authorName \r\n      ? mockCommits.filter(commit => commit.author.name === authorName)\r\n      : mockCommits;\r\n    \r\n    // 최대 개수 제한\r\n    return filteredCommits.slice(0, limit);\r\n  }\r\n\r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    this.disposables.forEach(d => d.dispose());\r\n    this.disposables = [];\r\n  }\r\n}","/**\r\n * Tab Completion Provider\r\n * \r\n * 탭 자동 완성 기능을 제공하는 모듈\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { LLMService } from '../llm/llmService';\r\nimport { Message, MessageRole } from '../../types/chat';\r\n\r\n/**\r\n * 자동 완성 아이템\r\n */\r\nexport interface CompletionItem extends vscode.CompletionItem {\r\n  sourceFile?: string;\r\n  confidence?: number;\r\n}\r\n\r\n/**\r\n * 탭 자동 완성 제공자\r\n */\r\nexport class TabCompletionProvider implements vscode.CompletionItemProvider {\r\n  private cachedCompletions: Map<string, CompletionItem[]> = new Map();\r\n  private cacheTimeout = 30 * 60 * 1000; // 30분\r\n  private suggestionCache: Map<string, {\r\n    suggestions: vscode.CompletionItem[];\r\n    timestamp: number;\r\n  }> = new Map();\r\n  private contextAwareCommands: Map<string, string[]> = new Map();\r\n  \r\n  /**\r\n   * 생성자\r\n   */\r\n  constructor(\r\n    private readonly llmService: LLMService\r\n  ) {\r\n    // 컨텍스트 인식 명령어 초기화\r\n    this.initializeContextAwareCommands();\r\n  }\r\n  \r\n  /**\r\n   * 컨텍스트 인식 명령어 초기화\r\n   */\r\n  private initializeContextAwareCommands(): void {\r\n    // Git 관련 컨텍스트\r\n    this.contextAwareCommands.set('git', [\r\n      'commit',\r\n      'push',\r\n      'pull',\r\n      'status',\r\n      'solve',\r\n      'branch',\r\n      'auto',\r\n      'consolidate'\r\n    ]);\r\n    \r\n    // Jira 관련 컨텍스트\r\n    this.contextAwareCommands.set('jira', [\r\n      'create',\r\n      'list',\r\n      'update',\r\n      'comment',\r\n      'assign'\r\n    ]);\r\n    \r\n    // 코드 관련 컨텍스트\r\n    this.contextAwareCommands.set('code', [\r\n      'analyze',\r\n      'review',\r\n      'optimize',\r\n      'refactor',\r\n      'format'\r\n    ]);\r\n    \r\n    // SWDP 관련 컨텍스트\r\n    this.contextAwareCommands.set('swdp', [\r\n      'build',\r\n      'deploy',\r\n      'status',\r\n      'verify',\r\n      'list'\r\n    ]);\r\n  }\r\n  \r\n  /**\r\n   * 자동 완성 제안\r\n   */\r\n  public async provideCompletionItems(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position,\r\n    token: vscode.CancellationToken,\r\n    context: vscode.CompletionContext\r\n  ): Promise<vscode.CompletionItem[] | vscode.CompletionList> {\r\n    // 트리거 문자가 TAB인 경우에만 처리\r\n    if (context.triggerKind !== vscode.CompletionTriggerKind.TriggerCharacter && \r\n        context.triggerKind !== vscode.CompletionTriggerKind.Invoke) {\r\n      return [];\r\n    }\r\n    \r\n    // 현재 줄 가져오기\r\n    const lineText = document.lineAt(position.line).text;\r\n    const linePrefix = lineText.substring(0, position.character);\r\n    \r\n    // 명령어 또는 코드 완성이 필요한지 확인\r\n    if (this.isCommandCompletion(linePrefix)) {\r\n      return this.provideCommandCompletions(linePrefix);\r\n    } else {\r\n      // 코드 자동 완성\r\n      return this.provideCodeCompletions(document, position, linePrefix);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 명령어 자동 완성인지 확인\r\n   */\r\n  private isCommandCompletion(linePrefix: string): boolean {\r\n    // 행이 '/'로 시작하는지 확인\r\n    return linePrefix.trim().startsWith('/');\r\n  }\r\n  \r\n  /**\r\n   * 명령어 자동 완성 제공\r\n   */\r\n  private provideCommandCompletions(linePrefix: string): vscode.CompletionItem[] {\r\n    const commands = [\r\n      { name: 'git', description: 'Git 관련 명령어' },\r\n      { name: 'commit', description: '변경 사항 커밋' },\r\n      { name: 'push', description: '원격 저장소에 푸시' },\r\n      { name: 'pull', description: '원격 저장소에서 풀' },\r\n      { name: 'status', description: 'Git 상태 확인' },\r\n      { name: 'jira', description: 'JIRA 관련 명령어' },\r\n      { name: 'issue', description: 'JIRA 이슈 조회/생성' },\r\n      { name: 'ticket', description: 'JIRA 티켓 관리' },\r\n      { name: 'help', description: '도움말 표시' },\r\n      { name: 'todo', description: '할 일 지정' },\r\n      { name: 'code', description: '코드 분석 및 작업' },\r\n      { name: 'analyze', description: '코드 분석' },\r\n      { name: 'settings', description: '설정 열기' },\r\n      { name: 'theme', description: '테마 변경' },\r\n      { name: 'model', description: 'LLM 모델 설정' },\r\n      { name: 'clear', description: '채팅 내역 지우기' },\r\n      { name: 'swdp', description: 'SWDP 관련 명령어' }\r\n    ];\r\n    \r\n    // 현재 입력된 명령어 파싱\r\n    const commandParts = linePrefix.trim().substring(1).split(/\\s+/);\r\n    const currentCommand = commandParts[0];\r\n    \r\n    // 현재 작업 컨텍스트 파악\r\n    const activeContext = this.getActiveContext();\r\n    \r\n    // 하위 명령어 필터링\r\n    if (commandParts.length > 1 && !commandParts[1].startsWith('-')) {\r\n      // 상위 명령어에 따른 하위 명령어 제공\r\n      if (this.contextAwareCommands.has(currentCommand)) {\r\n        const subCommands = this.contextAwareCommands.get(currentCommand) || [];\r\n        return subCommands.map(subCmd => \r\n          this.createCompletionItem(subCmd, `${currentCommand} ${subCmd} 명령어`, `/${currentCommand} ${subCmd}`)\r\n        );\r\n      }\r\n      \r\n      // 기본 서브커맨드 제공\r\n      switch (currentCommand) {\r\n        case 'git':\r\n          return [\r\n            this.createCompletionItem('commit', '변경 사항 커밋', '/git commit'),\r\n            this.createCompletionItem('push', '원격 저장소에 푸시', '/git push'),\r\n            this.createCompletionItem('pull', '원격 저장소에서 풀', '/git pull'),\r\n            this.createCompletionItem('status', '현재 Git 상태 확인', '/git status'),\r\n            this.createCompletionItem('solve', '충돌 자동 해결', '/git solve'),\r\n            this.createCompletionItem('branch', '브랜치 생성/목록/전환', '/git branch'),\r\n            this.createCompletionItem('auto', '자동 커밋 토글', '/git auto'),\r\n            this.createCompletionItem('consolidate', '임시 커밋 통합', '/git consolidate')\r\n          ];\r\n          \r\n        case 'jira':\r\n          return [\r\n            this.createCompletionItem('create', '새 이슈 생성', '/jira create'),\r\n            this.createCompletionItem('list', '이슈 목록 조회', '/jira list'),\r\n            this.createCompletionItem('assign', '이슈 할당', '/jira assign'),\r\n            this.createCompletionItem('update', '이슈 업데이트', '/jira update'),\r\n            this.createCompletionItem('comment', '이슈에 코멘트 추가', '/jira comment')\r\n          ];\r\n          \r\n        case 'code':\r\n          return [\r\n            this.createCompletionItem('analyze', '코드 분석', '/code analyze'),\r\n            this.createCompletionItem('review', '코드 리뷰', '/code review'),\r\n            this.createCompletionItem('optimize', '코드 최적화', '/code optimize'),\r\n            this.createCompletionItem('refactor', '코드 리팩토링', '/code refactor'),\r\n            this.createCompletionItem('format', '코드 서식 정리', '/code format')\r\n          ];\r\n          \r\n        case 'swdp':\r\n          return [\r\n            this.createCompletionItem('build', '빌드 실행', '/swdp build'),\r\n            this.createCompletionItem('deploy', '배포 실행', '/swdp deploy'),\r\n            this.createCompletionItem('status', '상태 확인', '/swdp status'),\r\n            this.createCompletionItem('verify', '검증 실행', '/swdp verify'),\r\n            this.createCompletionItem('list', '목록 표시', '/swdp list')\r\n          ];\r\n          \r\n        case 'todo':\r\n          return [\r\n            this.createCompletionItem('add', '할 일 추가', '/todo add'),\r\n            this.createCompletionItem('list', '할 일 목록', '/todo list'),\r\n            this.createCompletionItem('done', '할 일 완료', '/todo done'),\r\n            this.createCompletionItem('delete', '할 일 삭제', '/todo delete'),\r\n            this.createCompletionItem('prioritize', '우선순위 변경', '/todo prioritize')\r\n          ];\r\n      }\r\n    }\r\n    \r\n    // 현재 컨텍스트에 따라 추천되는 명령어 필터링\r\n    let filteredCommands = [...commands];\r\n    \r\n    if (activeContext) {\r\n      // 에디터에서 텍스트 선택된 경우: code 관련 명령어 우선\r\n      const codeRelatedCommands = ['code', 'analyze', 'review', 'optimize', 'refactor'];\r\n      if (activeContext.hasTextSelection) {\r\n        filteredCommands = [\r\n          ...filteredCommands.filter(cmd => codeRelatedCommands.includes(cmd.name)),\r\n          ...filteredCommands.filter(cmd => !codeRelatedCommands.includes(cmd.name))\r\n        ];\r\n      }\r\n      \r\n      // Git 관련 컨텍스트: git 관련 명령어 우선\r\n      const gitRelatedCommands = ['git', 'commit', 'push', 'pull', 'status'];\r\n      if (activeContext.isGitRepo) {\r\n        filteredCommands = [\r\n          ...filteredCommands.filter(cmd => gitRelatedCommands.includes(cmd.name)),\r\n          ...filteredCommands.filter(cmd => !gitRelatedCommands.includes(cmd.name))\r\n        ];\r\n      }\r\n    }\r\n    \r\n    // 기본 최상위 명령어 제공\r\n    return filteredCommands.map(cmd => \r\n      this.createCompletionItem(cmd.name, cmd.description, '/' + cmd.name)\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * 현재 컨텍스트 파악\r\n   */\r\n  private getActiveContext(): { hasTextSelection: boolean; isGitRepo: boolean } | null {\r\n    try {\r\n      const editor = vscode.window.activeTextEditor;\r\n      \r\n      return {\r\n        hasTextSelection: !!(editor && !editor.selection.isEmpty),\r\n        isGitRepo: this.isGitRepository()\r\n      };\r\n    } catch (error) {\r\n      console.error('컨텍스트 파악 오류:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Git 저장소인지 확인\r\n   */\r\n  private isGitRepository(): boolean {\r\n    try {\r\n      // 현재 작업 디렉토리\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n      if (!workspaceFolders || workspaceFolders.length === 0) {\r\n        return false;\r\n      }\r\n      \r\n      // 간단히 true 반환 (모의 구현)\r\n      // 실제로는 .git 폴더 존재 여부를 확인해야 하지만, 여기서는 모의 구현만 제공\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Git 저장소 확인 오류:', error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 코드 자동 완성 제공\r\n   */\r\n  private async provideCodeCompletions(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position,\r\n    linePrefix: string\r\n  ): Promise<vscode.CompletionItem[]> {\r\n    // 캐시 키 생성 (파일 경로 + 현재 위치)\r\n    const cacheKey = `${document.fileName}:${position.line}:${position.character}`;\r\n    \r\n    // 캐시된 결과가 있는 경우 재사용\r\n    const cachedResult = this.suggestionCache.get(cacheKey);\r\n    if (cachedResult && Date.now() - cachedResult.timestamp < this.cacheTimeout) {\r\n      return cachedResult.suggestions;\r\n    }\r\n    \r\n    try {\r\n      // 컨텍스트 수집\r\n      // 전체 파일 내용과 커서 위치 계산(미사용)\r\n      // // const fileContent = document.getText();\r\n      // // const cursorOffset = document.offsetAt(position);\r\n      \r\n      // 이전 줄과 현재 줄 추출\r\n      const precedingLines = document.getText(new vscode.Range(\r\n        new vscode.Position(Math.max(0, position.line - 10), 0),\r\n        position\r\n      ));\r\n      \r\n      // 파일 유형 확인\r\n      const fileType = document.fileName.split('.').pop() || '';\r\n      \r\n      // LLM에 코드 완성 요청\r\n      const suggestions = await this.requestCodeCompletions(\r\n        precedingLines,\r\n        linePrefix,\r\n        fileType\r\n      );\r\n      \r\n      // 결과 캐싱\r\n      this.suggestionCache.set(cacheKey, {\r\n        suggestions,\r\n        timestamp: Date.now()\r\n      });\r\n      \r\n      return suggestions;\r\n    } catch (error) {\r\n      console.error('코드 완성 오류:', error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * LLM을 통한 코드 완성 요청\r\n   */\r\n  private async requestCodeCompletions(\r\n    context: string,\r\n    currentLine: string,\r\n    fileType: string\r\n  ): Promise<vscode.CompletionItem[]> {\r\n    try {\r\n      // 프롬프트 생성\r\n      const prompt = `\r\n다음 코드의 다음 줄을 완성해주세요. 파일 타입은 ${fileType}입니다.\r\n탭 자동 완성을 위한 여러 가지 가능한 코드 완성을 제안해주세요.\r\n각 제안은 새로운 줄에 시작하며, 완전한 코드 조각이어야 합니다.\r\n최대 5개의 다른 완성을 제안해주세요.\r\n\r\n코드 컨텍스트:\r\n\\`\\`\\`${fileType}\r\n${context}\r\n\\`\\`\\`\r\n\r\n현재 줄 (커서 위치는 | 로 표시):\r\n\\`\\`\\`\r\n${currentLine}|\r\n\\`\\`\\`\r\n\r\n가능한 완성:`;\r\n      \r\n      // LLM 요청\r\n      const messages: Message[] = [\r\n        {\r\n          id: `msg_completion_${Date.now()}`,\r\n          role: MessageRole.User,\r\n          content: prompt,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      \r\n      const result = await this.llmService.sendRequest(messages);\r\n      \r\n      if (result.success && result.data) {\r\n        // 응답 파싱하여 CompletionItem 배열로 변환\r\n        return this.parseCompletionResponse(result.data.content || '', currentLine);\r\n      } else {\r\n        throw new Error('LLM 요청 실패');\r\n      }\r\n    } catch (error) {\r\n      console.error('LLM 코드 완성 요청 오류:', error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * LLM 응답을 CompletionItem으로 파싱\r\n   */\r\n  private parseCompletionResponse(\r\n    responseContent: string, \r\n    currentLine: string\r\n  ): vscode.CompletionItem[] {\r\n    const completions: vscode.CompletionItem[] = [];\r\n    \r\n    try {\r\n      // 코드 블록에서 제안 추출\r\n      const codeBlockMatch = responseContent.match(/```(?:.*?)?\\n([\\s\\S]*?)```/);\r\n      const suggestions = codeBlockMatch \r\n        ? codeBlockMatch[1].split('\\n').filter(line => line.trim() !== '')\r\n        : responseContent.split('\\n').filter(line => line.trim() !== '');\r\n      \r\n      // 각 제안에 대해 CompletionItem 생성\r\n      suggestions.forEach((suggestion, index) => {\r\n        // 번호 또는 불릿 포인트 제거\r\n        suggestion = suggestion.replace(/^\\d+\\.\\s+|^-\\s+/, '').trim();\r\n        \r\n        if (suggestion) {\r\n          // 현재 줄과 겹치는 부분 제거\r\n          const overlap = this.findOverlap(currentLine, suggestion);\r\n          const insertText = overlap > 0 ? suggestion.substring(overlap) : suggestion;\r\n          \r\n          if (insertText.trim()) {\r\n            const item = new vscode.CompletionItem(\r\n              suggestion,\r\n              vscode.CompletionItemKind.Snippet\r\n            );\r\n            \r\n            item.insertText = insertText;\r\n            item.sortText = String(index).padStart(5, '0');\r\n            item.detail = '탭 자동 완성';\r\n            \r\n            completions.push(item);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('응답 파싱 오류:', error);\r\n    }\r\n    \r\n    return completions;\r\n  }\r\n  \r\n  /**\r\n   * 현재 줄과 제안 사이의 겹치는 부분 찾기\r\n   */\r\n  private findOverlap(currentLine: string, suggestion: string): number {\r\n    let overlap = 0;\r\n    \r\n    // 현재 줄의 끝에서부터 제안의 시작과 일치하는지 확인\r\n    for (let i = 1; i <= currentLine.length; i++) {\r\n      const suffix = currentLine.substring(currentLine.length - i);\r\n      if (suggestion.startsWith(suffix)) {\r\n        overlap = suffix.length;\r\n      }\r\n    }\r\n    \r\n    return overlap;\r\n  }\r\n  \r\n  /**\r\n   * CompletionItem 생성 헬퍼 함수\r\n   */\r\n  private createCompletionItem(\r\n    label: string,\r\n    detail: string,\r\n    insertText: string\r\n  ): vscode.CompletionItem {\r\n    const item = new vscode.CompletionItem(\r\n      label,\r\n      vscode.CompletionItemKind.Keyword\r\n    );\r\n    \r\n    item.detail = detail;\r\n    item.insertText = insertText;\r\n    item.command = {\r\n      command: 'editor.action.triggerSuggest',\r\n      title: 'Re-trigger completions...'\r\n    };\r\n    \r\n    return item;\r\n  }\r\n}","/**\r\n * 인라인 완성 제공자\r\n * \r\n * VS Code 입력 중에 인라인 제안 및 고스트 텍스트를 제공하는 컴포넌트\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { LLMService } from '../llm/llmService';\r\nimport { Message, MessageRole } from '../../types/chat';\r\n\r\n/**\r\n * 인라인 완성 제공자 클래스\r\n */\r\nexport class InlineCompletionProvider implements vscode.InlineCompletionItemProvider {\r\n  private completionCache: Map<string, {\r\n    completions: vscode.InlineCompletionItem[];\r\n    timestamp: number;\r\n  }> = new Map();\r\n  private cacheTimeout = 5 * 60 * 1000; // 5분\r\n  private requestQueue: Map<string, Promise<vscode.InlineCompletionItem[]>> = new Map();\r\n  private completionConfig: {\r\n    enabled: boolean;\r\n    triggerLength: number;\r\n    debounceDelay: number;\r\n    maxLineContext: number;\r\n  } = {\r\n    enabled: true,\r\n    triggerLength: 3,\r\n    debounceDelay: 300,\r\n    maxLineContext: 10\r\n  };\r\n  \r\n  // 디바운스 타이머\r\n  private debounceTimer: NodeJS.Timeout | null = null;\r\n  \r\n  /**\r\n   * 생성자\r\n   */\r\n  constructor(\r\n    private readonly llmService: LLMService,\r\n    private readonly context: vscode.ExtensionContext\r\n  ) {\r\n    // 설정 로드\r\n    this.loadConfiguration();\r\n    \r\n    // 설정 변경 감지\r\n    vscode.workspace.onDidChangeConfiguration(e => {\r\n      if (e.affectsConfiguration('ape.completion')) {\r\n        this.loadConfiguration();\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 설정 로드\r\n   */\r\n  private loadConfiguration(): void {\r\n    const config = vscode.workspace.getConfiguration('ape.completion');\r\n    \r\n    this.completionConfig = {\r\n      enabled: config.get('inlineEnabled', true),\r\n      triggerLength: config.get('triggerLength', 3),\r\n      debounceDelay: config.get('debounceDelay', 300),\r\n      maxLineContext: config.get('maxLineContext', 10)\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 인라인 완성 제공\r\n   */\r\n  public async provideInlineCompletionItems(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _context: vscode.InlineCompletionContext,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _token: vscode.CancellationToken\r\n  ): Promise<vscode.InlineCompletionItem[] | vscode.InlineCompletionList | null> {\r\n    // 비활성화된 경우\r\n    if (!this.completionConfig.enabled) {\r\n      return null;\r\n    }\r\n    \r\n    // 현재 줄 가져오기\r\n    const lineText = document.lineAt(position.line).text;\r\n    const linePrefix = lineText.substring(0, position.character);\r\n    \r\n    // 트리거 확인 (문자 수 검사)\r\n    if (linePrefix.trim().length < this.completionConfig.triggerLength) {\r\n      return null;\r\n    }\r\n    \r\n    // 특정 파일 형식 필터링 (주석 또는 문서)\r\n    if (this.shouldSkipCompletion(document, position)) {\r\n      return null;\r\n    }\r\n    \r\n    // 캐시 키 생성\r\n    const cacheKey = `${document.fileName}:${position.line}:${position.character}:${lineText}`;\r\n    \r\n    // 캐시된 결과가 있는 경우 재사용\r\n    const cachedResult = this.completionCache.get(cacheKey);\r\n    if (cachedResult && Date.now() - cachedResult.timestamp < this.cacheTimeout) {\r\n      return cachedResult.completions;\r\n    }\r\n    \r\n    // 이미 요청 중인 경우 해당 요청의 결과 대기\r\n    if (this.requestQueue.has(cacheKey)) {\r\n      try {\r\n        return await this.requestQueue.get(cacheKey)!;\r\n      } catch (error) {\r\n        console.error('대기 중인 인라인 완성 요청 오류:', error);\r\n        return null;\r\n      }\r\n    }\r\n    \r\n    // 디바운스 적용\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n    }\r\n    \r\n    const completionPromise = new Promise<vscode.InlineCompletionItem[]>((resolve) => {\r\n      this.debounceTimer = setTimeout(async () => {\r\n        try {\r\n          // 컨텍스트 수집\r\n          const context = await this.getCompletionContext(document, position);\r\n          \r\n          // LLM을 통한 인라인 완성 요청\r\n          const completions = await this.requestInlineCompletions(\r\n            context.precedingText,\r\n            context.followingText,\r\n            document.languageId\r\n          );\r\n          \r\n          // 결과 캐싱\r\n          this.completionCache.set(cacheKey, {\r\n            completions,\r\n            timestamp: Date.now()\r\n          });\r\n          \r\n          // 요청 큐에서 제거\r\n          this.requestQueue.delete(cacheKey);\r\n          \r\n          resolve(completions);\r\n        } catch (error) {\r\n          console.error('인라인 완성 요청 오류:', error);\r\n          this.requestQueue.delete(cacheKey);\r\n          resolve([]);\r\n        }\r\n      }, this.completionConfig.debounceDelay);\r\n    });\r\n    \r\n    // 요청 큐에 추가\r\n    this.requestQueue.set(cacheKey, completionPromise);\r\n    \r\n    return completionPromise;\r\n  }\r\n  \r\n  /**\r\n   * 완성을 건너뛸지 결정\r\n   */\r\n  private shouldSkipCompletion(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): boolean {\r\n    // 코드 블록이나 다른 특수 컨텍스트 감지\r\n    const lineText = document.lineAt(position.line).text;\r\n    \r\n    // 마크다운 코드 블록 또는 주석 내에서는 건너뛰기\r\n    const isMdCodeBlock = document.languageId === 'markdown' && \r\n      (lineText.trim().startsWith('```') || \r\n       document.getText(new vscode.Range(\r\n         new vscode.Position(Math.max(0, position.line - 3), 0),\r\n         position\r\n       )).includes('```'));\r\n    \r\n    // 주석 감지\r\n    const isInComment = this.isPositionInComment(document, position);\r\n    \r\n    return isMdCodeBlock || isInComment;\r\n  }\r\n  \r\n  /**\r\n   * 현재 위치가 주석 내에 있는지 확인\r\n   */\r\n  private isPositionInComment(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): boolean {\r\n    const lineText = document.lineAt(position.line).text;\r\n    \r\n    // 언어별 주석 구문 검사\r\n    switch (document.languageId) {\r\n      case 'typescript':\r\n      case 'javascript':\r\n      case 'typescriptreact':\r\n      case 'javascriptreact':\r\n      case 'csharp':\r\n      case 'java':\r\n      case 'cpp':\r\n      case 'c': {\r\n        // 한 줄 주석 확인\r\n        if (lineText.substring(0, position.character).includes('//')) {\r\n          return true;\r\n        }\r\n        // 여러 줄 주석 확인 (간단한 구현)\r\n        const prevText = document.getText(new vscode.Range(\r\n          new vscode.Position(0, 0),\r\n          position\r\n        ));\r\n        const commentStarts = (prevText.match(/\\/\\*/g) || []).length;\r\n        const commentEnds = (prevText.match(/\\*\\//g) || []).length;\r\n        return commentStarts > commentEnds;\r\n      }\r\n      \r\n      case 'python':\r\n        // Python 주석\r\n        return lineText.substring(0, position.character).includes('#');\r\n      \r\n      case 'html':\r\n      case 'xml': {\r\n        // HTML/XML 주석\r\n        const htmlPrev = document.getText(new vscode.Range(\r\n          new vscode.Position(0, 0),\r\n          position\r\n        ));\r\n        const htmlCommentStarts = (htmlPrev.match(/<!--/g) || []).length;\r\n        const htmlCommentEnds = (htmlPrev.match(/-->/g) || []).length;\r\n        return htmlCommentStarts > htmlCommentEnds;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  /**\r\n   * 완성 컨텍스트 수집\r\n   */\r\n  private async getCompletionContext(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): Promise<{ precedingText: string; followingText: string }> {\r\n    // 이전 텍스트 (현재 라인 포함)\r\n    const startLine = Math.max(0, position.line - this.completionConfig.maxLineContext);\r\n    const precedingText = document.getText(new vscode.Range(\r\n      new vscode.Position(startLine, 0),\r\n      position\r\n    ));\r\n    \r\n    // 이후 텍스트 (현재 라인의 나머지 부분 + 다음 몇 줄)\r\n    const endLine = Math.min(document.lineCount - 1, position.line + 5);\r\n    const followingText = document.getText(new vscode.Range(\r\n      position,\r\n      new vscode.Position(endLine, document.lineAt(endLine).text.length)\r\n    ));\r\n    \r\n    return { precedingText, followingText };\r\n  }\r\n  \r\n  /**\r\n   * LLM을 통한 인라인 완성 요청\r\n   */\r\n  private async requestInlineCompletions(\r\n    precedingText: string,\r\n    followingText: string,\r\n    languageId: string\r\n  ): Promise<vscode.InlineCompletionItem[]> {\r\n    try {\r\n      // 프롬프트 생성\r\n      const prompt = `\r\n현재 사용자가 코드를 작성하고 있습니다. 언어는 ${languageId}입니다.\r\n사용자의 입력을 기반으로 다음에 올 코드를 정확하게 예측해서 제안해주세요.\r\n문맥을 고려하여 가장 적절한 자연스러운 다음 코드 줄이나 구문을 작성해주세요.\r\n인라인 제안이므로 간결하고 정확해야 합니다.\r\n\r\n현재까지 작성된 코드:\r\n\\`\\`\\`${languageId}\r\n${precedingText}\r\n\\`\\`\\`\r\n\r\n현재 위치 이후의 코드 (컨텍스트):\r\n\\`\\`\\`${languageId}\r\n${followingText}\r\n\\`\\`\\`\r\n\r\n다음에 올 코드 예측 (최대 3개):\r\n`;\r\n      \r\n      // LLM 요청\r\n      const messages: Message[] = [\r\n        {\r\n          id: `msg_inline_${Date.now()}`,\r\n          role: MessageRole.User,\r\n          content: prompt,\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      \r\n      const result = await this.llmService.sendRequest(messages);\r\n      \r\n      if (result.success && result.data) {\r\n        // 응답 파싱하여 InlineCompletionItem 배열로 변환\r\n        return this.parseInlineCompletionResponse(result.data.content || '');\r\n      } else {\r\n        throw new Error('LLM 요청 실패');\r\n      }\r\n    } catch (error) {\r\n      console.error('LLM 인라인 완성 요청 오류:', error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * LLM 응답을 InlineCompletionItem으로 파싱\r\n   */\r\n  private parseInlineCompletionResponse(responseContent: string): vscode.InlineCompletionItem[] {\r\n    const completions: vscode.InlineCompletionItem[] = [];\r\n    \r\n    try {\r\n      // 코드 블록 추출\r\n      const codeBlockRegex = /```(?:\\w+)?\\n([\\s\\S]*?)```/g;\r\n      const codeBlocks: string[] = [];\r\n      \r\n      let match;\r\n      while ((match = codeBlockRegex.exec(responseContent)) !== null) {\r\n        codeBlocks.push(match[1]);\r\n      }\r\n      \r\n      if (codeBlocks.length > 0) {\r\n        // 코드 블록에서 추출\r\n        for (const block of codeBlocks) {\r\n          const lines = block.split('\\n').filter(line => line.trim() !== '');\r\n          lines.forEach(line => {\r\n            if (line.trim()) {\r\n              completions.push({\r\n                insertText: line.trim(),\r\n                range: undefined\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        // 코드 블록이 없는 경우 일반 텍스트로 처리\r\n        const lines = responseContent.split('\\n')\r\n          .filter(line => line.trim() !== '')\r\n          .filter(line => !line.startsWith('#') && !line.startsWith('-') && !line.startsWith('*'));\r\n        \r\n        lines.forEach(line => {\r\n          const cleanedLine = line.replace(/^\\d+\\.\\s+/, '').trim();\r\n          if (cleanedLine) {\r\n            completions.push({\r\n              insertText: cleanedLine,\r\n              range: undefined\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('인라인 완성 응답 파싱 오류:', error);\r\n    }\r\n    \r\n    // 중복 제거\r\n    const uniqueCompletions = this.removeDuplicates(completions);\r\n    \r\n    return uniqueCompletions.slice(0, 3); // 최대 3개 반환\r\n  }\r\n  \r\n  /**\r\n   * 중복 제거\r\n   */\r\n  private removeDuplicates(completions: vscode.InlineCompletionItem[]): vscode.InlineCompletionItem[] {\r\n    const seen = new Set<string>();\r\n    return completions.filter(item => {\r\n      if (item.insertText && !seen.has(item.insertText.toString())) {\r\n        seen.add(item.insertText.toString());\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}","/**\r\n * 트리 노드 타입 정의\r\n * \r\n * APE Navigator 트리뷰의 노드 타입과 인터페이스를 정의합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\n\r\n/**\r\n * 트리 노드 타입 열거형\r\n */\r\nexport enum TreeNodeType {\r\n  // 카테고리 노드\r\n  CATEGORY = 'category',\r\n  \r\n  // 명령어 관련 노드\r\n  COMMAND_ROOT = 'command-root',\r\n  COMMAND_CATEGORY = 'command-category',\r\n  COMMAND = 'command',\r\n  \r\n  // Git 관련 노드\r\n  GIT_ROOT = 'git-root',\r\n  GIT_CATEGORY = 'git-category',\r\n  GIT_COMMAND = 'git-command',\r\n  \r\n  // 설정 관련 노드\r\n  SETTINGS_ROOT = 'settings-root',\r\n  SETTINGS_CATEGORY = 'settings-category',\r\n  SETTINGS_ITEM = 'settings-item',\r\n  \r\n  // 플러그인 관련 노드\r\n  PLUGIN_ROOT = 'plugin-root',\r\n  PLUGIN_ACTIVE = 'plugin-active',\r\n  PLUGIN_INACTIVE = 'plugin-inactive',\r\n  PLUGIN = 'plugin',\r\n  \r\n  // 지라 관련 노드\r\n  JIRA_ROOT = 'jira-root',\r\n  JIRA_PROJECT = 'jira-project',\r\n  JIRA_ISSUE = 'jira-issue',\r\n  JIRA_CATEGORY = 'jira-category',\r\n  JIRA_COMMAND = 'jira-command',\r\n  \r\n  // 포켓 관련 노드\r\n  POCKET_ROOT = 'pocket-root',\r\n  POCKET_CATEGORY = 'pocket-category',\r\n  POCKET_ITEM = 'pocket-item',\r\n  \r\n  // SWDP 관련 노드\r\n  SWDP_ROOT = 'swdp-root',\r\n  SWDP_RELEASE = 'swdp-release',\r\n  SWDP_BUILD_TYPE = 'swdp-build-type',\r\n  SWDP_ARTIFACT = 'swdp-artifact',\r\n  \r\n  // VAULT 관련 노드\r\n  VAULT_ROOT = 'vault-root',\r\n  VAULT_CATEGORY = 'vault-category',\r\n  VAULT_CONTEXT = 'vault-context',\r\n  VAULT_ITEM = 'vault-item',\r\n  \r\n  // Rules 관련 노드\r\n  RULES_ROOT = 'rules-root',\r\n  RULES_ACTIVE = 'rules-active',\r\n  RULES_INACTIVE = 'rules-inactive',\r\n  RULE_ITEM = 'rule-item',\r\n  \r\n  // 채팅 내역 관련 노드\r\n  CHAT_HISTORY_ROOT = 'chat-history-root',\r\n  CHAT_HISTORY_ITEM = 'chat-history-item'\r\n}\r\n\r\n/**\r\n * 트리 아이템 인터페이스\r\n */\r\nexport interface ApeTreeItem {\r\n  // 기본 정보\r\n  id: string;\r\n  label: string;\r\n  type: TreeNodeType;\r\n  \r\n  // 부가 정보\r\n  description?: string;\r\n  iconPath?: string | vscode.ThemeIcon | vscode.Uri | { light: vscode.Uri; dark: vscode.Uri };\r\n  tooltip?: string;\r\n  contextValue?: string;\r\n  \r\n  // 메타데이터 (명령어, 설정 등의 부가 정보)\r\n  metadata?: any;\r\n  \r\n  // 자식 노드\r\n  children?: ApeTreeItem[];\r\n}","/**\r\n * APE Navigator 트리 데이터 제공자\r\n * \r\n * VS Code TreeView API를 사용하여 APE 확장의 주요 기능을 계층적으로 표시합니다.\r\n * 주요 명령어, 설정, 플러그인 정보를 트리 형태로 보여줍니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport { existsSync } from 'fs';\r\nimport { ApeTreeItem, TreeNodeType } from './treeNodeTypes';\r\nimport { LLMService } from '../../core/llm/llmService';\r\nimport { MemoryService } from '../../core/memory/memoryService';\r\nimport { TodoService } from '../../core/services/todoService';\r\nimport { VaultService, VaultContextType } from '../../core/services/vaultService';\r\nimport { RulesService } from '../../core/services/rulesService';\r\nimport { JiraService } from '../../core/services/jiraService';\r\n\r\n/**\r\n * APE Navigator 트리 데이터 제공자 클래스\r\n */\r\nexport class ApeTreeDataProvider implements vscode.TreeDataProvider<ApeTreeItem> {\r\n  // 트리 데이터 변경 이벤트\r\n  private _onDidChangeTreeData: vscode.EventEmitter<ApeTreeItem | undefined> = new vscode.EventEmitter<ApeTreeItem | undefined>();\r\n  readonly onDidChangeTreeData: vscode.Event<ApeTreeItem | undefined> = this._onDidChangeTreeData.event;\r\n  \r\n  // 트리 데이터\r\n  private treeData: ApeTreeItem[] = [];\r\n  \r\n  /**\r\n   * 생성자\r\n   * @param context 확장 프로그램 컨텍스트\r\n   * @param llmService LLM 서비스\r\n   * @param memoryService 메모리 서비스\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly llmService: LLMService,\r\n    private readonly memoryService: MemoryService,\r\n    private readonly todoService?: TodoService,\r\n    private readonly vaultService?: VaultService,\r\n    private readonly rulesService?: RulesService,\r\n    private readonly jiraService?: JiraService\r\n  ) {\r\n    // 트리 데이터 초기화\r\n    this.initializeTreeData();\r\n    \r\n    // 설정 변경 이벤트 구독\r\n    vscode.workspace.onDidChangeConfiguration(e => {\r\n      if (e.affectsConfiguration('ape')) {\r\n        this.refresh();\r\n      }\r\n    });\r\n    \r\n    // VAULT 서비스 변경 이벤트 구독\r\n    if (this.vaultService) {\r\n      this.vaultService.onDidChangeVault(() => {\r\n        this.refresh();\r\n      });\r\n    }\r\n    \r\n    // Rules 서비스 변경 이벤트 구독\r\n    if (this.rulesService) {\r\n      this.rulesService.onDidChangeRules(() => {\r\n        this.refresh();\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 트리 데이터 초기화\r\n   */\r\n  private initializeTreeData(): void {\r\n    this.treeData = [\r\n      // Git 섹션 (최상위로 이동)\r\n      {\r\n        id: 'git-root',\r\n        label: 'Git',\r\n        type: TreeNodeType.GIT_ROOT,\r\n        iconPath: this.getIconPath('git-version-control', 'git-commit'),\r\n        contextValue: 'gitRoot',\r\n        children: this.getGitItems()\r\n      },\r\n      \r\n      // 채팅 내역 섹션\r\n      {\r\n        id: 'chat-history-root',\r\n        label: '채팅 내역',\r\n        type: TreeNodeType.CHAT_HISTORY_ROOT,\r\n        iconPath: this.getIconPath('chat', 'history'),\r\n        contextValue: 'chatHistoryRoot',\r\n        children: this.getChatHistoryItems()\r\n      },\r\n      \r\n      // 명령어 섹션\r\n      {\r\n        id: 'commands',\r\n        label: '명령어',\r\n        type: TreeNodeType.COMMAND_ROOT,\r\n        iconPath: this.getIconPath('command-line', 'symbol-method'),\r\n        contextValue: 'commandRoot',\r\n        children: this.getCommandItems()\r\n      },\r\n      \r\n      // 설정 섹션\r\n      {\r\n        id: 'settings',\r\n        label: '설정',\r\n        type: TreeNodeType.SETTINGS_ROOT,\r\n        iconPath: this.getIconPath('config', 'gear'),\r\n        contextValue: 'settingsRoot',\r\n        children: this.getSettingsItems()\r\n      },\r\n      \r\n      // Rules 섹션\r\n      {\r\n        id: 'rules-root',\r\n        label: 'Rules',\r\n        type: TreeNodeType.RULES_ROOT,\r\n        iconPath: this.getIconPath('notebook', 'book'),\r\n        contextValue: 'rulesRoot',\r\n        children: this.getRulesItems()\r\n      },\r\n      \r\n      // VAULT 섹션\r\n      {\r\n        id: 'vault',\r\n        label: 'VAULT 컨텍스트',\r\n        type: TreeNodeType.VAULT_ROOT,\r\n        iconPath: this.getIconPath('brain-ai', 'library'),\r\n        contextValue: 'vaultRoot',\r\n        children: this.getVaultItems()\r\n      },\r\n      \r\n      // 지라 섹션 (Mock)\r\n      {\r\n        id: 'jira',\r\n        label: 'Jira 이슈',\r\n        type: TreeNodeType.JIRA_ROOT,\r\n        iconPath: this.getIconPath('jira', 'issues'),\r\n        contextValue: 'jiraRoot',\r\n        children: this.getJiraItems()\r\n      },\r\n      \r\n      // 포켓 섹션 (Mock)\r\n      {\r\n        id: 'pocket',\r\n        label: 'Pocket 저장소',\r\n        type: TreeNodeType.POCKET_ROOT,\r\n        iconPath: this.getIconPath('folder', 'library'),\r\n        contextValue: 'pocketRoot',\r\n        children: this.getPocketItems()\r\n      },\r\n      \r\n      // SWDP 섹션 (Mock)\r\n      {\r\n        id: 'swdp',\r\n        label: 'SWDP',\r\n        type: TreeNodeType.SWDP_ROOT,\r\n        iconPath: this.getIconPath('cicd', 'package'),\r\n        contextValue: 'swdpRoot',\r\n        children: this.getSWDPItems()\r\n      },\r\n      \r\n      // 플러그인 섹션\r\n      {\r\n        id: 'plugins',\r\n        label: '플러그인',\r\n        type: TreeNodeType.PLUGIN_ROOT,\r\n        iconPath: this.getIconPath('plugin', 'extensions'),\r\n        contextValue: 'pluginRoot',\r\n        children: this.getPluginItems()\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * Git 아이템 가져오기\r\n   */\r\n  private getGitItems(): ApeTreeItem[] {\r\n    return [\r\n      {\r\n        id: 'git-commands',\r\n        label: 'Git 명령어',\r\n        type: TreeNodeType.GIT_CATEGORY,\r\n        iconPath: this.getIconPath('git-version-control', 'git-commit'),\r\n        tooltip: 'Git 관련 작업을 수행하는 명령어입니다. 커밋, 상태 확인, 자동 커밋 기능 등을 제공합니다.',\r\n        contextValue: 'gitCategory',\r\n        children: [\r\n          {\r\n            id: 'git-command-status',\r\n            label: '/git status',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: 'Git 상태 확인',\r\n            tooltip: '현재 Git 저장소의 상태를 확인합니다. 변경된 파일, 스테이징된 파일, 브랜치 정보 등을 보여줍니다.',\r\n            iconPath: this.getIconPath('git-version-control', 'git-pull-request'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['status'],\r\n              category: 'git'\r\n            }\r\n          },\r\n          {\r\n            id: 'git-command-commit',\r\n            label: '/git commit',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: '변경사항 커밋',\r\n            tooltip: '변경된 파일을 Git에 커밋합니다. 자동으로 적절한 커밋 메시지를 생성합니다.',\r\n            iconPath: this.getIconPath('git-version-control', 'git-commit'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['commit'],\r\n              category: 'git'\r\n            }\r\n          },\r\n          {\r\n            id: 'git-command-auto',\r\n            label: '/git auto',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: '자동 커밋 토글',\r\n            tooltip: '자동 커밋 기능을 켜거나 끕니다. 켜진 상태에서는 파일 저장 시 자동으로 변경사항이 커밋됩니다.',\r\n            iconPath: this.getIconPath('config', 'settings-gear'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['auto'],\r\n              category: 'git'\r\n            }\r\n          },\r\n          {\r\n            id: 'git-command-consolidate',\r\n            label: '/git consolidate',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: '임시 커밋 통합',\r\n            tooltip: '[APE][Temporary] 접두사가 붙은 연속된 임시 커밋들을 하나의 정식 커밋으로 통합합니다.',\r\n            iconPath: this.getIconPath('github', 'git-merge'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['consolidate'],\r\n              category: 'git'\r\n            }\r\n          },\r\n          {\r\n            id: 'git-command-pr-list',\r\n            label: '/git pr-list [Mock]',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: 'PR 목록 조회',\r\n            tooltip: 'Git 저장소의 PR(Pull Request) 목록을 조회합니다.',\r\n            iconPath: this.getIconPath('github', 'git-pull-request'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['pr-list'],\r\n              category: 'git'\r\n            }\r\n          },\r\n          {\r\n            id: 'git-command-pr-create',\r\n            label: '/git pr-create [Mock]',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: '새 PR 생성',\r\n            tooltip: 'Git 저장소에 새로운 PR(Pull Request)을 생성합니다.',\r\n            iconPath: this.getIconPath('github', 'diff-added'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['pr-create'],\r\n              category: 'git'\r\n            }\r\n          },\r\n          {\r\n            id: 'git-command-branch-list',\r\n            label: '/git branch-list [Mock]',\r\n            type: TreeNodeType.GIT_COMMAND,\r\n            description: '브랜치 목록 조회',\r\n            tooltip: 'Git 저장소의 브랜치 목록을 조회합니다.',\r\n            iconPath: this.getIconPath('git-version-control', 'git-branch'),\r\n            contextValue: 'gitCommand',\r\n            metadata: {\r\n              name: 'git',\r\n              args: ['branch-list'],\r\n              category: 'git'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * 명령어 아이템 가져오기\r\n   */\r\n  private getCommandItems(): ApeTreeItem[] {\r\n    const categories = [\r\n      {\r\n        id: 'commands-general',\r\n        label: '일반 명령어',\r\n        type: TreeNodeType.COMMAND_CATEGORY,\r\n        iconPath: this.getIconPath('command-line', 'info'),\r\n        tooltip: '기본적인 채팅 및 도움말 관련 명령어입니다.',\r\n        contextValue: 'commandCategory',\r\n        children: [\r\n          {\r\n            id: 'command-help',\r\n            label: '/help',\r\n            type: TreeNodeType.COMMAND,\r\n            description: '도움말 표시',\r\n            tooltip: '사용 가능한 모든 명령어 목록과 설명을 보여줍니다. \"/?\" 또는 \"/도움말\"로도 사용 가능합니다.',\r\n            iconPath: this.getIconPath('message', 'question'),\r\n            contextValue: 'command',\r\n            metadata: {\r\n              name: 'help',\r\n              category: 'general'\r\n            }\r\n          },\r\n          {\r\n            id: 'command-clear',\r\n            label: '/clear',\r\n            type: TreeNodeType.COMMAND,\r\n            description: '채팅 내역 지우기',\r\n            tooltip: '현재 채팅 내역을 모두 삭제합니다. \"/cls\" 또는 \"/지우기\"로도 사용 가능합니다.',\r\n            iconPath: this.getIconPath('chat', 'clear-all'),\r\n            contextValue: 'command',\r\n            metadata: {\r\n              name: 'clear',\r\n              category: 'general'\r\n            }\r\n          },\r\n          {\r\n            id: 'command-model',\r\n            label: '/model',\r\n            type: TreeNodeType.COMMAND,\r\n            description: 'LLM 모델 변경',\r\n            tooltip: '사용할 LLM 모델을 선택하거나 변경합니다. \"/model list\"로 사용 가능한 모델 목록을 확인할 수 있습니다.',\r\n            iconPath: this.getIconPath('llm', 'server-process'),\r\n            contextValue: 'command',\r\n            metadata: {\r\n              name: 'model',\r\n              category: 'general'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'commands-code',\r\n        label: '코드 및 유틸리티 명령어',\r\n        type: TreeNodeType.COMMAND_CATEGORY,\r\n        iconPath: this.getIconPath('coding', 'symbol-class'),\r\n        tooltip: '코드 분석 및 VS Code 기능 접근을 위한 유틸리티 명령어입니다.',\r\n        contextValue: 'commandCategory',\r\n        children: [\r\n          {\r\n            id: 'command-analyze',\r\n            label: '/analyze',\r\n            type: TreeNodeType.COMMAND,\r\n            description: '코드 분석',\r\n            tooltip: '선택한 코드를 상세히 분석합니다. 코드 기능, 개선점, 모범 사례 등을 제안합니다. \"/code\" 또는 \"/분석\"으로도 사용 가능합니다.',\r\n            iconPath: this.getIconPath('code-editor', 'inspect'),\r\n            contextValue: 'command',\r\n            metadata: {\r\n              name: 'analyze',\r\n              category: 'code'\r\n            }\r\n          },\r\n          {\r\n            id: 'command-settings',\r\n            label: '/settings',\r\n            type: TreeNodeType.COMMAND,\r\n            description: 'APE 설정 열기',\r\n            tooltip: 'VS Code 설정에서 APE 관련 설정을 열어 확인하고 수정할 수 있습니다. \"/config\" 또는 \"/설정\"으로도 사용 가능합니다.',\r\n            iconPath: this.getIconPath('config', 'gear'),\r\n            contextValue: 'command',\r\n            metadata: {\r\n              name: 'settings',\r\n              category: 'utility'\r\n            }\r\n          },\r\n          {\r\n            id: 'command-open',\r\n            label: '/open',\r\n            type: TreeNodeType.COMMAND,\r\n            description: '파일 열기',\r\n            tooltip: '지정한 파일을 VS Code에서 엽니다. \"/file\" 또는 \"/파일열기\"로도 사용 가능합니다.',\r\n            iconPath: this.getIconPath('code-file', 'go-to-file'),\r\n            contextValue: 'command',\r\n            metadata: {\r\n              name: 'open',\r\n              category: 'utility'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    \r\n    return categories;\r\n  }\r\n  \r\n  /**\r\n   * 설정 아이템 가져오기\r\n   */\r\n  private getSettingsItems(): ApeTreeItem[] {\r\n    return [\r\n      {\r\n        id: 'settings-llm',\r\n        label: 'LLM 설정',\r\n        type: TreeNodeType.SETTINGS_CATEGORY,\r\n        iconPath: this.getIconPath('llm', 'server'),\r\n        contextValue: 'settingsCategory',\r\n        children: [\r\n          {\r\n            id: 'settings-llm-model',\r\n            label: '기본 모델',\r\n            type: TreeNodeType.SETTINGS_ITEM,\r\n            iconPath: this.getIconPath('ai-neural-network', 'symbol-enum'),\r\n            contextValue: 'settingsItem',\r\n            description: this.getConfigValue('ape.llm.defaultModel') || 'openai/gpt-4.1-mini',\r\n            metadata: {\r\n              settingKey: 'ape.llm.defaultModel'\r\n            }\r\n          },\r\n          {\r\n            id: 'settings-llm-endpoint',\r\n            label: 'API 엔드포인트',\r\n            type: TreeNodeType.SETTINGS_ITEM,\r\n            iconPath: this.getIconPath('api', 'link'),\r\n            contextValue: 'settingsItem',\r\n            description: this.getConfigValue('ape.llm.endpoint') || 'http://localhost:8000/api/chat',\r\n            metadata: {\r\n              settingKey: 'ape.llm.endpoint'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'settings-memory',\r\n        label: '메모리 설정',\r\n        type: TreeNodeType.SETTINGS_CATEGORY,\r\n        iconPath: this.getIconPath('database', 'database'),\r\n        contextValue: 'settingsCategory',\r\n        children: [\r\n          {\r\n            id: 'settings-memory-duration',\r\n            label: '세션 유지 기간',\r\n            type: TreeNodeType.SETTINGS_ITEM,\r\n            iconPath: this.getIconPath('event', 'history'),\r\n            contextValue: 'settingsItem',\r\n            description: `${this.getConfigValue('ape.memory.sessionDuration') || '240'}분`,\r\n            metadata: {\r\n              settingKey: 'ape.memory.sessionDuration'\r\n            }\r\n          },\r\n          {\r\n            id: 'settings-memory-messages',\r\n            label: '최대 메시지 수',\r\n            type: TreeNodeType.SETTINGS_ITEM,\r\n            iconPath: this.getIconPath('message', 'symbol-number'),\r\n            contextValue: 'settingsItem',\r\n            description: this.getConfigValue('ape.memory.maxMessages') || '30',\r\n            metadata: {\r\n              settingKey: 'ape.memory.maxMessages'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'settings-ui',\r\n        label: 'UI 설정',\r\n        type: TreeNodeType.SETTINGS_CATEGORY,\r\n        iconPath: this.getIconPath('code-editor', 'browser'),\r\n        contextValue: 'settingsCategory',\r\n        children: [\r\n          {\r\n            id: 'settings-ui-theme',\r\n            label: 'UI 테마',\r\n            type: TreeNodeType.SETTINGS_ITEM,\r\n            iconPath: this.getIconPath('vscode', 'symbol-color'),\r\n            contextValue: 'settingsItem',\r\n            description: this.getConfigValue('ape.ui.theme') || 'auto',\r\n            metadata: {\r\n              settingKey: 'ape.ui.theme'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * VAULT 아이템 가져오기\r\n   */\r\n  private getVaultItems(): ApeTreeItem[] {\r\n    // VAULT 서비스가 없으면 스텁 반환\r\n    if (!this.vaultService) {\r\n      return [{\r\n        id: 'vault-not-initialized',\r\n        label: 'VAULT 서비스 초기화 필요',\r\n        type: TreeNodeType.VAULT_ROOT,\r\n        iconPath: this.getIconPath('brain-ai', 'error'),\r\n        contextValue: 'vaultError',\r\n        description: '서비스가 초기화되지 않음',\r\n        tooltip: 'VAULT 서비스가 초기화되지 않았습니다. 확장 설정을 확인하세요.'\r\n      }];\r\n    }\r\n    \r\n    // 컨텍스트 타입별 아이템 구성\r\n    const contextTypeItems: ApeTreeItem[] = [];\r\n    \r\n    // 시스템 컨텍스트\r\n    const systemContexts = this.vaultService.getContextsByType(VaultContextType.System);\r\n    if (systemContexts.length > 0) {\r\n      contextTypeItems.push({\r\n        id: 'vault-system',\r\n        label: '시스템 컨텍스트',\r\n        type: TreeNodeType.VAULT_CATEGORY,\r\n        iconPath: this.getIconPath('brain-ai', 'server'),\r\n        contextValue: 'vaultCategory',\r\n        tooltip: '시스템 기본 컨텍스트입니다.',\r\n        children: systemContexts.flatMap(context => this.createContextNode(context))\r\n      });\r\n    }\r\n    \r\n    // 프로젝트 컨텍스트\r\n    const projectContexts = this.vaultService.getContextsByType(VaultContextType.Project);\r\n    if (projectContexts.length > 0) {\r\n      contextTypeItems.push({\r\n        id: 'vault-project',\r\n        label: '프로젝트 컨텍스트',\r\n        type: TreeNodeType.VAULT_CATEGORY,\r\n        iconPath: this.getIconPath('coding', 'git-merge'),\r\n        contextValue: 'vaultCategory',\r\n        tooltip: '프로젝트별 컨텍스트입니다.',\r\n        children: projectContexts.flatMap(context => this.createContextNode(context))\r\n      });\r\n    }\r\n    \r\n    // 개인 컨텍스트\r\n    const personalContexts = this.vaultService.getContextsByType(VaultContextType.Personal);\r\n    if (personalContexts.length > 0) {\r\n      contextTypeItems.push({\r\n        id: 'vault-personal',\r\n        label: '개인 컨텍스트',\r\n        type: TreeNodeType.VAULT_CATEGORY,\r\n        iconPath: this.getIconPath('message', 'account'),\r\n        contextValue: 'vaultCategory',\r\n        tooltip: '개인 사용자 컨텍스트입니다.',\r\n        children: personalContexts.flatMap(context => this.createContextNode(context))\r\n      });\r\n    }\r\n    \r\n    // 공유 컨텍스트\r\n    const sharedContexts = this.vaultService.getContextsByType(VaultContextType.Shared);\r\n    if (sharedContexts.length > 0) {\r\n      contextTypeItems.push({\r\n        id: 'vault-shared',\r\n        label: '공유 컨텍스트',\r\n        type: TreeNodeType.VAULT_CATEGORY,\r\n        iconPath: this.getIconPath('github', 'repo-forked'),\r\n        contextValue: 'vaultCategory',\r\n        tooltip: '팀원 간 공유되는 컨텍스트입니다.',\r\n        children: sharedContexts.flatMap(context => this.createContextNode(context))\r\n      });\r\n    }\r\n    \r\n    // 템플릿 컨텍스트\r\n    const templateContexts = this.vaultService.getContextsByType(VaultContextType.Template);\r\n    if (templateContexts.length > 0) {\r\n      contextTypeItems.push({\r\n        id: 'vault-template',\r\n        label: '템플릿 컨텍스트',\r\n        type: TreeNodeType.VAULT_CATEGORY,\r\n        iconPath: this.getIconPath('code-file', 'file-code'),\r\n        contextValue: 'vaultCategory',\r\n        tooltip: '재사용 가능한 템플릿 컨텍스트입니다.',\r\n        children: templateContexts.flatMap(context => this.createContextNode(context))\r\n      });\r\n    }\r\n    \r\n    return contextTypeItems;\r\n  }\r\n  \r\n  /**\r\n   * VAULT 컨텍스트 노드 생성\r\n   * @param context 컨텍스트\r\n   */\r\n  private createContextNode(context: any): ApeTreeItem[] {\r\n    if (!context || !context.items) {\r\n      return [];\r\n    }\r\n    \r\n    const contextNode: ApeTreeItem = {\r\n      id: `vault-context-${context.id}`,\r\n      label: context.name,\r\n      type: TreeNodeType.VAULT_CONTEXT,\r\n      description: `${context.items.length}개 항목`,\r\n      tooltip: context.description || context.name,\r\n      iconPath: this.getIconPath('brain-ai', 'library'),\r\n      contextValue: 'vaultContext',\r\n      metadata: {\r\n        contextId: context.id,\r\n        contextType: context.type\r\n      },\r\n      children: context.items.map((item: any) => this.createItemNode(item, context))\r\n    };\r\n    \r\n    return [contextNode];\r\n  }\r\n  \r\n  /**\r\n   * VAULT 아이템 노드 생성\r\n   * @param item 아이템\r\n   * @param context 컨텍스트\r\n   */\r\n  private createItemNode(item: any, context: any): ApeTreeItem {\r\n    let iconName = 'file-text';\r\n    let fallbackIcon = 'symbol-string';\r\n    \r\n    // 태그에 따른 아이콘 설정\r\n    if (item.tags) {\r\n      if (item.tags.includes('prompt')) {\r\n        iconName = 'brain-ai';\r\n        fallbackIcon = 'symbol-text';\r\n      } else if (item.tags.includes('code')) {\r\n        iconName = 'code-file';\r\n        fallbackIcon = 'file-code';\r\n      } else if (item.tags.includes('architecture')) {\r\n        iconName = 'orchestration';\r\n        fallbackIcon = 'type-hierarchy';\r\n      } else if (item.tags.includes('meeting')) {\r\n        iconName = 'event';\r\n        fallbackIcon = 'group';\r\n      } else if (item.tags.includes('documentation')) {\r\n        iconName = 'markdown';\r\n        fallbackIcon = 'markdown';\r\n      }\r\n    }\r\n    \r\n    // 업데이트 날짜 포맷\r\n    const updatedAtStr = item.updatedAt instanceof Date \r\n      ? item.updatedAt.toLocaleDateString() \r\n      : new Date(item.updatedAt).toLocaleDateString();\r\n    \r\n    return {\r\n      id: `vault-item-${item.id}`,\r\n      label: item.name,\r\n      type: TreeNodeType.VAULT_ITEM,\r\n      description: updatedAtStr,\r\n      tooltip: item.description || item.name,\r\n      iconPath: this.getIconPath(iconName, fallbackIcon),\r\n      contextValue: 'vaultItem',\r\n      metadata: {\r\n        itemId: item.id,\r\n        contextId: context.id,\r\n        content: item.content,\r\n        tags: item.tags\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 지라 아이템 가져오기\r\n   */\r\n  private getJiraItems(): ApeTreeItem[] {\r\n    // Jira 서비스가 없으면 Mock 데이터 반환\r\n    if (!this.jiraService) {\r\n      return [\r\n        {\r\n          id: 'jira-not-initialized',\r\n          label: 'Jira 서비스 초기화 필요',\r\n          type: TreeNodeType.JIRA_ROOT,\r\n          iconPath: this.getIconPath('jira', 'error'),\r\n          contextValue: 'jiraError',\r\n          description: '서비스가 초기화되지 않음',\r\n          tooltip: 'Jira 서비스가 초기화되지 않았습니다. 확장 설정을 확인하세요.'\r\n        }\r\n      ];\r\n    }\r\n    \r\n    try {\r\n      // 실제 Jira 데이터를 가져오려면 주석 해제하고 Mock 데이터 부분 주석 처리\r\n      // 현재는 개발 환경에서 테스트를 위해 Mock 데이터 사용\r\n      \r\n      /*\r\n      // 계정 정보 확인\r\n      const configResult = this.jiraService.getConfig();\r\n      if (!configResult.success || !configResult.data || !configResult.data.isConfigured) {\r\n        return [\r\n          {\r\n            id: 'jira-not-configured',\r\n            label: 'Jira 설정이 필요합니다',\r\n            type: TreeNodeType.JIRA_ROOT,\r\n            iconPath: this.getIconPath('jira', 'warning'),\r\n            contextValue: 'jiraNotConfigured',\r\n            description: '인증 정보 없음',\r\n            tooltip: 'Jira 연결을 위한 설정이 필요합니다. 확장 설정에서 Jira 인증 정보를 입력해주세요.'\r\n          }\r\n        ];\r\n      }\r\n      \r\n      // 지라 프로젝트 가져오기\r\n      const projectsResult = await this.jiraService.getProjects();\r\n      if (!projectsResult.success || !projectsResult.data) {\r\n        throw new Error(projectsResult.error?.message || 'Jira 프로젝트를 가져오는 데 실패했습니다');\r\n      }\r\n      \r\n      const projects = projectsResult.data;\r\n      \r\n      // 각 프로젝트별 이슈 가져오기\r\n      return projects.map(project => {\r\n        return {\r\n          id: `jira-project-${project.key}`,\r\n          label: `${project.name} (${project.key})`,\r\n          type: TreeNodeType.JIRA_PROJECT,\r\n          iconPath: this.getIconPath('jira', 'project'),\r\n          contextValue: 'jiraProject',\r\n          description: `${project.issueCount || 0}개 이슈`,\r\n          tooltip: project.description || project.name,\r\n          children: this.getJiraIssuesForProject(project.key)\r\n        };\r\n      });\r\n      */\r\n      \r\n      // Mock 데이터 (개발 환경용)\r\n      return [\r\n        {\r\n          id: 'jira-project-ape',\r\n          label: 'APE 프로젝트',\r\n          type: TreeNodeType.JIRA_PROJECT,\r\n          iconPath: this.getIconPath('jira', 'project'),\r\n          contextValue: 'jiraProject',\r\n          description: 'APE-001 외 10개 이슈',\r\n          tooltip: 'Agentic Pipeline Engine 프로젝트',\r\n          children: [\r\n            {\r\n              id: 'jira-issue-ape-001',\r\n              label: 'APE-001: 초기 설정 구현',\r\n              type: TreeNodeType.JIRA_ISSUE,\r\n              iconPath: this.getIconPath('jira', 'issue-closed'),\r\n              contextValue: 'jiraIssue',\r\n              description: '완료됨',\r\n              tooltip: '프로젝트 초기 설정 및 기본 구조 구현',\r\n              metadata: {\r\n                id: 'APE-001',\r\n                status: 'Done',\r\n                assignee: '사용자',\r\n                priority: 'High',\r\n                command: {\r\n                  name: 'jira',\r\n                  args: ['show', 'APE-001']\r\n                }\r\n              }\r\n            },\r\n            {\r\n              id: 'jira-issue-ape-002',\r\n              label: 'APE-002: 채팅 UI 개선',\r\n              type: TreeNodeType.JIRA_ISSUE,\r\n              iconPath: this.getIconPath('jira', 'issue-open'),\r\n              contextValue: 'jiraIssue',\r\n              description: '진행 중',\r\n              tooltip: '채팅 UI 개선 및 응답성 향상',\r\n              metadata: {\r\n                id: 'APE-002',\r\n                status: 'In Progress',\r\n                assignee: '사용자',\r\n                priority: 'Medium',\r\n                command: {\r\n                  name: 'jira',\r\n                  args: ['show', 'APE-002']\r\n                }\r\n              }\r\n            },\r\n            {\r\n              id: 'jira-issue-ape-003',\r\n              label: 'APE-003: 트리뷰 구현',\r\n              type: TreeNodeType.JIRA_ISSUE,\r\n              iconPath: this.getIconPath('jira', 'issues'),\r\n              contextValue: 'jiraIssue',\r\n              description: '진행 중',\r\n              tooltip: '트리뷰 구현 및 서비스 연동',\r\n              metadata: {\r\n                id: 'APE-003',\r\n                status: 'In Progress',\r\n                assignee: '사용자',\r\n                priority: 'High',\r\n                command: {\r\n                  name: 'jira',\r\n                  args: ['show', 'APE-003']\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'jira-project-int',\r\n          label: '통합 프로젝트',\r\n          type: TreeNodeType.JIRA_PROJECT,\r\n          iconPath: this.getIconPath('jira', 'project'),\r\n          contextValue: 'jiraProject',\r\n          description: 'INT-001 외 5개 이슈',\r\n          tooltip: '시스템 통합 프로젝트',\r\n          children: [\r\n            {\r\n              id: 'jira-issue-int-001',\r\n              label: 'INT-001: Git 통합',\r\n              type: TreeNodeType.JIRA_ISSUE,\r\n              iconPath: this.getIconPath('jira', 'issue-open'),\r\n              contextValue: 'jiraIssue',\r\n              description: '진행 중',\r\n              tooltip: 'Git 서비스 통합 및 자동 커밋 기능 구현',\r\n              metadata: {\r\n                id: 'INT-001',\r\n                status: 'In Progress',\r\n                assignee: '사용자',\r\n                priority: 'High',\r\n                command: {\r\n                  name: 'jira',\r\n                  args: ['show', 'INT-001']\r\n                }\r\n              }\r\n            },\r\n            {\r\n              id: 'jira-issue-int-002',\r\n              label: 'INT-002: Jira 통합',\r\n              type: TreeNodeType.JIRA_ISSUE,\r\n              iconPath: this.getIconPath('jira', 'issue-draft'),\r\n              contextValue: 'jiraIssue',\r\n              description: '계획됨',\r\n              tooltip: 'Jira 서비스 통합 및 이슈 관리 기능 구현',\r\n              metadata: {\r\n                id: 'INT-002',\r\n                status: 'Planned',\r\n                assignee: '미할당',\r\n                priority: 'Medium',\r\n                command: {\r\n                  name: 'jira',\r\n                  args: ['show', 'INT-002']\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'jira-commands',\r\n          label: 'Jira 명령어',\r\n          type: TreeNodeType.JIRA_CATEGORY,\r\n          iconPath: this.getIconPath('command-line', 'terminal'),\r\n          contextValue: 'jiraCommands',\r\n          tooltip: 'Jira 관련 명령어',\r\n          children: [\r\n            {\r\n              id: 'jira-command-create',\r\n              label: '/jira create',\r\n              type: TreeNodeType.JIRA_COMMAND,\r\n              iconPath: this.getIconPath('jira', 'add'),\r\n              contextValue: 'jiraCommand',\r\n              description: '새 이슈 생성',\r\n              tooltip: '새 Jira 이슈를 생성합니다',\r\n              metadata: {\r\n                name: 'jira',\r\n                args: ['create'],\r\n                category: 'utility'\r\n              }\r\n            },\r\n            {\r\n              id: 'jira-command-search',\r\n              label: '/jira search',\r\n              type: TreeNodeType.JIRA_COMMAND,\r\n              iconPath: this.getIconPath('jira', 'search'),\r\n              contextValue: 'jiraCommand',\r\n              description: '이슈 검색',\r\n              tooltip: 'Jira 이슈를 검색합니다',\r\n              metadata: {\r\n                name: 'jira',\r\n                args: ['search'],\r\n                category: 'utility'\r\n              }\r\n            },\r\n            {\r\n              id: 'jira-command-summary',\r\n              label: '/jira summary',\r\n              type: TreeNodeType.JIRA_COMMAND,\r\n              iconPath: this.getIconPath('jira', 'graph'),\r\n              contextValue: 'jiraCommand',\r\n              description: '프로젝트 요약',\r\n              tooltip: 'Jira 프로젝트 요약 정보를 표시합니다',\r\n              metadata: {\r\n                name: 'jira',\r\n                args: ['summary'],\r\n                category: 'utility'\r\n              }\r\n            },\r\n            {\r\n              id: 'jira-command-status',\r\n              label: '/jira status',\r\n              type: TreeNodeType.JIRA_COMMAND,\r\n              iconPath: this.getIconPath('jira', 'sync'),\r\n              contextValue: 'jiraCommand',\r\n              description: '이슈 상태 변경',\r\n              tooltip: 'Jira 이슈의 상태를 변경합니다',\r\n              metadata: {\r\n                name: 'jira',\r\n                args: ['status'],\r\n                category: 'utility'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n    } catch (error) {\r\n      console.error('Jira 아이템 가져오기 오류:', error);\r\n      return [{\r\n        id: 'jira-error',\r\n        label: 'Jira 로딩 오류',\r\n        type: TreeNodeType.JIRA_ROOT,\r\n        iconPath: this.getIconPath('jira', 'error'),\r\n        contextValue: 'jiraError',\r\n        description: `오류: ${error instanceof Error ? error.message : String(error)}`,\r\n        tooltip: '오류 내용: ' + (error instanceof Error ? error.message : String(error))\r\n      }];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 특정 프로젝트의 Jira 이슈 가져오기\r\n   * @param projectKey 프로젝트 키\r\n   */\r\n  private getJiraIssuesForProject(projectKey: string): ApeTreeItem[] {\r\n    if (!this.jiraService) {\r\n      return [];\r\n    }\r\n    \r\n    try {\r\n      /*\r\n      // 실제 구현 (주석 처리)\r\n      const searchCriteria = {\r\n        projectKey: projectKey,\r\n        maxResults: 10\r\n      };\r\n      \r\n      const searchResult = await this.jiraService.searchIssues(searchCriteria);\r\n      if (!searchResult.success || !searchResult.data) {\r\n        throw new Error(searchResult.error?.message || '이슈 검색에 실패했습니다');\r\n      }\r\n      \r\n      const issues = searchResult.data.issues;\r\n      \r\n      return issues.map(issue => {\r\n        let iconName = 'jira';\r\n        let fallbackIcon = 'issues';\r\n        \r\n        // 상태에 따른 아이콘 설정\r\n        if (issue.status === JiraIssueStatus.Done || \r\n            issue.status === JiraIssueStatus.Closed || \r\n            issue.status === JiraIssueStatus.Resolved) {\r\n          fallbackIcon = 'issue-closed';\r\n        } else if (issue.status === JiraIssueStatus.InProgress) {\r\n          fallbackIcon = 'issue-open';\r\n        } else {\r\n          fallbackIcon = 'issue-draft';\r\n        }\r\n        \r\n        return {\r\n          id: `jira-issue-${issue.key}`,\r\n          label: `${issue.key}: ${issue.summary}`,\r\n          type: TreeNodeType.JIRA_ISSUE,\r\n          iconPath: this.getIconPath(iconName, fallbackIcon),\r\n          contextValue: 'jiraIssue',\r\n          description: issue.status,\r\n          tooltip: issue.description || issue.summary,\r\n          metadata: {\r\n            id: issue.key,\r\n            status: issue.status,\r\n            assignee: issue.assignee || '미할당',\r\n            priority: issue.priority || 'Medium',\r\n            command: {\r\n              name: 'jira',\r\n              args: ['show', issue.key]\r\n            }\r\n          }\r\n        };\r\n      });\r\n      */\r\n      \r\n      // Mock 데이터 (실제 구현 전까지 사용)\r\n      return [];\r\n    } catch (error) {\r\n      console.error(`Jira 이슈 가져오기 오류 (${projectKey}):`, error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 포켓 아이템 가져오기 (Mock)\r\n   */\r\n  private getPocketItems(): ApeTreeItem[] {\r\n    return [\r\n      {\r\n        id: 'pocket-category-code',\r\n        label: '코드 샘플 [Mock]',\r\n        type: TreeNodeType.POCKET_CATEGORY,\r\n        iconPath: this.getIconPath('code-file', 'code'),\r\n        contextValue: 'pocketCategory',\r\n        description: '3개 항목',\r\n        tooltip: '유용한 코드 샘플 모음',\r\n        children: [\r\n          {\r\n            id: 'pocket-item-code-1',\r\n            label: '타입스크립트 유틸리티 함수 [Mock]',\r\n            type: TreeNodeType.POCKET_ITEM,\r\n            iconPath: this.getIconPath('typescript', 'symbol-method'),\r\n            contextValue: 'pocketItem',\r\n            description: '2023-05-01 저장됨',\r\n            tooltip: '자주 사용하는 타입스크립트 유틸리티 함수 모음',\r\n            metadata: {\r\n              id: 'code-1',\r\n              createdAt: '2023-05-01',\r\n              tags: ['typescript', 'utility']\r\n            }\r\n          },\r\n          {\r\n            id: 'pocket-item-code-2',\r\n            label: 'VS Code API 샘플 [Mock]',\r\n            type: TreeNodeType.POCKET_ITEM,\r\n            iconPath: this.getIconPath('vscode', 'symbol-method'),\r\n            contextValue: 'pocketItem',\r\n            description: '2023-05-05 저장됨',\r\n            tooltip: 'VS Code API 활용 예제 코드',\r\n            metadata: {\r\n              id: 'code-2',\r\n              createdAt: '2023-05-05',\r\n              tags: ['vscode', 'api', 'extension']\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'pocket-category-notes',\r\n        label: '프로젝트 노트 [Mock]',\r\n        type: TreeNodeType.POCKET_CATEGORY,\r\n        iconPath: this.getIconPath('markdown', 'notebook'),\r\n        contextValue: 'pocketCategory',\r\n        description: '2개 항목',\r\n        tooltip: '프로젝트 관련 메모 및 노트',\r\n        children: [\r\n          {\r\n            id: 'pocket-item-notes-1',\r\n            label: '아키텍처 설계 메모 [Mock]',\r\n            type: TreeNodeType.POCKET_ITEM,\r\n            iconPath: this.getIconPath('markdown', 'file-text'),\r\n            contextValue: 'pocketItem',\r\n            description: '2023-04-28 저장됨',\r\n            tooltip: '프로젝트 아키텍처 설계 관련 메모',\r\n            metadata: {\r\n              id: 'notes-1',\r\n              createdAt: '2023-04-28',\r\n              tags: ['architecture', 'design', 'memo']\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * SWDP 아이템 가져오기 (Mock)\r\n   */\r\n  private getSWDPItems(): ApeTreeItem[] {\r\n    return [\r\n      {\r\n        id: 'swdp-release',\r\n        label: 'Release Build',\r\n        type: TreeNodeType.SWDP_BUILD_TYPE,\r\n        iconPath: this.getIconPath('cicd', 'package'),\r\n        contextValue: 'swdpBuildType',\r\n        tooltip: 'SWDP Release Build 유형',\r\n        children: [\r\n          {\r\n            id: 'swdp-release-info',\r\n            label: 'BUILD, COVERITY, SAM, ONBOARD TESTE, DOBEE, BLACKDUCK, 등등 여기에 표기 예정입니다.',\r\n            type: TreeNodeType.SWDP_ARTIFACT,\r\n            iconPath: this.getIconPath('jenkins-ci-cd', 'info'),\r\n            contextValue: 'swdpArtifact',\r\n            tooltip: 'SWDP Release Build 정보'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'swdp-layer',\r\n        label: 'Layer Build',\r\n        type: TreeNodeType.SWDP_BUILD_TYPE,\r\n        iconPath: this.getIconPath('orchestration', 'layers'),\r\n        contextValue: 'swdpBuildType',\r\n        tooltip: 'SWDP Layer Build 유형',\r\n        children: [\r\n          {\r\n            id: 'swdp-layer-info',\r\n            label: 'BUILD, COVERITY, SAM, ONBOARD TESTE, DOBEE, BLACKDUCK, 등등 여기에 표기 예정입니다.',\r\n            type: TreeNodeType.SWDP_ARTIFACT,\r\n            iconPath: this.getIconPath('jenkins-ci-cd', 'info'),\r\n            contextValue: 'swdpArtifact',\r\n            tooltip: 'SWDP Layer Build 정보'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'swdp-local',\r\n        label: 'Local Build',\r\n        type: TreeNodeType.SWDP_BUILD_TYPE,\r\n        iconPath: this.getIconPath('docker', 'desktop-download'),\r\n        contextValue: 'swdpBuildType',\r\n        tooltip: 'SWDP Local Build 유형',\r\n        children: [\r\n          {\r\n            id: 'swdp-local-info',\r\n            label: 'BUILD, COVERITY, SAM, ONBOARD TESTE, DOBEE, BLACKDUCK, 등등 여기에 표기 예정입니다.',\r\n            type: TreeNodeType.SWDP_ARTIFACT,\r\n            iconPath: this.getIconPath('docker-container', 'info'),\r\n            contextValue: 'swdpArtifact',\r\n            tooltip: 'SWDP Local Build 정보'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * Rules 아이템 가져오기\r\n   */\r\n  private getRulesItems(): ApeTreeItem[] {\r\n    // Rules 서비스가 없으면 스텁 반환\r\n    if (!this.rulesService) {\r\n      return [{\r\n        id: 'rules-not-initialized',\r\n        label: 'Rules 서비스 초기화 필요',\r\n        type: TreeNodeType.RULES_ROOT,\r\n        iconPath: this.getIconPath('notebook', 'error'),\r\n        contextValue: 'rulesError',\r\n        description: '서비스가 초기화되지 않음',\r\n        tooltip: 'Rules 서비스가 초기화되지 않았습니다. 확장 설정을 확인하세요.'\r\n      }];\r\n    }\r\n    \r\n    try {\r\n      const activeRules = this.rulesService.getActiveRules();\r\n      const inactiveRules = this.rulesService.getAllRules().filter(rule => \r\n        !activeRules.some(activeRule => activeRule.id === rule.id)\r\n      );\r\n      \r\n      const ruleItems: ApeTreeItem[] = [];\r\n      \r\n      // 활성화된 Rules 카테고리\r\n      if (activeRules.length > 0) {\r\n        ruleItems.push({\r\n          id: 'rules-active',\r\n          label: '활성화된 Rules',\r\n          type: TreeNodeType.RULES_ACTIVE,\r\n          iconPath: this.getIconPath('notebook', 'check'),\r\n          contextValue: 'rulesActive',\r\n          tooltip: '현재 LLM 시스템 프롬프트에 적용된 Rules',\r\n          description: `${activeRules.length}개 항목`,\r\n          children: activeRules.map(rule => this.createRuleNode(rule, true))\r\n        });\r\n      }\r\n      \r\n      // 비활성화된 Rules 카테고리\r\n      if (inactiveRules.length > 0) {\r\n        ruleItems.push({\r\n          id: 'rules-inactive',\r\n          label: '비활성화된 Rules',\r\n          type: TreeNodeType.RULES_INACTIVE,\r\n          iconPath: this.getIconPath('notebook', 'circle-outline'),\r\n          contextValue: 'rulesInactive',\r\n          tooltip: '현재 비활성화되어 있는 Rules',\r\n          description: `${inactiveRules.length}개 항목`,\r\n          children: inactiveRules.map(rule => this.createRuleNode(rule, false))\r\n        });\r\n      }\r\n      \r\n      // Rules가 없는 경우\r\n      if (ruleItems.length === 0) {\r\n        ruleItems.push({\r\n          id: 'rules-empty',\r\n          label: 'Rules 없음',\r\n          type: TreeNodeType.RULES_ROOT,\r\n          iconPath: this.getIconPath('notebook', 'info'),\r\n          contextValue: 'rulesEmpty',\r\n          description: '생성된 Rules 없음',\r\n          tooltip: '우클릭 메뉴를 통해 새 Rule을 생성하세요.'\r\n        });\r\n      }\r\n      \r\n      return ruleItems;\r\n    } catch (error) {\r\n      console.error('Rules 목록 가져오기 오류:', error);\r\n      return [{\r\n        id: 'rules-error',\r\n        label: 'Rules 로딩 오류',\r\n        type: TreeNodeType.RULES_ROOT,\r\n        iconPath: this.getIconPath('notebook', 'error'),\r\n        contextValue: 'rulesError',\r\n        description: `오류: ${error instanceof Error ? error.message : String(error)}`,\r\n        tooltip: '오류 내용: ' + (error instanceof Error ? error.message : String(error))\r\n      }];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rule 노드 생성\r\n   * @param rule Rule 객체\r\n   * @param isActive 활성화 여부\r\n   */\r\n  private createRuleNode(rule: any, isActive: boolean): ApeTreeItem {\r\n    const iconName = isActive ? 'notebook' : 'notebook';\r\n    const fallbackIcon = isActive ? 'notebook-opened' : 'notebook';\r\n    \r\n    // 파일 이름만 추출\r\n    const fileName = rule.filePath.split('/').pop();\r\n    \r\n    return {\r\n      id: `rule-item-${rule.id}`,\r\n      label: rule.name,\r\n      type: TreeNodeType.RULE_ITEM,\r\n      description: fileName, // 파일 이름을 설명으로 표시\r\n      tooltip: `${rule.name} (${fileName})\\n\\n${rule.content.substring(0, 100)}${rule.content.length > 100 ? '...' : ''}`,\r\n      iconPath: this.getIconPath(iconName, fallbackIcon),\r\n      contextValue: isActive ? 'ruleActive' : 'ruleInactive',\r\n      metadata: {\r\n        id: rule.id,\r\n        filePath: rule.filePath,\r\n        isActive: isActive\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 채팅 내역 아이템 가져오기\r\n   */\r\n  private getChatHistoryItems(): ApeTreeItem[] {\r\n    try {\r\n      // 워크스페이스 루트 경로 가져오기\r\n      const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n      if (!workspaceFolder) {\r\n        return [this.createChatHistoryErrorNode('워크스페이스 폴더를 찾을 수 없습니다')];\r\n      }\r\n      \r\n      // 채팅 내역 폴더 경로\r\n      const chatHistoryDir = path.join(workspaceFolder.uri.fsPath, '.ape', 'vault', 'chat-history');\r\n      \r\n      // 폴더 존재 확인\r\n      if (!existsSync(chatHistoryDir)) {\r\n        return [this.createChatHistoryInfoNode('저장된 채팅 내역이 없습니다', '채팅 내역을 저장하려면 채팅 창에서 `/save` 명령어를 사용하세요.')];\r\n      }\r\n      \r\n      // 파일 시스템에서 메타데이터 파일 목록 가져오기\r\n      const fs = require('fs');\r\n      const metaFiles = fs.readdirSync(chatHistoryDir)\r\n        .filter((name: string) => name.endsWith('.meta.json'));\r\n      \r\n      if (metaFiles.length === 0) {\r\n        return [this.createChatHistoryInfoNode('저장된 채팅 내역이 없습니다', '채팅 내역을 저장하려면 채팅 창에서 `/save` 명령어를 사용하세요.')];\r\n      }\r\n      \r\n      // 채팅 내역 아이템 목록\r\n      const chatItems: ApeTreeItem[] = [];\r\n      \r\n      // 메타데이터 파일 처리\r\n      for (const fileName of metaFiles) {\r\n        const filePath = path.join(chatHistoryDir, fileName);\r\n        const chatId = fileName.replace('.meta.json', '');\r\n        \r\n        try {\r\n          // 메타데이터 읽기\r\n          const metadata = JSON.parse(fs.readFileSync(filePath, 'utf8'));\r\n          \r\n          // 날짜 포맷팅\r\n          const createdDate = new Date(metadata.createdAt);\r\n          const dateStr = createdDate.toLocaleDateString();\r\n          const timeStr = createdDate.toLocaleTimeString();\r\n          \r\n          // 채팅 내역 아이템 추가\r\n          chatItems.push({\r\n            id: `chat-history-${chatId}`,\r\n            label: metadata.title,\r\n            type: TreeNodeType.CHAT_HISTORY_ITEM,\r\n            description: `${dateStr} ${timeStr}`,\r\n            tooltip: `${metadata.title} (${dateStr} ${timeStr})\\n${metadata.messageCount}개 메시지`,\r\n            iconPath: this.getIconPath('chat', 'comment-discussion'),\r\n            contextValue: 'chatHistoryItem',\r\n            metadata: {\r\n              id: chatId,\r\n              title: metadata.title,\r\n              createdAt: metadata.createdAt,\r\n              updatedAt: metadata.updatedAt,\r\n              messageCount: metadata.messageCount,\r\n              command: {\r\n                name: 'show',\r\n                args: [chatId]\r\n              }\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(`채팅 내역 메타데이터 읽기 오류 (${fileName}):`, error);\r\n        }\r\n      }\r\n      \r\n      // 최신순 정렬\r\n      chatItems.sort((a, b) => {\r\n        const dateA = new Date(a.metadata.createdAt);\r\n        const dateB = new Date(b.metadata.createdAt);\r\n        return dateB.getTime() - dateA.getTime();\r\n      });\r\n      \r\n      return chatItems;\r\n    } catch (error) {\r\n      console.error('채팅 내역 아이템 가져오기 오류:', error);\r\n      return [this.createChatHistoryErrorNode(`오류: ${error instanceof Error ? error.message : String(error)}`)];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 채팅 내역 오류 노드 생성\r\n   */\r\n  private createChatHistoryErrorNode(message: string): ApeTreeItem {\r\n    return {\r\n      id: 'chat-history-error',\r\n      label: '채팅 내역 로딩 오류',\r\n      type: TreeNodeType.CHAT_HISTORY_ROOT,\r\n      iconPath: this.getIconPath('chat', 'error'),\r\n      contextValue: 'chatHistoryError',\r\n      description: message,\r\n      tooltip: message\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 채팅 내역 정보 노드 생성\r\n   */\r\n  private createChatHistoryInfoNode(label: string, tooltip: string): ApeTreeItem {\r\n    return {\r\n      id: 'chat-history-info',\r\n      label,\r\n      type: TreeNodeType.CHAT_HISTORY_ROOT,\r\n      iconPath: this.getIconPath('chat', 'info'),\r\n      contextValue: 'chatHistoryInfo',\r\n      tooltip\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 플러그인 아이템 가져오기 - Stub 처리\r\n   */\r\n  private getPluginItems(): ApeTreeItem[] {\r\n    return [\r\n      {\r\n        id: 'plugin-not-implemented',\r\n        label: '플러그인 목록 로드 중...',\r\n        type: TreeNodeType.PLUGIN_ROOT,\r\n        iconPath: this.getIconPath('plugin', 'error'),\r\n        contextValue: 'pluginStub',\r\n        description: '구현되지 않은 기능입니다',\r\n        tooltip: '이 기능은 아직 구현되지 않았습니다. TASK-W3-001의 다음 단계에서 구현될 예정입니다.'\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * 설정 값 가져오기\r\n   */\r\n  private getConfigValue(key: string): string {\r\n    const config = vscode.workspace.getConfiguration();\r\n    const value = config.get(key);\r\n    \r\n    return value !== undefined ? String(value) : '';\r\n  }\r\n  \r\n  /**\r\n   * 아이콘 경로 가져오기\r\n   * @param iconName 아이콘 이름\r\n   * @param fallbackIcon 대체 테마 아이콘\r\n   * @returns 테마 아이콘\r\n   */\r\n  private getIconPath(iconName: string, fallbackIcon: string = 'symbol-event'): vscode.ThemeIcon {\r\n    // ThemeIcon 사용\r\n    return new vscode.ThemeIcon(fallbackIcon);\r\n  }\r\n  \r\n  /**\r\n   * TreeView 새로고침\r\n   */\r\n  public refresh(): void {\r\n    this.initializeTreeData();\r\n    this._onDidChangeTreeData.fire(undefined);\r\n  }\r\n  \r\n  /**\r\n   * 트리 아이템 가져오기\r\n   */\r\n  getTreeItem(element: ApeTreeItem): vscode.TreeItem {\r\n    const treeItem = new vscode.TreeItem(\r\n      element.label,\r\n      element.children && element.children.length > 0\r\n        ? vscode.TreeItemCollapsibleState.Collapsed\r\n        : vscode.TreeItemCollapsibleState.None\r\n    );\r\n    \r\n    // 아이템 속성 설정\r\n    treeItem.description = element.description || '';\r\n    treeItem.tooltip = element.tooltip || element.description || element.label;\r\n    treeItem.contextValue = element.contextValue || '';\r\n    \r\n    // 아이콘 설정\r\n    if (element.iconPath) {\r\n      treeItem.iconPath = element.iconPath;\r\n    }\r\n    \r\n    // 명령어 설정\r\n    if (element.type === TreeNodeType.COMMAND || \r\n        element.type === TreeNodeType.GIT_COMMAND) {\r\n      // 명령어 클릭 시 실행\r\n      treeItem.command = {\r\n        command: 'ape.executeCommand',\r\n        title: '명령어 실행',\r\n        arguments: [element.metadata]\r\n      };\r\n    } else if (element.type === TreeNodeType.SETTINGS_ITEM) {\r\n      // 설정 클릭 시 설정 페이지 열기\r\n      treeItem.command = {\r\n        command: 'ape.openSettings',\r\n        title: '설정 열기',\r\n        arguments: [element.metadata?.settingKey]\r\n      };\r\n    } else if (element.type === TreeNodeType.VAULT_ITEM) {\r\n      // VAULT 아이템 클릭 시 내용 보기\r\n      treeItem.command = {\r\n        command: 'ape.vaultShowItem',\r\n        title: 'VAULT 아이템 보기',\r\n        arguments: [element.metadata]\r\n      };\r\n    } else if (element.type === TreeNodeType.CHAT_HISTORY_ITEM) {\r\n      // 채팅 내역 아이템 클릭 시 내용 보기\r\n      treeItem.command = {\r\n        command: 'ape.executeCommand',\r\n        title: '채팅 내역 보기',\r\n        arguments: [{\r\n          name: 'show',\r\n          args: [element.metadata.id]\r\n        }]\r\n      };\r\n    }\r\n    \r\n    return treeItem;\r\n  }\r\n  \r\n  /**\r\n   * 자식 노드 가져오기\r\n   */\r\n  getChildren(element?: ApeTreeItem): ApeTreeItem[] | null {\r\n    if (!element) {\r\n      return this.treeData;\r\n    }\r\n    \r\n    return element.children || [];\r\n  }\r\n  \r\n  /**\r\n   * 부모 노드 가져오기\r\n   */\r\n  getParent(): vscode.ProviderResult<ApeTreeItem> {\r\n    // 현재 버전에서는 부모 노드 추적이 필요하지 않음\r\n    return null;\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport { ServiceError } from './serviceError';\r\n\r\n/**\r\n * 시맨틱 버전 규칙에 따른 버전 종류\r\n */\r\nexport enum VersionType {\r\n  /**\r\n   * 패치 버전: 버그 수정 및 마이너 변경 (0.0.1)\r\n   */\r\n  PATCH = 'patch',\r\n  \r\n  /**\r\n   * 마이너 버전: 하위 호환성 있는 새 기능 추가 (0.1.0)\r\n   */\r\n  MINOR = 'minor',\r\n  \r\n  /**\r\n   * 메이저 버전: 주요 기능 또는 하위 호환성이 없는 변경 (1.0.0)\r\n   */\r\n  MAJOR = 'major'\r\n}\r\n\r\n/**\r\n * 버전 정보와 관련 데이터\r\n */\r\nexport interface VersionInfo {\r\n  /** 현재 버전 (x.y.z 형식) */\r\n  version: string;\r\n  \r\n  /** package.json 파일 경로 */\r\n  packageJsonPath: string;\r\n  \r\n  /** version 문자열 파싱한 숫자 배열 [major, minor, patch] */\r\n  versionParts: number[];\r\n}\r\n\r\n/**\r\n * 버전 관리 서비스\r\n * - 프로젝트 버전 관리\r\n * - 버전 업데이트 (patch, minor, major)\r\n * - Git 태그 생성\r\n */\r\nexport class VersionManager {\r\n  private _extensionContext: vscode.ExtensionContext;\r\n  \r\n  constructor(context: vscode.ExtensionContext) {\r\n    this._extensionContext = context;\r\n  }\r\n  \r\n  /**\r\n   * 현재 프로젝트 버전 정보 조회\r\n   * @returns 버전 정보\r\n   */\r\n  public async getCurrentVersion(): Promise<VersionInfo> {\r\n    try {\r\n      const packageJsonPath = this.getPackageJsonPath();\r\n      const packageJson = await this.readPackageJson(packageJsonPath);\r\n      const version = packageJson.version || '0.0.0';\r\n      const versionParts = this.parseVersion(version);\r\n      \r\n      return {\r\n        version,\r\n        packageJsonPath,\r\n        versionParts\r\n      };\r\n    } catch (error) {\r\n      throw new ServiceError('버전 정보를 읽어오는 중 오류가 발생했습니다.', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 버전 업데이트\r\n   * @param type 버전 업데이트 유형 (patch, minor, major)\r\n   * @param message 버전 업데이트 이유/메시지\r\n   * @param createGitTag Git 태그 생성 여부\r\n   * @returns 업데이트된 버전 정보\r\n   */\r\n  public async updateVersion(\r\n    type: VersionType, \r\n    message?: string, \r\n    createGitTag: boolean = false\r\n  ): Promise<VersionInfo> {\r\n    try {\r\n      // 현재 버전 정보 조회\r\n      const currentVersionInfo = await this.getCurrentVersion();\r\n      const { versionParts, packageJsonPath } = currentVersionInfo;\r\n      \r\n      // 새 버전 계산\r\n      const newVersionParts = [...versionParts];\r\n      \r\n      switch (type) {\r\n        case VersionType.PATCH:\r\n          newVersionParts[2] += 1;\r\n          break;\r\n        case VersionType.MINOR:\r\n          newVersionParts[1] += 1;\r\n          newVersionParts[2] = 0;\r\n          break;\r\n        case VersionType.MAJOR:\r\n          newVersionParts[0] += 1;\r\n          newVersionParts[1] = 0;\r\n          newVersionParts[2] = 0;\r\n          break;\r\n      }\r\n      \r\n      const newVersion = newVersionParts.join('.');\r\n      \r\n      // package.json 업데이트\r\n      await this.updatePackageJsonVersion(packageJsonPath, newVersion);\r\n      \r\n      // Git 태그 생성 (옵션)\r\n      if (createGitTag) {\r\n        await this.createGitTag(newVersion, message);\r\n      }\r\n      \r\n      // 상태바 업데이트\r\n      this.updateStatusBar(newVersion);\r\n      \r\n      // 결과 반환\r\n      return {\r\n        version: newVersion,\r\n        packageJsonPath,\r\n        versionParts: newVersionParts\r\n      };\r\n    } catch (error) {\r\n      throw new ServiceError('버전 업데이트 중 오류가 발생했습니다.', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Git 태그 생성\r\n   * @param version 버전 문자열\r\n   * @param message 태그 메시지\r\n   */\r\n  public async createGitTag(version: string, message?: string): Promise<void> {\r\n    try {\r\n      const tagName = `v${version}`;\r\n      const tagMessage = message || `Version ${version}`;\r\n      \r\n      // Git 태그 명령 실행\r\n      const terminal = vscode.window.createTerminal('APE Version Manager');\r\n      terminal.sendText(`git tag -a \"${tagName}\" -m \"${tagMessage}\"`);\r\n      terminal.sendText('git push --tags');\r\n      terminal.show();\r\n      \r\n      vscode.window.showInformationMessage(`Created Git tag: ${tagName}`);\r\n    } catch (error) {\r\n      throw new ServiceError('Git 태그 생성 중 오류가 발생했습니다.', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 버전 관리 명령어 등록\r\n   */\r\n  public registerCommands(): void {\r\n    // 내부 개발용 명령어만 등록\r\n    this._extensionContext.subscriptions.push(\r\n      vscode.commands.registerCommand('ape.internal.version.bump.patch', async () => {\r\n        await this.bumpVersion(VersionType.PATCH);\r\n      }),\r\n      \r\n      vscode.commands.registerCommand('ape.internal.version.bump.minor', async () => {\r\n        await this.bumpVersion(VersionType.MINOR);\r\n      }),\r\n      \r\n      vscode.commands.registerCommand('ape.internal.version.bump.major', async () => {\r\n        await this.bumpVersion(VersionType.MAJOR);\r\n      })\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * VS Code 상태 표시줄에 버전 표시\r\n   * @param version 버전 문자열\r\n   */\r\n  private updateStatusBar(version: string): void {\r\n    // 상태 표시줄 아이템이 이미 있는지 확인\r\n    const statusBarItem = vscode.window.createStatusBarItem(\r\n      vscode.StatusBarAlignment.Right, \r\n      100\r\n    );\r\n    \r\n    statusBarItem.text = `$(tag) APE v${version}`;\r\n    statusBarItem.tooltip = 'APE Extension Version';\r\n    statusBarItem.show();\r\n    \r\n    // Extension Context에 상태 표시줄 아이템 등록\r\n    this._extensionContext.subscriptions.push(statusBarItem);\r\n  }\r\n  \r\n  /**\r\n   * 버전 증가 작업 수행\r\n   * @param type 버전 증가 유형\r\n   */\r\n  private async bumpVersion(type: VersionType): Promise<void> {\r\n    try {\r\n      // 메시지 입력 받기\r\n      const message = await vscode.window.showInputBox({\r\n        prompt: '버전 업데이트 메시지를 입력하세요',\r\n        placeHolder: '예: 스트리밍 채팅 UI 개선'\r\n      });\r\n      \r\n      if (message === undefined) {\r\n        return; // 취소됨\r\n      }\r\n      \r\n      // Git 태그 생성 여부 확인\r\n      const createTag = await vscode.window.showQuickPick(['Yes', 'No'], {\r\n        placeHolder: 'Git 태그를 생성하시겠습니까?'\r\n      });\r\n      \r\n      if (createTag === undefined) {\r\n        return; // 취소됨\r\n      }\r\n      \r\n      // 버전 업데이트\r\n      const newVersionInfo = await this.updateVersion(\r\n        type, \r\n        message, \r\n        createTag === 'Yes'\r\n      );\r\n      \r\n      vscode.window.showInformationMessage(\r\n        `버전이 ${newVersionInfo.version}(으)로 업데이트되었습니다.`\r\n      );\r\n    } catch (error) {\r\n      vscode.window.showErrorMessage(`버전 업데이트 실패: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * package.json 경로 조회\r\n   */\r\n  private getPackageJsonPath(): string {\r\n    return path.join(this._extensionContext.extensionPath, 'package.json');\r\n  }\r\n  \r\n  /**\r\n   * package.json 파일 읽기\r\n   * @param filePath package.json 파일 경로\r\n   */\r\n  private async readPackageJson(filePath: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fs.readFile(filePath, 'utf8', (err, data) => {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          const packageJson = JSON.parse(data);\r\n          resolve(packageJson);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * package.json 버전 업데이트\r\n   * @param filePath package.json 파일 경로\r\n   * @param newVersion 새 버전 문자열\r\n   */\r\n  private async updatePackageJsonVersion(filePath: string, newVersion: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      fs.readFile(filePath, 'utf8', (err, data) => {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          const packageJson = JSON.parse(data);\r\n          packageJson.version = newVersion;\r\n          \r\n          const updatedContent = JSON.stringify(packageJson, null, 2);\r\n          \r\n          fs.writeFile(filePath, updatedContent, 'utf8', (writeErr) => {\r\n            if (writeErr) {\r\n              reject(writeErr);\r\n              return;\r\n            }\r\n            \r\n            resolve();\r\n          });\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 버전 문자열 파싱\r\n   * @param version 버전 문자열 (x.y.z 형식)\r\n   * @returns [major, minor, patch] 숫자 배열\r\n   */\r\n  private parseVersion(version: string): number[] {\r\n    const parts = version.split('.').map(part => parseInt(part, 10));\r\n    \r\n    // 배열이 3개 요소를 갖도록 보장\r\n    while (parts.length < 3) {\r\n      parts.push(0);\r\n    }\r\n    \r\n    return parts;\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { LLMModel } from '../../types/chat';\r\n\r\n/**\r\n * 모델 변경 이벤트 인터페이스\r\n */\r\nexport interface ModelChangeEvent {\r\n  oldModel: string;\r\n  newModel: string;\r\n}\r\n\r\n/**\r\n * 모델 관리 서비스\r\n * LLM 모델 설정, 검색 및 이벤트 관리를 담당합니다.\r\n */\r\nexport class ModelManager implements vscode.Disposable {\r\n  // 현재 활성 모델\r\n  private _activeModel: LLMModel = LLMModel.GPT_4_1_MINI;\r\n  \r\n  // 설정 업데이트 중인지 여부를 추적하는 플래그\r\n  private _isUpdatingConfig: boolean = false;\r\n  \r\n  // 모델 변경 이벤트\r\n  private _onDidChangeModel = new vscode.EventEmitter<ModelChangeEvent>();\r\n  public readonly onDidChangeModel = this._onDidChangeModel.event;\r\n  \r\n  // 설정 변경 감지를 위한 구독\r\n  private _configListener: vscode.Disposable;\r\n  \r\n  /**\r\n   * 생성자\r\n   * @param _context VSCode 확장 컨텍스트\r\n   */\r\n  constructor(private readonly _context: vscode.ExtensionContext) {\r\n    // 초기 설정 로드\r\n    this._loadConfiguration();\r\n    \r\n    // 설정 변경 이벤트 처리\r\n    this._configListener = vscode.workspace.onDidChangeConfiguration(event => {\r\n      if (event.affectsConfiguration('ape.llm.defaultModel') && !this._isUpdatingConfig) {\r\n        this._loadConfiguration();\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 설정에서 모델 정보 로드\r\n   */\r\n  private _loadConfiguration(): void {\r\n    try {\r\n      const config = vscode.workspace.getConfiguration('ape.llm');\r\n      const configModel = config.get<string>('defaultModel', LLMModel.GPT_4_1_MINI);\r\n      \r\n      // 유효한 모델인지 확인\r\n      if (this._isValidModel(configModel)) {\r\n        // 모델이 변경된 경우에만 이벤트 발생\r\n        if (this._activeModel !== configModel) {\r\n          const oldModel = this._activeModel;\r\n          this._activeModel = configModel as LLMModel;\r\n          \r\n          // 모델 변경 이벤트 발생\r\n          this._onDidChangeModel.fire({\r\n            oldModel,\r\n            newModel: this._activeModel\r\n          });\r\n        }\r\n      } else {\r\n        console.warn(`유효하지 않은 모델: ${configModel}, 기본 모델 사용: ${LLMModel.GPT_4_1_MINI}`);\r\n        \r\n        // 활성 모델이 이미 기본 모델이 아닌 경우에만 업데이트\r\n        if (this._activeModel !== LLMModel.GPT_4_1_MINI) {\r\n          const oldModel = this._activeModel;\r\n          this._activeModel = LLMModel.GPT_4_1_MINI;\r\n          \r\n          // 설정 업데이트 플래그 설정\r\n          this._isUpdatingConfig = true;\r\n          \r\n          // 설정 업데이트\r\n          Promise.resolve(config.update('defaultModel', LLMModel.GPT_4_1_MINI, vscode.ConfigurationTarget.Global))\r\n            .then(() => {\r\n              // 모델 변경 이벤트 발생\r\n              this._onDidChangeModel.fire({\r\n                oldModel,\r\n                newModel: LLMModel.GPT_4_1_MINI\r\n              });\r\n              console.log(`기본 모델로 설정 업데이트됨: ${LLMModel.GPT_4_1_MINI}`);\r\n            })\r\n            .then(undefined, (err: Error) => {\r\n              console.error('모델 설정 업데이트 실패:', err);\r\n            })\r\n            .finally(() => {\r\n              // 설정 업데이트 플래그 해제 (지연 설정)\r\n              setTimeout(() => {\r\n                this._isUpdatingConfig = false;\r\n              }, 100);\r\n            });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('모델 설정 로드 중 오류:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모델 ID가 유효한지 확인\r\n   * @param modelId 확인할 모델 ID\r\n   * @returns 유효한 모델인지 여부\r\n   */\r\n  private _isValidModel(modelId: string): boolean {\r\n    // 표준 모델 확인\r\n    const isStandardModel = Object.values(LLMModel).includes(modelId as LLMModel);\r\n    \r\n    // 테스트 모델 확인\r\n    const testModels = ['NARRNAS', 'LLAMA4-MAVERICK', 'LLAMA4-SCOUT'];\r\n    const isTestModel = testModels.includes(modelId);\r\n    \r\n    return isStandardModel || isTestModel;\r\n  }\r\n  \r\n  /**\r\n   * 현재 활성 모델 가져오기\r\n   * @returns 현재 활성 모델\r\n   */\r\n  public getActiveModel(): LLMModel {\r\n    return this._activeModel;\r\n  }\r\n  \r\n  /**\r\n   * 활성 모델 변경\r\n   * @param model 사용할 새 모델\r\n   * @returns 성공 여부를 나타내는 Promise\r\n   */\r\n  public async setActiveModel(model: LLMModel): Promise<boolean> {\r\n    // 현재 모델과 동일하거나 이미 설정 업데이트 중이면 무시\r\n    if (this._activeModel === model || this._isUpdatingConfig) {\r\n      return false;\r\n    }\r\n    \r\n    // 유효한 모델인지 확인\r\n    if (!this._isValidModel(model)) {\r\n      console.warn(`유효하지 않은 모델: ${model}, 현재 모델 유지: ${this._activeModel}`);\r\n      return false;\r\n    }\r\n    \r\n    try {\r\n      // 설정 업데이트 플래그 설정\r\n      this._isUpdatingConfig = true;\r\n      \r\n      // 이전 모델 저장\r\n      const oldModel = this._activeModel;\r\n      \r\n      // 활성 모델 업데이트\r\n      this._activeModel = model;\r\n      \r\n      // 설정에 변경 사항 저장\r\n      const config = vscode.workspace.getConfiguration('ape.llm');\r\n      await config.update('defaultModel', model, vscode.ConfigurationTarget.Global);\r\n      \r\n      // 모델 변경 이벤트 발생\r\n      this._onDidChangeModel.fire({\r\n        oldModel,\r\n        newModel: model\r\n      });\r\n      \r\n      console.log(`모델이 변경됨: ${oldModel} -> ${model}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('모델 설정 업데이트 실패:', error);\r\n      return false;\r\n    } finally {\r\n      // 설정 업데이트 플래그 해제 (지연 설정)\r\n      setTimeout(() => {\r\n        this._isUpdatingConfig = false;\r\n      }, 100);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모든 사용 가능한 모델 가져오기\r\n   * @returns 사용 가능한 모델 배열\r\n   */\r\n  public getAvailableModels(): LLMModel[] {\r\n    try {\r\n      // 설정에 정의된 모델 목록 확인\r\n      const config = vscode.workspace.getConfiguration('ape.llm');\r\n      // inspect 결과가 다양한 형태일 수 있으므로 안전하게 처리\r\n      const inspection = config.inspect('defaultModel');\r\n      const configModels = inspection && typeof inspection === 'object' ? \r\n        (inspection as any).properties?.enum : undefined;\r\n      \r\n      // 설정에 정의된 모델 배열이 있으면 사용\r\n      if (configModels && Array.isArray(configModels)) {\r\n        return configModels as LLMModel[];\r\n      }\r\n      \r\n      // 설정에서 가져올 수 없으면 기본 정의 사용\r\n      const standardModels = Object.values(LLMModel);\r\n      \r\n      // 내부 테스트 모델 추가 (package.json에 정의되어 있어야 함)\r\n      const testModels = ['NARRNAS', 'LLAMA4-MAVERICK', 'LLAMA4-SCOUT'] as any[];\r\n      \r\n      return [...standardModels, ...testModels];\r\n    } catch (error) {\r\n      // 오류 발생 시 기본 모델 목록만 반환\r\n      console.error('사용 가능한 모델 가져오기 오류:', error);\r\n      return Object.values(LLMModel);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모델 선택 명령어 등록 - 명령어는 CommandManager를 사용합니다\r\n   * @deprecated 이 메서드는 더 이상 사용되지 않으며, 명령어 등록은 CommandManager에서 담당합니다.\r\n   * \r\n   * 참고: 이 메서드를 호출하면 아무 동작도 하지 않습니다.\r\n   * extension.ts에서는 commandManager.registerCommands()만 호출합니다.\r\n   */\r\n  public registerCommands(): void {\r\n    console.log('경고: ModelManager.registerCommands()는 비활성화되었습니다. CommandManager를 사용하세요.');\r\n    // 아무 동작도 하지 않음\r\n    \r\n    /* 원래 코드 (참조용)\r\n    // 이 메서드의 원래 구현은 CommandManager로 이동되었습니다.\r\n    /*\r\n    // selectModel 명령 등록\r\n    const selectModelDisposable = vscode.commands.registerCommand('ape.selectModel', async () => {\r\n      try {\r\n        // 현재 활성 모델\r\n        const activeModel = this.getActiveModel();\r\n        \r\n        // 사용 가능한 모델 목록\r\n        const availableModels = this.getAvailableModels();\r\n        \r\n        // 모델 선택 항목 생성\r\n        const modelItems = availableModels.map(model => ({\r\n          label: this.getModelDisplayName(model),\r\n          description: model === activeModel ? '(활성)' : '',\r\n          detail: this.getModelDescription(model),\r\n          model: model\r\n        }));\r\n        \r\n        // 사용자에게 모델 선택 표시\r\n        const selectedModel = await vscode.window.showQuickPick(modelItems, {\r\n          placeHolder: '사용할 모델 선택',\r\n          title: 'APE 모델 선택'\r\n        });\r\n        \r\n        // 모델 선택됨\r\n        if (selectedModel) {\r\n          // 선택한 모델로 전환\r\n          const success = await this.setActiveModel(selectedModel.model);\r\n          \r\n          // 성공 메시지 표시\r\n          if (success) {\r\n            vscode.window.showInformationMessage(`${selectedModel.label} 모델로 전환했습니다`);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('모델 선택 실행 중 오류:', error);\r\n        vscode.window.showErrorMessage(`모델 선택 오류: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    });\r\n    \r\n    // switchModel 명령 등록\r\n    const switchModelDisposable = vscode.commands.registerCommand('ape.switchModel', async (modelName: string) => {\r\n      try {\r\n        // 모델 전환\r\n        const success = await this.setActiveModel(modelName as LLMModel);\r\n        \r\n        // 성공 메시지 표시\r\n        if (success) {\r\n          vscode.window.showInformationMessage(`${this.getModelDisplayName(modelName)} 모델로 전환했습니다`);\r\n        }\r\n      } catch (error) {\r\n        console.error('모델 전환 실행 중 오류:', error);\r\n        vscode.window.showErrorMessage(`모델 전환 오류: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    });\r\n    \r\n    // 컨텍스트 구독에 명령 추가\r\n    this._context.subscriptions.push(selectModelDisposable, switchModelDisposable);\r\n    */\r\n  }\r\n  \r\n  /**\r\n   * 모델 ID를 표시 이름으로 변환\r\n   * @param modelId 모델 ID\r\n   * @returns 사용자 친화적인 모델 표시 이름\r\n   */\r\n  public getModelDisplayName(modelId: string): string {\r\n    // 모델 ID를 표시 이름으로 변환\r\n    switch(modelId) {\r\n      case 'openai/gpt-4.1-mini':\r\n        return 'GPT-4.1 Mini';\r\n      case 'anthropic/claude-3-haiku-20240307':\r\n        return 'Claude 3 Haiku';\r\n      case 'anthropic/claude-3-sonnet-20240229':\r\n        return 'Claude 3 Sonnet';\r\n      case 'perplexity/sonar-small-online':\r\n        return 'Perplexity Sonar';\r\n      case 'mistralai/mistral-large-latest':\r\n        return 'Mistral Large';\r\n      case 'google/gemma-7b-it':\r\n        return 'Gemma 7B';\r\n      case 'NARRNAS':\r\n        return 'NARRNAS';\r\n      case 'LLAMA4-MAVERICK':\r\n        return 'Llama 4 Maverick';\r\n      case 'LLAMA4-SCOUT':\r\n        return 'Llama 4 Scout';\r\n      default: {\r\n        // 'provider/model-name' 형식에서 이름 추출\r\n        const parts = modelId.split('/');\r\n        if (parts.length > 1) {\r\n          // 더 읽기 쉬운 형식으로 모델 이름 변환\r\n          const modelName = parts[1].replace(/-/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\r\n          return modelName;\r\n        }\r\n        return modelId;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모델에 대한 설명 가져오기\r\n   * @param model 모델 이름\r\n   * @returns 모델 설명\r\n   */\r\n  public getModelDescription(model: string): string {\r\n    switch (model) {\r\n      case 'openai/gpt-4.1-mini':\r\n        return '균형 잡힌 성능과 속도 (기본 모델)';\r\n      case 'anthropic/claude-3-haiku-20240307':\r\n        return '빠른 응답이 필요한 작업에 최적화';\r\n      case 'anthropic/claude-3-sonnet-20240229':\r\n        return '높은 품질과 효율적인 성능의 균형';\r\n      case 'anthropic/claude-3-opus-20240229':\r\n        return '최고 수준의 추론 및 복잡한 작업 처리';\r\n      case 'google/gemini-pro':\r\n        return 'Google의 고급 멀티모달 모델';\r\n      case 'google/gemma-7b-it':\r\n        return '경량 오픈소스 모델, 낮은 지연 시간';\r\n      case 'NARRNAS':\r\n        return '범용 모델 (내부 테스트용)';\r\n      case 'LLAMA4-MAVERICK':\r\n        return '코드 생성 및 디버깅 특화 (내부 테스트용)';\r\n      case 'LLAMA4-SCOUT':\r\n        return '코드 분석 및 이해 최적화 (내부 테스트용)';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    // 이벤트 핸들러 해제\r\n    this._onDidChangeModel.dispose();\r\n    \r\n    // 설정 변경 리스너 해제\r\n    this._configListener.dispose();\r\n  }\r\n}","/**\r\n * 코드 서비스\r\n * \r\n * 코드 블록 UI 및 상호 작용 기능, 코드 삽입 기능을 통합 제공\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\n/**\r\n * 코드 삽입 옵션 인터페이스\r\n */\r\nexport interface CodeInsertionOptions {\r\n  code: string;\r\n  language: string;\r\n  replaceSelection?: boolean;\r\n  insertAtCursor?: boolean;\r\n  createNewFile?: boolean;\r\n  filename?: string;\r\n}\r\n\r\n/**\r\n * 통합된 코드 서비스 클래스\r\n */\r\nexport class CodeService {\r\n  private static codeBlockCounter = 0;\r\n  \r\n  /**\r\n   * 웹뷰에서 메시지 핸들러 등록\r\n   * @param context 확장 컨텍스트\r\n   * @param webview 웹뷰\r\n   */\r\n  public static async registerHandlers(context: vscode.ExtensionContext, webview: vscode.Webview): Promise<void> {\r\n    console.log('CodeService.registerHandlers called');\r\n    \r\n    // 코드 블록 관련 명령 등록 (비동기 함수로 변경됨)\r\n    await this.registerCommands(context);\r\n    \r\n    // 웹뷰 메시지 핸들러 등록\r\n    webview.onDidReceiveMessage(\r\n      async (message) => {\r\n        switch (message.type) {\r\n          case 'copyCode': {\r\n            await this.handleCopyCode(message.code);\r\n            break;\r\n          }\r\n            \r\n          case 'insertCodeToEditor': {\r\n            await this.handleInsertCode(message);\r\n            break;\r\n          }\r\n            \r\n          case 'createFileWithCode': {\r\n            await this.handleCreateFile(message);\r\n            break;\r\n          }\r\n            \r\n          case 'attachFile': {\r\n            await this.handleAttachFile(webview);\r\n            break;\r\n          }\r\n        }\r\n      },\r\n      undefined,\r\n      context.subscriptions\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * 코드 복사 처리\r\n   * @param code 복사할 코드\r\n   */\r\n  private static async handleCopyCode(code: string): Promise<void> {\r\n    try {\r\n      await vscode.env.clipboard.writeText(code);\r\n      vscode.window.showInformationMessage('코드가 클립보드에 복사되었습니다.');\r\n    } catch (error) {\r\n      console.error('코드 복사 중 오류 발생:', error);\r\n      vscode.window.showErrorMessage('코드 복사 중 오류가 발생했습니다.');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 코드 삽입 처리\r\n   * @param message 메시지 객체\r\n   */\r\n  private static async handleInsertCode(message: any): Promise<void> {\r\n    try {\r\n      const options: CodeInsertionOptions = {\r\n        code: message.code,\r\n        language: message.language || 'plaintext',\r\n        insertAtCursor: message.insertAtCursor,\r\n        replaceSelection: message.replaceSelection,\r\n        createNewFile: message.createNewFile,\r\n        filename: message.filename\r\n      };\r\n      \r\n      const result = await vscode.commands.executeCommand('ape.insertCodeToEditor', options);\r\n      \r\n      if (!result) {\r\n        vscode.window.showErrorMessage('코드를 에디터에 삽입하지 못했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('코드 삽입 중 오류 발생:', error);\r\n      vscode.window.showErrorMessage('코드 삽입 중 오류가 발생했습니다.');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 새 파일 생성 처리\r\n   * @param message 메시지 객체\r\n   */\r\n  private static async handleCreateFile(message: any): Promise<void> {\r\n    try {\r\n      const options: CodeInsertionOptions = {\r\n        code: message.code,\r\n        language: message.language || 'plaintext',\r\n        createNewFile: true,\r\n        filename: message.filename\r\n      };\r\n      \r\n      const result = await vscode.commands.executeCommand('ape.createNewFileWithCode', options);\r\n      \r\n      if (!result) {\r\n        vscode.window.showErrorMessage('새 파일을 생성하지 못했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('파일 생성 중 오류 발생:', error);\r\n      vscode.window.showErrorMessage('파일 생성 중 오류가 발생했습니다.');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 파일 첨부 처리\r\n   * @param webview 웹뷰\r\n   */\r\n  private static async handleAttachFile(webview: vscode.Webview): Promise<void> {\r\n    try {\r\n      // VSCode의 파일 선택 대화상자 표시\r\n      const fileUris = await vscode.window.showOpenDialog({\r\n        canSelectFiles: true,\r\n        canSelectFolders: false,\r\n        canSelectMany: false,\r\n        openLabel: '첨부',\r\n        filters: {\r\n          'All Files': ['*']\r\n        }\r\n      });\r\n\r\n      if (!fileUris || fileUris.length === 0) {\r\n        return; // 사용자가 취소함\r\n      }\r\n\r\n      const fileUri = fileUris[0];\r\n      const fileName = path.basename(fileUri.fsPath);\r\n      const fileExtension = path.extname(fileUri.fsPath).toLowerCase();\r\n      let fileContent = '';\r\n\r\n      // 파일 크기 확인 (큰 파일은 내용 로드하지 않음)\r\n      const stat = await vscode.workspace.fs.stat(fileUri);\r\n      const fileSize = stat.size;\r\n      const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\r\n\r\n      // 작은 파일인 경우 내용 로드\r\n      if (fileSize <= MAX_FILE_SIZE) {\r\n        try {\r\n          const buffer = await vscode.workspace.fs.readFile(fileUri);\r\n          fileContent = new TextDecoder().decode(buffer);\r\n        } catch (error) {\r\n          console.log('텍스트 파일이 아닌 것으로 추정됩니다:', error);\r\n          // 텍스트가 아닌 파일은 내용 로드하지 않음\r\n        }\r\n      }\r\n\r\n      // 상대 경로 구하기\r\n      let relativePath = fileUri.fsPath;\r\n      if (vscode.workspace.workspaceFolders?.length) {\r\n        const workspaceFolder = vscode.workspace.workspaceFolders[0];\r\n        const workspacePath = workspaceFolder.uri.fsPath;\r\n        if (fileUri.fsPath.startsWith(workspacePath)) {\r\n          relativePath = fileUri.fsPath.substring(workspacePath.length + 1);\r\n        }\r\n      }\r\n\r\n      // 파일 정보 웹뷰로 전송\r\n      webview.postMessage({\r\n        type: 'fileAttached',\r\n        file: {\r\n          path: fileUri.fsPath,\r\n          relativePath: relativePath,\r\n          name: fileName,\r\n          type: fileExtension,\r\n          size: fileSize,\r\n          content: fileContent,\r\n          hasContent: fileContent.length > 0\r\n        }\r\n      });\r\n\r\n      vscode.window.showInformationMessage(`${fileName} 파일이 첨부되었습니다.`);\r\n    } catch (error) {\r\n      console.error('파일 첨부 중 오류 발생:', error);\r\n      vscode.window.showErrorMessage(`파일 첨부 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 코드 블록 CSS 스타일 로드\r\n   * @param webview 웹뷰\r\n   * @param context 확장 컨텍스트\r\n   * @returns CSS URI\r\n   */\r\n  public static getCodeBlockStyleUri(webview: vscode.Webview, context: vscode.ExtensionContext): vscode.Uri {\r\n    return webview.asWebviewUri(\r\n      vscode.Uri.joinPath(context.extensionUri, 'media', 'code-block.css')\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * 코드 블록 스크립트 생성\r\n   * @returns JavaScript 코드\r\n   */\r\n  public static getCodeBlockScript(): string {\r\n    return `\r\n    // 코드 블록 관련 기능\r\n    (function() {\r\n      document.addEventListener('click', function(event) {\r\n        const target = event.target;\r\n        \r\n        // 복사 버튼 클릭 (버튼 또는 버튼 내부 아이콘)\r\n        const copyButton = target.closest('.code-action-button.copy-button');\r\n        if (copyButton) {\r\n          const codeId = copyButton.getAttribute('data-code-id');\r\n          const codeElement = document.getElementById('code-' + codeId);\r\n          \r\n          if (codeElement) {\r\n            const code = codeElement.textContent;\r\n            \r\n            // VS Code에 복사 요청 전송\r\n            vscode.postMessage({\r\n              type: 'copyCode',\r\n              code: code,\r\n              language: codeElement.className.replace('language-', '')\r\n            });\r\n            \r\n            // 복사 성공 시각적 피드백\r\n            const codeBlock = copyButton.closest('.code-block-container');\r\n            codeBlock.classList.add('success-animation');\r\n            setTimeout(() => {\r\n              codeBlock.classList.remove('success-animation');\r\n            }, 1000);\r\n          }\r\n          \r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        \r\n        // 에디터에 삽입 버튼 클릭\r\n        const insertButton = target.closest('.code-action-button.insert-code-button');\r\n        if (insertButton) {\r\n          const codeId = insertButton.getAttribute('data-code-id');\r\n          const codeElement = document.getElementById('code-' + codeId);\r\n          \r\n          if (codeElement) {\r\n            const code = codeElement.textContent;\r\n            const language = codeElement.className.replace('language-', '');\r\n            \r\n            // VS Code에 삽입 요청 전송\r\n            vscode.postMessage({\r\n              type: 'insertCodeToEditor',\r\n              code: code,\r\n              language: language,\r\n              insertAtCursor: true\r\n            });\r\n          }\r\n          \r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        \r\n        // 새 파일 생성 버튼 클릭\r\n        const newFileButton = target.closest('.code-action-button.new-file-button');\r\n        if (newFileButton) {\r\n          const codeId = newFileButton.getAttribute('data-code-id');\r\n          const codeElement = document.getElementById('code-' + codeId);\r\n          \r\n          if (codeElement) {\r\n            const code = codeElement.textContent;\r\n            const language = codeElement.className.replace('language-', '');\r\n            \r\n            // VS Code에 새 파일 생성 요청 전송\r\n            vscode.postMessage({\r\n              type: 'createFileWithCode',\r\n              code: code,\r\n              language: language\r\n            });\r\n          }\r\n          \r\n          event.preventDefault();\r\n          return;\r\n        }\r\n      });\r\n      \r\n      // 스트리밍 중인 코드 블록 표시\r\n      function markStreamingCodeBlock(id, isStreaming) {\r\n        const codeBlock = document.getElementById('code-' + id)?.closest('.code-block-container');\r\n        if (codeBlock) {\r\n          if (isStreaming) {\r\n            codeBlock.classList.add('streaming-code-block');\r\n          } else {\r\n            codeBlock.classList.remove('streaming-code-block');\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 스트리밍 시작/종료 이벤트 리스닝\r\n      window.addEventListener('message', (event) => {\r\n        const message = event.data;\r\n        if (message.type === 'streamingCodeStart') {\r\n          markStreamingCodeBlock(message.codeId, true);\r\n        } \r\n        else if (message.type === 'streamingCodeEnd') {\r\n          markStreamingCodeBlock(message.codeId, false);\r\n        }\r\n      });\r\n    })();\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * 코드 블록 템플릿 가져오기\r\n   */\r\n  public static async getCodeBlockTemplate(): Promise<string> {\r\n    const extensionPath = vscode.extensions.getExtension('ape.ape-extension')?.extensionPath;\r\n    \r\n    if (!extensionPath) {\r\n      console.error('확장 프로그램 경로를 찾을 수 없습니다.');\r\n      return this.getDefaultCodeBlockTemplate();\r\n    }\r\n    \r\n    const templatePath = path.join(extensionPath, 'src', 'data', 'codeBlockTemplate.html');\r\n    \r\n    try {\r\n      return await fs.promises.readFile(templatePath, 'utf-8');\r\n    } catch (error) {\r\n      console.error('코드 블록 템플릿을 로드할 수 없습니다:', error);\r\n      return this.getDefaultCodeBlockTemplate();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 기본 코드 블록 템플릿 반환\r\n   */\r\n  private static getDefaultCodeBlockTemplate(): string {\r\n    return '<div class=\"code-block-container code-block-popup\">\\n' +\r\n    '  <div class=\"code-block-header\">\\n' +\r\n    '    <span class=\"code-block-language language-${language}\">${language}</span>\\n' +\r\n    '    <div class=\"code-block-actions\">\\n' +\r\n    '      <button class=\"code-action-button copy-button\" data-code-id=\"${codeId}\" title=\"복사\">\\n' +\r\n    '        <i class=\"codicon codicon-copy\"></i>\\n' +\r\n    '        <span class=\"tooltip\">클립보드에 복사</span>\\n' +\r\n    '      </button>\\n' +\r\n    '      <button class=\"code-action-button insert-code-button\" data-code-id=\"${codeId}\" title=\"에디터에 삽입\">\\n' +\r\n    '        <i class=\"codicon codicon-arrow-small-right\"></i>\\n' +\r\n    '        <span class=\"tooltip\">현재 파일에 복사</span>\\n' +\r\n    '      </button>\\n' +\r\n    '      <button class=\"code-action-button new-file-button\" data-code-id=\"${codeId}\" title=\"새 파일로 생성\">\\n' +\r\n    '        <i class=\"codicon codicon-new-file\"></i>\\n' +\r\n    '        <span class=\"tooltip\">새 파일로 생성</span>\\n' +\r\n    '      </button>\\n' +\r\n    '    </div>\\n' +\r\n    '  </div>\\n' +\r\n    '  <div class=\"code-content ${showLineNumbers ? \\'with-line-numbers\\' : \\'\\'}\">\\n' +\r\n    '    ${showLineNumbers ? \\'<div class=\"line-numbers\">${lineNumbers}</div>\\' : \\'\\'}\\n' +\r\n    '    <div class=\"code-area\">\\n' +\r\n    '      <code class=\"language-${language}\" id=\"code-${codeId}\">${codeContent}</code>\\n' +\r\n    '    </div>\\n' +\r\n    '  </div>\\n' +\r\n    '</div>';\r\n  }\r\n\r\n  /**\r\n   * 코드를 현재 열려있는 파일에 삽입\r\n   * @param options 코드 삽입 옵션\r\n   * @returns 성공 여부\r\n   */\r\n  public static async insertCodeToEditor(options: CodeInsertionOptions): Promise<boolean> {\r\n    try {\r\n      const { code, replaceSelection, insertAtCursor, createNewFile, filename } = options;\r\n      \r\n      // 새 파일 생성 옵션이 있는 경우\r\n      if (createNewFile) {\r\n        return await this.createNewFileWithCode(code, options.language, filename);\r\n      }\r\n      \r\n      // 현재 활성화된 에디터 가져오기\r\n      const editor = vscode.window.activeTextEditor;\r\n      if (!editor) {\r\n        // 활성화된 에디터가 없는 경우, 새 파일 생성 제안\r\n        const createNewFile = await vscode.window.showInformationMessage(\r\n          '열린 편집기가 없습니다. 새 파일을 생성할까요?',\r\n          '새 파일 생성',\r\n          '취소'\r\n        );\r\n        \r\n        if (createNewFile === '새 파일 생성') {\r\n          return await this.createNewFileWithCode(code, options.language);\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      \r\n      // 현재 선택 영역 가져오기\r\n      const selection = editor.selection;\r\n      \r\n      // 에디터에 코드 삽입\r\n      await editor.edit(editBuilder => {\r\n        if (replaceSelection && !selection.isEmpty) {\r\n          // 선택 영역 대체\r\n          editBuilder.replace(selection, code);\r\n        } else if (insertAtCursor) {\r\n          // 커서 위치에 삽입\r\n          editBuilder.insert(selection.active, code);\r\n        } else {\r\n          // 선택 영역이 없는 경우 커서 위치에 삽입\r\n          editBuilder.insert(selection.active, code);\r\n        }\r\n      });\r\n      \r\n      // 삽입된 코드 포맷팅 (언어에 따라 다를 수 있음)\r\n      try {\r\n        await vscode.commands.executeCommand('editor.action.formatDocument');\r\n      } catch (error) {\r\n        console.log('코드 포맷팅 중 오류 발생:', error);\r\n        // 포맷팅 실패는 무시 (모든 언어가 포맷터를 지원하지는 않음)\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('코드 삽입 중 오류 발생:', error);\r\n      vscode.window.showErrorMessage(`코드 삽입 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 코드로 새 파일 생성\r\n   * @param code 코드 내용\r\n   * @param language 언어\r\n   * @param suggestedFilename 제안 파일명\r\n   * @returns 성공 여부\r\n   */\r\n  private static async createNewFileWithCode(code: string, language: string, suggestedFilename?: string): Promise<boolean> {\r\n    try {\r\n      // 파일 확장자 추론\r\n      const extension = this.getFileExtensionForLanguage(language);\r\n      const filename = suggestedFilename || `new_file${extension}`;\r\n      \r\n      // 새 파일 생성\r\n      const document = await vscode.workspace.openTextDocument({\r\n        language: language,\r\n        content: code\r\n      });\r\n      \r\n      await vscode.window.showTextDocument(document);\r\n      \r\n      // 파일을 실제로 저장할지 물어보기\r\n      const saveFile = await vscode.window.showInformationMessage(\r\n        '새 파일이 생성되었습니다. 저장하시겠습니까?',\r\n        '저장',\r\n        '나중에'\r\n      );\r\n      \r\n      if (saveFile === '저장') {\r\n        if (document.isDirty) {\r\n          const uri = await vscode.window.showSaveDialog({\r\n            defaultUri: vscode.Uri.file(filename),\r\n            filters: {\r\n              '모든 파일': ['*']\r\n            }\r\n          });\r\n          \r\n          if (uri) {\r\n            await vscode.workspace.fs.writeFile(uri, Buffer.from(code));\r\n            vscode.window.showInformationMessage(`파일이 저장되었습니다: ${uri.fsPath}`);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('새 파일 생성 중 오류 발생:', error);\r\n      vscode.window.showErrorMessage(`새 파일 생성 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 언어 ID로 파일 확장자 추론\r\n   * @param language 언어 ID\r\n   * @returns 파일 확장자\r\n   */\r\n  private static getFileExtensionForLanguage(language: string): string {\r\n    const languageToExtension: Record<string, string> = {\r\n      'typescript': '.ts',\r\n      'javascript': '.js',\r\n      'python': '.py',\r\n      'java': '.java',\r\n      'csharp': '.cs',\r\n      'c': '.c',\r\n      'cpp': '.cpp',\r\n      'go': '.go',\r\n      'rust': '.rs',\r\n      'php': '.php',\r\n      'ruby': '.rb',\r\n      'html': '.html',\r\n      'css': '.css',\r\n      'json': '.json',\r\n      'markdown': '.md',\r\n      'plaintext': '.txt',\r\n      'xml': '.xml',\r\n      'yaml': '.yml',\r\n      'shell': '.sh',\r\n      'bash': '.sh',\r\n      'powershell': '.ps1',\r\n      'sql': '.sql'\r\n    };\r\n    \r\n    return languageToExtension[language] || '.txt';\r\n  }\r\n  \r\n  /**\r\n   * 코드 삽입 전 위치 선택 대화상자 표시\r\n   * @returns 삽입 옵션\r\n   */\r\n  public static async promptForInsertionMode(): Promise<Partial<CodeInsertionOptions> | undefined> {\r\n    const options = await vscode.window.showQuickPick([\r\n      {\r\n        label: '$(cursor) 커서 위치에 삽입',\r\n        description: '현재 커서 위치에 코드를 삽입합니다.',\r\n        detail: '기존 텍스트는 그대로 유지됩니다.',\r\n        value: 'insert'\r\n      },\r\n      {\r\n        label: '$(edit) 선택 영역 대체',\r\n        description: '현재 선택 영역을 코드로 대체합니다.',\r\n        detail: '선택 영역이 없으면 커서 위치에 삽입합니다.',\r\n        value: 'replace'\r\n      },\r\n      {\r\n        label: '$(new-file) 새 파일 생성',\r\n        description: '코드로 새 파일을 생성합니다.',\r\n        detail: '에디터에서 새 파일을 열고 코드를 삽입합니다.',\r\n        value: 'new'\r\n      }\r\n    ], {\r\n      placeHolder: '코드 삽입 방식을 선택하세요',\r\n      matchOnDescription: true,\r\n      matchOnDetail: true\r\n    });\r\n    \r\n    if (!options) {\r\n      return undefined; // 사용자가 취소함\r\n    }\r\n    \r\n    switch (options.value) {\r\n      case 'insert': {\r\n        return { insertAtCursor: true };\r\n      }\r\n      case 'replace': {\r\n        return { replaceSelection: true };\r\n      }\r\n      case 'new': {\r\n        return { createNewFile: true };\r\n      }\r\n    }\r\n    \r\n    return undefined;\r\n  }\r\n  \r\n  /**\r\n   * 코드 삽입 명령 등록\r\n   * @param context 확장 컨텍스트\r\n   */\r\n  public static async registerCommands(context: vscode.ExtensionContext): Promise<void> {\r\n    // 명령어 등록 전에 이미 등록되어 있는지 확인\r\n    const existingCommands = await vscode.commands.getCommands();\r\n    \r\n    // 코드 삽입 명령 등록 (중복 방지)\r\n    if (!existingCommands.includes('ape.insertCodeToEditor')) {\r\n      context.subscriptions.push(\r\n        vscode.commands.registerCommand('ape.insertCodeToEditor', async (options: CodeInsertionOptions) => {\r\n          const insertionOptions = await this.promptForInsertionMode();\r\n          if (!insertionOptions) {\r\n            return false;\r\n          }\r\n          \r\n          return await this.insertCodeToEditor({\r\n            ...options,\r\n            ...insertionOptions\r\n          });\r\n        })\r\n      );\r\n    }\r\n    \r\n    // 명령 바로 실행 (옵션 선택 없이)\r\n    if (!existingCommands.includes('ape.insertCodeAtCursor')) {\r\n      context.subscriptions.push(\r\n        vscode.commands.registerCommand('ape.insertCodeAtCursor', async (options: CodeInsertionOptions) => {\r\n          return await this.insertCodeToEditor({\r\n            ...options,\r\n            insertAtCursor: true\r\n          });\r\n        })\r\n      );\r\n    }\r\n    \r\n    // 선택 영역 대체 명령\r\n    if (!existingCommands.includes('ape.replaceSelectionWithCode')) {\r\n      context.subscriptions.push(\r\n        vscode.commands.registerCommand('ape.replaceSelectionWithCode', async (options: CodeInsertionOptions) => {\r\n          return await this.insertCodeToEditor({\r\n            ...options,\r\n            replaceSelection: true\r\n          });\r\n        })\r\n      );\r\n    }\r\n    \r\n    // 새 파일 생성 명령\r\n    if (!existingCommands.includes('ape.createNewFileWithCode')) {\r\n      context.subscriptions.push(\r\n        vscode.commands.registerCommand('ape.createNewFileWithCode', async (options: CodeInsertionOptions) => {\r\n          return await this.insertCodeToEditor({\r\n            ...options,\r\n            createNewFile: true\r\n          });\r\n        })\r\n      );\r\n    }\r\n    \r\n    // 파일 첨부 명령\r\n    if (!existingCommands.includes('ape.attachFile')) {\r\n      context.subscriptions.push(\r\n        vscode.commands.registerCommand('ape.attachFile', async () => {\r\n          try {\r\n            // 현재 웹뷰 찾기\r\n            const activeViewColumn = vscode.window.activeTextEditor?.viewColumn || vscode.ViewColumn.One;\r\n            const panel = vscode.window.visibleTextEditors\r\n              .find(editor => editor.viewColumn === activeViewColumn);\r\n            \r\n            if (panel) {\r\n              // 파일 선택 대화상자 표시\r\n              const fileUris = await vscode.window.showOpenDialog({\r\n                canSelectFiles: true,\r\n                canSelectFolders: false,\r\n                canSelectMany: false,\r\n                openLabel: '첨부',\r\n                filters: {\r\n                  'All Files': ['*']\r\n                }\r\n              });\r\n\r\n              if (fileUris && fileUris.length > 0) {\r\n                return fileUris[0].fsPath;\r\n              }\r\n            }\r\n            return null;\r\n          } catch (error) {\r\n            console.error('파일 첨부 중 오류:', error);\r\n            vscode.window.showErrorMessage(`파일 첨부 중 오류가 발생했습니다: ${error instanceof Error ? error.message : String(error)}`);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 코드 블록 UI 생성\r\n   * @param codeContent 코드 내용\r\n   * @param language 언어\r\n   * @param showLineNumbers 라인 번호 표시 여부\r\n   * @returns 포맷팅된 HTML\r\n   */\r\n  public static formatCodeBlock(\r\n    codeContent: string,\r\n    language: string = 'plaintext',\r\n    showLineNumbers: boolean = true\r\n  ): string {\r\n    const codeId = `code_${++this.codeBlockCounter}`;\r\n    const escapedCode = this.escapeHtml(codeContent);\r\n    \r\n    // 라인 번호 생성\r\n    const lineNumbers = showLineNumbers ? \r\n      codeContent.split('\\n').map((_, i) => `${i + 1}`).join('\\n') : '';\r\n    \r\n    // 코드 블록 템플릿 사용\r\n    const template = `<div class=\"code-block-container code-block-popup\">\r\n  <div class=\"code-block-header\">\r\n    <span class=\"code-block-language language-${language}\">${language}</span>\r\n    <div class=\"code-block-actions\">\r\n      <button class=\"code-action-button copy-button\" data-code-id=\"${codeId}\" title=\"복사\">\r\n        <i class=\"codicon codicon-copy\"></i>\r\n        <span class=\"tooltip\">클립보드에 복사</span>\r\n      </button>\r\n      <button class=\"code-action-button insert-code-button\" data-code-id=\"${codeId}\" title=\"에디터에 삽입\">\r\n        <i class=\"codicon codicon-arrow-small-right\"></i>\r\n        <span class=\"tooltip\">현재 파일에 복사</span>\r\n      </button>\r\n      <button class=\"code-action-button new-file-button\" data-code-id=\"${codeId}\" title=\"새 파일로 생성\">\r\n        <i class=\"codicon codicon-new-file\"></i>\r\n        <span class=\"tooltip\">새 파일로 생성</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"code-content ${showLineNumbers ? 'with-line-numbers' : ''}\">\r\n    ${showLineNumbers ? `<div class=\"line-numbers\">${lineNumbers}</div>` : ''}\r\n    <div class=\"code-area\">\r\n      <code class=\"language-${language}\" id=\"code-${codeId}\">${escapedCode}</code>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\n    return template;\r\n  }\r\n\r\n  /**\r\n   * HTML 이스케이프 처리\r\n   * @param unsafe 이스케이프할 문자열\r\n   * @returns 이스케이프된 문자열\r\n   */\r\n  private static escapeHtml(unsafe: string): string {\r\n    return unsafe\r\n      .replace(/&/g, \"&amp;\")\r\n      .replace(/</g, \"&lt;\")\r\n      .replace(/>/g, \"&gt;\")\r\n      .replace(/\"/g, \"&quot;\")\r\n      .replace(/'/g, \"&#039;\");\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { LLMService } from '../llm/llmService';\r\n\r\n/**\r\n * 스마트 프롬프팅 상태 인터페이스\r\n */\r\nexport interface SmartPromptingState {\r\n  enabled: boolean;\r\n  mode: SmartPromptingMode;\r\n}\r\n\r\n/**\r\n * 스마트 프롬프팅 모드 열거형\r\n */\r\nexport enum SmartPromptingMode {\r\n  Basic = 'basic',         // 기본 모드\r\n  Advanced = 'advanced',   // 고급 모드\r\n  Expert = 'expert'        // 전문가 모드\r\n}\r\n\r\n/**\r\n * 스마트 프롬프팅 서비스\r\n * \r\n * 메시지 처리 전에 프롬프트를 증강하여 LLM 응답 품질을 향상시킵니다.\r\n * Chain of Thought(CoT) 및 동적 프롬프트 어셈블링을 지원합니다.\r\n */\r\nexport class SmartPromptingService {\r\n  private state: SmartPromptingState = {\r\n    enabled: false,\r\n    mode: SmartPromptingMode.Basic\r\n  };\r\n  \r\n  private readonly stateChangeEmitter = new vscode.EventEmitter<SmartPromptingState>();\r\n  public readonly onStateChanged = this.stateChangeEmitter.event;\r\n  \r\n  /**\r\n   * 스마트 프롬프팅 서비스 생성자\r\n   * @param context VSCode 확장 컨텍스트\r\n   * @param llmService LLM 서비스\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly llmService: LLMService\r\n  ) {\r\n    // 저장된 상태 복원\r\n    this.restoreState();\r\n    \r\n    // 컨텍스트 서브스크립션에 이벤트 에미터 등록\r\n    this.context.subscriptions.push(this.stateChangeEmitter);\r\n  }\r\n  \r\n  /**\r\n   * 저장된 상태 복원\r\n   */\r\n  private restoreState(): void {\r\n    const savedState = this.context.globalState.get<SmartPromptingState>('ape.smartPrompting.state');\r\n    if (savedState) {\r\n      this.state = savedState;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 상태 저장\r\n   */\r\n  private saveState(): void {\r\n    this.context.globalState.update('ape.smartPrompting.state', this.state);\r\n  }\r\n  \r\n  /**\r\n   * 스마트 프롬프팅 활성화 여부 반환\r\n   */\r\n  public isEnabled(): boolean {\r\n    return this.state.enabled;\r\n  }\r\n  \r\n  /**\r\n   * 현재 스마트 프롬프팅 모드 반환\r\n   */\r\n  public getMode(): SmartPromptingMode {\r\n    return this.state.mode;\r\n  }\r\n  \r\n  /**\r\n   * 현재 상태 반환\r\n   */\r\n  public getState(): SmartPromptingState {\r\n    return { ...this.state };\r\n  }\r\n  \r\n  /**\r\n   * 스마트 프롬프팅 활성화/비활성화\r\n   * @param enabled 활성화 여부\r\n   */\r\n  public setEnabled(enabled: boolean): void {\r\n    if (this.state.enabled !== enabled) {\r\n      this.state.enabled = enabled;\r\n      this.saveState();\r\n      this.stateChangeEmitter.fire(this.getState());\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 스마트 프롬프팅 모드 설정\r\n   * @param mode 스마트 프롬프팅 모드\r\n   */\r\n  public setMode(mode: SmartPromptingMode): void {\r\n    if (this.state.mode !== mode) {\r\n      this.state.mode = mode;\r\n      this.saveState();\r\n      this.stateChangeEmitter.fire(this.getState());\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 스마트 프롬프팅 토글\r\n   */\r\n  public toggle(): void {\r\n    this.setEnabled(!this.state.enabled);\r\n  }\r\n  \r\n  /**\r\n   * 사용자 메시지를 스마트 프롬프팅으로 처리\r\n   * @param message 원본 사용자 메시지\r\n   * @returns 증강된 메시지\r\n   */\r\n  public processMessage(message: string): string {\r\n    if (!this.state.enabled) {\r\n      return message;\r\n    }\r\n    \r\n    // 현재 모드에 따라 다른 프롬프팅 전략 적용\r\n    switch (this.state.mode) {\r\n      case SmartPromptingMode.Basic:\r\n        return this.applyBasicPrompting(message);\r\n      case SmartPromptingMode.Advanced:\r\n        return this.applyAdvancedPrompting(message);\r\n      case SmartPromptingMode.Expert:\r\n        return this.applyExpertPrompting(message);\r\n      default:\r\n        return message;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 기본 스마트 프롬프팅 적용\r\n   * @param message 원본 메시지\r\n   * @returns 증강된 메시지\r\n   */\r\n  private applyBasicPrompting(message: string): string {\r\n    // 기본 프롬프팅: 명확한 지시와 구조화된 응답 요청 추가\r\n    return `${message}\\n\\n당신의 응답은 명확하고 구조화된 방식으로 제공해 주세요. 필요한 경우 단계별 접근 방식을 사용하고, 코드 예제에는 주석과 설명을 포함해 주세요.`;\r\n  }\r\n  \r\n  /**\r\n   * 고급 스마트 프롬프팅 적용\r\n   * @param message 원본 메시지\r\n   * @returns 증강된 메시지\r\n   */\r\n  private applyAdvancedPrompting(message: string): string {\r\n    // 고급 프롬프팅: Chain of Thought 유도 및 다각적 분석 추가\r\n    return `${message}\\n\\n이 문제에 대해 단계별로 생각해 주세요. 먼저 문제를 분석하고, 가능한 접근 방식들을 고려한 후, 최적의 솔루션을 선택하여 구현해 주세요. 코드 예제는 효율성, 가독성, 유지보수성을 모두 고려하여 작성해 주세요. 대안적 접근 방식이 있다면 장단점과 함께 간략히 언급해 주세요.`;\r\n  }\r\n  \r\n  /**\r\n   * 전문가 스마트 프롬프팅 적용\r\n   * @param message 원본 메시지\r\n   * @returns 증강된 메시지\r\n   */\r\n  private applyExpertPrompting(message: string): string {\r\n    // 전문가 프롬프팅: 심층적 분석과 종합적 접근 유도\r\n    return `${message}\\n\\n이 문제에 대해 전문가 수준의 분석을 제공해 주세요. 다음의 접근 방식으로 진행해 주세요:\r\n    \r\n1. 문제 정의 및 요구사항 분석\r\n2. 가능한 해결책과 접근 방식 탐색 (각각의 장단점 포함)\r\n3. 최적의 접근 방식 선택 및 그 이유 설명\r\n4. 구현 세부사항 및 코드 예제 제시\r\n5. 잠재적 리팩토링 기회 및 최적화 방안 고려\r\n6. 검증 및 테스트 전략 제안\r\n\r\n코드 예제는 최신 모범 사례, 패턴, 효율적인 알고리즘을 활용하고, 예외 처리 및 엣지 케이스를 고려해 주세요. 필요한 경우 성능, 확장성 또는 유지보수성 측면의 절충점을 명시적으로 언급해 주세요.`;\r\n  }\r\n  \r\n  /**\r\n   * 서비스 정리\r\n   */\r\n  public dispose(): void {\r\n    this.stateChangeEmitter.dispose();\r\n  }\r\n}","import * as vscode from 'vscode';\r\n\r\n/**\r\n * WelcomeViewProvider for luxury minimal welcome screen\r\n * Creates an elegant, clean welcome interface with premium aesthetics\r\n */\r\nexport class WelcomeViewProvider {\r\n  \r\n  /**\r\n   * Generate welcome message HTML with luxury minimal design\r\n   * This is used for the first-run experience and when clearing chat\r\n   */\r\n  public static getWelcomeMessageHTML(): string {\r\n    // The welcome view HTML with luxury minimal styling\r\n    return `\r\n      <div class=\"welcome-container\">\r\n        <div class=\"welcome-header\">\r\n          <div class=\"welcome-monologue\">\r\n  <h1 class=\"welcome-title\">A.P.E</h1>\r\n  <div class=\"title-separator\"></div>\r\n  <p class=\"welcome-tagline\">AGENTIC PIPELINE ENGINE</p>\r\n  <p class=\"welcome-subtitle\">Agentic Vision. Development Illuminated. <br>\r\nSeamless • Plugin-driven • Lightweight For S/W Engineers.</p>\r\n</div>\r\n        </div>\r\n        \r\n        <div class=\"welcome-actions\">\r\n          <div class=\"action-group\">\r\n            <div class=\"action-button\">\r\n              <div class=\"action-icon\">✧</div>\r\n              <div class=\"action-content\">\r\n                <div class=\"action-title\">New Conversation</div>\r\n                <div class=\"action-description\">Begin a dialogue with your AI assistant</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"action-group\">\r\n            <div class=\"action-button\">\r\n              <div class=\"action-icon\">✦</div>\r\n              <div class=\"action-content\">\r\n                <div class=\"action-title\">Code Assistant</div>\r\n                <div class=\"action-description\">Analyze, optimize, and improve your code</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"action-button\">\r\n              <div class=\"action-icon\">⟐</div>\r\n              <div class=\"action-content\">\r\n                <div class=\"action-title\">Development Tools</div>\r\n                <div class=\"action-description\">Test, debug, and implement new features</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"welcome-quick-actions\">\r\n          <button class=\"quick-action\" onclick=\"vscode.postMessage({type: 'insertCommand', command: '/help'})\">Help</button>\r\n          <button class=\"quick-action\" onclick=\"vscode.postMessage({type: 'insertCommand', command: '/model'})\">Change Model</button>\r\n          <button class=\"quick-action\" onclick=\"vscode.postMessage({type: 'insertCommand', command: '/settings'})\">Settings</button>\r\n          <button class=\"quick-action\" onclick=\"vscode.postMessage({type: 'insertCommand', command: '/clear'})\">Reset Conversation</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Create standalone webview panel with welcome content\r\n   */\r\n  public static createOrShow(context: vscode.ExtensionContext): vscode.WebviewPanel {\r\n    const panel = vscode.window.createWebviewPanel(\r\n      'apeWelcome',\r\n      'Welcome to APE',\r\n      vscode.ViewColumn.Active, // 현재 활성화된 에디터 영역에 표시\r\n      {\r\n        enableScripts: true,\r\n        localResourceRoots: [\r\n          vscode.Uri.joinPath(context.extensionUri, 'media')\r\n        ],\r\n        retainContextWhenHidden: true // 숨겨진 상태에서도 컨텍스트 유지\r\n      }\r\n    );\r\n    \r\n    // Get WebView stylesheets\r\n    const styleUri = panel.webview.asWebviewUri(\r\n      vscode.Uri.joinPath(context.extensionUri, 'media', 'chat-ape.css')\r\n    );\r\n    \r\n    // Set webview HTML with maximized welcome view\r\n    panel.webview.html = `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${panel.webview.cspSource} 'unsafe-inline'; font-src ${panel.webview.cspSource}; img-src ${panel.webview.cspSource} https:; script-src 'unsafe-inline';\">\r\n        <link href=\"${styleUri}\" rel=\"stylesheet\">\r\n        <title>Welcome to APE</title>\r\n        <style>\r\n          body, html {\r\n            margin: 0;\r\n            padding: 0;\r\n            height: 100vh;\r\n            width: 100vw;\r\n            overflow: hidden;\r\n          }\r\n          \r\n          .welcome-standalone {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            min-height: 100vh;\r\n            padding: 0;\r\n            width: 100%;\r\n          }\r\n          \r\n          /* 더 큰 화면에 맞춰 웰컴 화면 크기 최적화 */\r\n          .welcome-container {\r\n            max-width: 1000px;\r\n            margin: 0 auto;\r\n            padding: 2rem;\r\n          }\r\n          \r\n          /* 더 넓은 화면 공간으로 액션 버튼 그리드 개선 */\r\n          .action-group {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n            gap: 1.5rem;\r\n          }\r\n          \r\n          .example-cards {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\r\n            gap: 1.2rem;\r\n          }\r\n          \r\n          /* 더 큰 환영 텍스트 */\r\n          .welcome-title {\r\n            font-size: 6rem;\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"welcome-standalone\">\r\n          ${WelcomeViewProvider.getWelcomeMessageHTML()}\r\n        </div>\r\n        \r\n        <script>\r\n          const vscode = acquireVsCodeApi();\r\n          \r\n          document.querySelectorAll('.example-card').forEach(card => {\r\n            card.addEventListener('click', event => {\r\n              const command = card.querySelector('.example-text').textContent;\r\n              vscode.postMessage({ type: 'command', command });\r\n            });\r\n          });\r\n          \r\n          // Quick actions are now handled via onclick attributes directly in HTML\r\n          // This is more reliable than event delegation in this environment\r\n          \r\n          // Add subtle hover animations\r\n          document.querySelectorAll('.example-card').forEach(element => {\r\n            element.addEventListener('mouseover', () => {\r\n              element.style.transform = 'translateY(-2px)';\r\n              element.style.boxShadow = 'var(--ape-shadow-md)';\r\n            });\r\n\r\n            element.addEventListener('mouseout', () => {\r\n              element.style.transform = '';\r\n              element.style.boxShadow = '';\r\n            });\r\n          });\r\n\r\n          document.querySelectorAll('.action-button').forEach(element => {\r\n            element.addEventListener('mouseover', () => {\r\n              element.style.transform = 'translateY(-2px)';\r\n              element.style.boxShadow = 'var(--ape-shadow-md)';\r\n            });\r\n\r\n            element.addEventListener('mouseout', () => {\r\n              element.style.transform = '';\r\n              element.style.boxShadow = '';\r\n            });\r\n          });\r\n          \r\n          // 웰컴 뷰가 로드된 후 1초 후에 강조 효과\r\n          setTimeout(() => {\r\n            document.querySelector('.welcome-title').style.animation = 'pulse 2s infinite';\r\n          }, 1000);\r\n        </script>\r\n      </body>\r\n      </html>`;\r\n    \r\n    return panel;\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { LLMService } from '../core/llm/llmService';\r\nimport { MemoryService } from '../core/memory/memoryService';\r\nimport { CommandManager } from '../core/commands/commandManager';\r\nimport { Message, MessageRole } from '../types/chat';\r\nimport { CommandSuggestion } from '../core/commands/slashCommand';\r\nimport { CodeService } from './chat/codeService';\r\nimport { ModelManager } from '../core/llm/modelManager';\r\nimport { SmartPromptingService, SmartPromptingState, SmartPromptingMode } from '../core/services/smartPromptingService';\r\nimport { WelcomeViewProvider } from './welcomeView';\r\n\r\n/**\r\n * MainChatViewProvider manages the primary chat interface WebView\r\n * with a clean, modern, and user-friendly design\r\n */\r\nexport class MainChatViewProvider implements vscode.WebviewViewProvider {\r\n  public static readonly viewType = 'apeChat';\r\n\r\n  private _view?: vscode.WebviewView;\r\n  private _messages: Message[] = [];\r\n  private _isStreaming = false;\r\n  private _currentStreamMessageId: string | null = null;\r\n  private _streamUpdateTimeout: NodeJS.Timeout | null = null;\r\n  private _modelChangeListener?: vscode.Disposable;\r\n  private _smartPromptingService?: SmartPromptingService;\r\n  private _smartPromptingStateListener?: vscode.Disposable;\r\n\r\n  // Command suggestion event\r\n  private readonly _onDidSuggestCommands = new vscode.EventEmitter<CommandSuggestion[]>();\r\n  public readonly onDidSuggestCommands = this._onDidSuggestCommands.event;\r\n\r\n  constructor(\r\n    private readonly _context: vscode.ExtensionContext,\r\n    private readonly _llmService: LLMService,\r\n    private readonly _memoryService: MemoryService,\r\n    private readonly _commandManager: CommandManager,\r\n    private readonly _modelManager?: ModelManager\r\n  ) {\r\n    // Initialize SmartPromptingService\r\n    this._smartPromptingService = new SmartPromptingService(_context, _llmService);\r\n\r\n    // Register state change listener\r\n    this._smartPromptingStateListener = this._smartPromptingService.onStateChanged(state => {\r\n      this._updateSmartPromptingUI(state);\r\n    });\r\n\r\n    // Add listener to context subscriptions for proper disposal\r\n    this._context.subscriptions.push(this._smartPromptingStateListener);\r\n  }\r\n  \r\n  /**\r\n   * Converts a URI to a webview-compatible URI\r\n   */\r\n  public getWebviewResource(uri: vscode.Uri): vscode.Uri | null {\r\n    if (!this._view) {\r\n      return null;\r\n    }\r\n    return this._view.webview.asWebviewUri(uri);\r\n  }\r\n\r\n  /**\r\n   * Called when the view is first created or becomes visible again\r\n   */\r\n  public async resolveWebviewView(\r\n    webviewView: vscode.WebviewView,\r\n    _context: vscode.WebviewViewResolveContext,\r\n    _token: vscode.CancellationToken\r\n  ) {\r\n    this._view = webviewView;\r\n\r\n    // Set options for the webview\r\n    webviewView.webview.options = {\r\n      enableScripts: true,\r\n      localResourceRoots: [\r\n        vscode.Uri.joinPath(this._context.extensionUri, 'media'),\r\n        vscode.Uri.joinPath(this._context.extensionUri, 'out'),\r\n        vscode.Uri.joinPath(this._context.extensionUri, 'src')\r\n      ]\r\n    };\r\n\r\n    // Load previous messages from memory service\r\n    await this.loadMessages();\r\n    \r\n    // Set initial HTML content\r\n    webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\r\n    // Handle messages from the webview\r\n    webviewView.webview.onDidReceiveMessage(this._handleMessage.bind(this));\r\n    \r\n    // Register code service handlers\r\n    try {\r\n      await CodeService.registerHandlers(this._context, webviewView.webview);\r\n    } catch (error) {\r\n      console.log('Code service handlers may already be registered:', error);\r\n    }\r\n    \r\n    // Listen for model changes if ModelManager is available\r\n    if (this._modelManager) {\r\n      // Dispose any existing listener\r\n      if (this._modelChangeListener) {\r\n        this._modelChangeListener.dispose();\r\n      }\r\n      \r\n      // Register new listener\r\n      this._modelChangeListener = this._modelManager.onDidChangeModel(() => {\r\n        // Update the UI when model changes\r\n        this.updateModelIndicator();\r\n      });\r\n      \r\n      // Add listener to context for disposal\r\n      this._context.subscriptions.push(this._modelChangeListener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the model indicator UI with the current model\r\n   */\r\n  public updateModelIndicator(): void {\r\n    if (!this._view) {\r\n      console.log('Model indicator update failed: no webview');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Use ModelManager if available, otherwise fall back to LLMService\r\n      let currentModel, displayName;\r\n      \r\n      if (this._modelManager) {\r\n        currentModel = this._modelManager.getActiveModel();\r\n        displayName = this._modelManager.getModelDisplayName(currentModel);\r\n        console.log('Using ModelManager to get current model info:', currentModel);\r\n      } else {\r\n        currentModel = this._llmService.getActiveModel();\r\n        displayName = this.getModelDisplayName(currentModel);\r\n        console.log('Using LLMService to get current model info:', currentModel);\r\n      }\r\n      \r\n      // Send message to webview to update model name display\r\n      this._view.webview.postMessage({\r\n        type: 'updateModelIndicator',\r\n        modelName: displayName\r\n      });\r\n      console.log('Model indicator update message sent to webview');\r\n    } catch (error) {\r\n      console.error('Error updating model indicator:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Converts model ID to a user-friendly display name\r\n   * @deprecated Use the ModelManager.getModelDisplayName method instead\r\n   */\r\n  private getModelDisplayName(modelId: string): string {\r\n    return this._llmService.getModelDisplayName(modelId);\r\n  }\r\n\r\n  /**\r\n   * 랜덤 인사말 생성 - 유저 컨텍스트에 맞는 인사말과 팁 제공\r\n   */\r\n  private getRandomGreeting(): string {\r\n    try {\r\n      // greetings.json 파일에서 인사말 데이터 불러오기\r\n      const greetingsUri = vscode.Uri.joinPath(this._context.extensionUri, 'src', 'data', 'greetings.json');\r\n      const greetingsPath = greetingsUri.fsPath;\r\n      const greetingsFile = require(greetingsPath);\r\n\r\n      // 변경된 포맷의 greetings.json 파일 처리\r\n      if (greetingsFile.messages && Array.isArray(greetingsFile.messages) && greetingsFile.messages.length > 0) {\r\n        // 단순 messages 배열에서 랜덤 메시지 선택\r\n        return greetingsFile.messages[Math.floor(Math.random() * greetingsFile.messages.length)];\r\n      }\r\n\r\n      // 이전 포맷의 파일도 지원 (하위 호환성)\r\n      if (greetingsFile.greetings && Array.isArray(greetingsFile.greetings)) {\r\n        // 모든 개별 인사말 메시지 수집\r\n        const allMessages: string[] = [];\r\n\r\n        // 일반 카테고리 메시지 수집\r\n        for (const category of greetingsFile.greetings) {\r\n          if (category.messages && Array.isArray(category.messages)) {\r\n            allMessages.push(...category.messages);\r\n          }\r\n        }\r\n\r\n        // 조합 카테고리도 포함\r\n        if (greetingsFile.combinations && Array.isArray(greetingsFile.combinations)) {\r\n          for (const combo of greetingsFile.combinations) {\r\n            if (combo.messages && Array.isArray(combo.messages)) {\r\n              allMessages.push(...combo.messages);\r\n            }\r\n          }\r\n        }\r\n\r\n        // 유효한 메시지가 있는지 확인\r\n        if (allMessages.length > 0) {\r\n          return allMessages[Math.floor(Math.random() * allMessages.length)];\r\n        }\r\n      }\r\n\r\n      throw new Error('No valid greeting messages found');\r\n\r\n    } catch (error) {\r\n      console.error('Error loading greetings:', error);\r\n\r\n      // 오류 발생 시 기본 인사말 반환\r\n      const fallbackGreetings = [\r\n        \"안녕하세요! 무엇을 도와드릴까요? 도움이 필요하시면 '/'를 입력해보세요.\",\r\n        \"어떤 개발 작업을 도와드릴까요? 슬래시(/) 명령어로 다양한 기능을 사용하실 수 있어요.\",\r\n        \"오늘은 어떤 코드를 작성하고 계신가요? 도움이 필요하시면 알려주세요.\"\r\n      ];\r\n\r\n      return fallbackGreetings[Math.floor(Math.random() * fallbackGreetings.length)];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sends a user message to the LLM and processes the response\r\n   */\r\n  public async sendMessage(content: string): Promise<void> {\r\n    if (!this._view) {\r\n      vscode.window.showErrorMessage('APE Chat view is not available');\r\n      return;\r\n    }\r\n\r\n    if (this._isStreaming) {\r\n      vscode.window.showInformationMessage('Please wait for the current response to complete');\r\n      return;\r\n    }\r\n\r\n    // Handle slash commands\r\n    if (content.trim().startsWith('/')) {\r\n      // Execute slash command directly via commandManager\r\n      await this._commandManager.slashCommandManager.executeCommand(content);\r\n      return;\r\n    }\r\n\r\n    // Apply smart prompting (if enabled)\r\n    let processedContent = content;\r\n    if (this._smartPromptingService && this._smartPromptingService.isEnabled()) {\r\n      processedContent = this._smartPromptingService.processMessage(content);\r\n    }\r\n\r\n    // Create and add user message\r\n    const userMessage: Message = {\r\n      id: `msg_${Date.now()}`,\r\n      role: MessageRole.User,\r\n      content: processedContent,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    this._messages.push(userMessage);\r\n    this.updateChatView();\r\n\r\n    try {\r\n      // Create assistant message placeholder for streaming\r\n      const assistantMessageId = `msg_${Date.now() + 1}`;\r\n      const assistantMessage: Message = {\r\n        id: assistantMessageId,\r\n        role: MessageRole.Assistant,\r\n        content: '',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      this._messages.push(assistantMessage);\r\n      this._currentStreamMessageId = assistantMessageId;\r\n      this._isStreaming = true;\r\n      this.updateChatView();\r\n\r\n      // Start streaming response from LLM\r\n      await this._llmService.streamResponse(\r\n        this._messages,\r\n        (chunk: string, done: boolean) => {\r\n          // Update the assistant message with the new chunk\r\n          const assistantMessage = this._messages.find(m => m.id === this._currentStreamMessageId);\r\n          if (assistantMessage) {\r\n            assistantMessage.content += chunk;\r\n\r\n            // Debounce updates for efficiency\r\n            if (!this._streamUpdateTimeout) {\r\n              this._streamUpdateTimeout = setTimeout(() => {\r\n                this.updateChatView();\r\n                this._streamUpdateTimeout = null;\r\n              }, 30); // 30ms debouncing\r\n            }\r\n\r\n            if (done) {\r\n              // Stream completed\r\n              this._isStreaming = false;\r\n              this._currentStreamMessageId = null;\r\n\r\n              // Cancel any pending timeout\r\n              if (this._streamUpdateTimeout) {\r\n                clearTimeout(this._streamUpdateTimeout);\r\n                this._streamUpdateTimeout = null;\r\n              }\r\n\r\n              // 메시지가 오류 메시지인지 확인\r\n              const assistantMessage = this._messages.find(m => m.id === this._currentStreamMessageId);\r\n              if (assistantMessage && assistantMessage.content.includes('[연결 오류가 발생했습니다]')) {\r\n                // 오류 메시지를 시스템 메시지로 변경\r\n                assistantMessage.role = MessageRole.System;\r\n                assistantMessage.content = '연결 오류가 발생했습니다. 다시 시도해주세요.';\r\n              }\r\n\r\n              // Save messages to memory\r\n              this.saveMessages();\r\n\r\n              this.updateChatView();\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      this._isStreaming = false;\r\n      this._currentStreamMessageId = null;\r\n\r\n      // Cancel any pending timeout\r\n      if (this._streamUpdateTimeout) {\r\n        clearTimeout(this._streamUpdateTimeout);\r\n        this._streamUpdateTimeout = null;\r\n      }\r\n\r\n      // Add error message\r\n      const errorMessage: Message = {\r\n        id: `msg_error_${Date.now()}`,\r\n        role: MessageRole.System,\r\n        content: `Error: ${error instanceof Error ? error.message : String(error)}`,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      this._messages.push(errorMessage);\r\n      this.updateChatView();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all messages from the chat and shows welcome screen\r\n   */\r\n  public clearChat(): void {\r\n    console.log('Clearing chat - creating new welcome message');\r\n    \r\n    // Clear messages from memory service\r\n    this._memoryService.clearMessages();\r\n    \r\n    try {\r\n      // Get HTML content for welcome message\r\n      const welcomeHTML = WelcomeViewProvider.getWelcomeMessageHTML();\r\n      console.log('WelcomeViewProvider used - welcome HTML generated, length:', welcomeHTML.length);\r\n      \r\n      // Create welcome messages\r\n      const welcomeId = `welcome_${Date.now()}`;\r\n      const assistantId = `assistant_welcome_${Date.now()}`;\r\n      \r\n      this._messages = [\r\n        {\r\n          id: welcomeId,\r\n          role: MessageRole.System,\r\n          content: welcomeHTML,\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: assistantId,\r\n          role: MessageRole.Assistant,\r\n          content: this.getRandomGreeting(),\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n      console.log('Welcome messages added - IDs:', welcomeId, assistantId);\r\n      \r\n      // Update UI immediately\r\n      this.updateChatView();\r\n    } catch (error) {\r\n      console.error('Error creating welcome message:', error);\r\n      this._messages = [{\r\n        id: `error_${Date.now()}`,\r\n        role: MessageRole.System,\r\n        content: '웰컴 화면을 불러오는 중 오류가 발생했습니다.',\r\n        timestamp: new Date()\r\n      }];\r\n      \r\n      // Update UI with error message\r\n      this.updateChatView();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads messages from memory service\r\n   */\r\n  private async loadMessages(): Promise<void> {\r\n    console.log('Loading messages - checking for existing messages');\r\n    const result = await this._memoryService.getMessages();\r\n    if (result.success && result.data && result.data.length > 0) {\r\n      console.log(`Loaded ${result.data.length} saved messages`);\r\n      this._messages = result.data;\r\n    } else {\r\n      console.log('No saved messages found, adding welcome message');\r\n      \r\n      try {\r\n        // Get HTML content for welcome message\r\n        const welcomeHTML = WelcomeViewProvider.getWelcomeMessageHTML();\r\n        console.log('WelcomeViewProvider used - welcome HTML generated, length:', welcomeHTML.length);\r\n        \r\n        // Create welcome messages\r\n        const welcomeId = `welcome_${Date.now()}`;\r\n        const assistantId = `assistant_welcome_${Date.now()}`;\r\n        \r\n        this._messages = [\r\n          {\r\n            id: welcomeId,\r\n            role: MessageRole.System,\r\n            content: welcomeHTML,\r\n            timestamp: new Date()\r\n          },\r\n          {\r\n            id: assistantId,\r\n            role: MessageRole.Assistant,\r\n            content: this.getRandomGreeting(),\r\n            timestamp: new Date()\r\n          }\r\n        ];\r\n        console.log('Welcome messages added - IDs:', welcomeId, assistantId);\r\n      } catch (error) {\r\n        console.error('Error creating welcome message:', error);\r\n        this._messages = [{\r\n          id: `error_${Date.now()}`,\r\n          role: MessageRole.System,\r\n          content: '웰컴 화면을 불러오는 중 오류가 발생했습니다.',\r\n          timestamp: new Date()\r\n        }];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves messages to memory service\r\n   */\r\n  private async saveMessages(): Promise<void> {\r\n    for (const message of this._messages) {\r\n      await this._memoryService.addMessage(message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the chat view with the current messages\r\n   */\r\n  private updateChatView(): void {\r\n    if (this._view) {\r\n      this._view.webview.postMessage({\r\n        type: 'updateMessages',\r\n        messages: this._messages,\r\n        isStreaming: this._isStreaming\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles messages sent from the webview\r\n   */\r\n  private _handleMessage(message: any): void {\r\n    switch (message.type) {\r\n      case 'sendMessage':\r\n        this.sendMessage(message.content);\r\n        break;\r\n\r\n      case 'cancelStream':\r\n        this._llmService.cancelStream();\r\n        this._isStreaming = false;\r\n        this._currentStreamMessageId = null;\r\n\r\n        // Cancel any pending timeout\r\n        if (this._streamUpdateTimeout) {\r\n          clearTimeout(this._streamUpdateTimeout);\r\n          this._streamUpdateTimeout = null;\r\n        }\r\n\r\n        this.updateChatView();\r\n        break;\r\n\r\n      case 'clearChat':\r\n        this.clearChat();\r\n        break;\r\n        \r\n      case 'command':\r\n        // Execute command from help panel\r\n        this.sendMessage(message.command);\r\n        break;\r\n        \r\n      case 'insertCommand':\r\n        // Insert command text into chat input\r\n        this.insertCommandToChat(message.command);\r\n        break;\r\n\r\n      case 'getEditorContent':\r\n        this.getEditorContent().then(content => {\r\n          if (this._view) {\r\n            this._view.webview.postMessage({\r\n              type: 'editorContent',\r\n              content\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'inputChanged':\r\n        // Update command suggestions when input changes\r\n        this.updateCommandSuggestions(message.content);\r\n        break;\r\n\r\n      case 'showModelSelector':\r\n        console.log('Model selector request received');\r\n        \r\n        try {\r\n          // Call CommandManager's selectModel directly\r\n          if (this._commandManager) {\r\n            Promise.resolve(this._commandManager.selectModel()).catch((error: Error) => {\r\n              console.error('Error executing model selection command:', error);\r\n              vscode.window.showErrorMessage('Unable to execute model selection');\r\n            });\r\n          } else {\r\n            // Fallback: Use VSCode command system\r\n            Promise.resolve(vscode.commands.executeCommand('ape.selectModel')).catch((error: Error) => {\r\n              console.error('Error executing VSCode command:', error);\r\n              vscode.window.showErrorMessage('Unable to execute model selection');\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Unexpected error:', error);\r\n          vscode.window.showErrorMessage('Unexpected error during model selection');\r\n        }\r\n        break;\r\n        \r\n      case 'toggleSmartPrompting':\r\n        // Toggle Smart Prompting service\r\n        if (this._smartPromptingService) {\r\n          this._smartPromptingService.toggle();\r\n        }\r\n        break;\r\n\r\n      case 'setSmartPromptingMode':\r\n        // Set Smart Prompting mode\r\n        if (this._smartPromptingService && message.mode) {\r\n          this._smartPromptingService.setMode(message.mode as SmartPromptingMode);\r\n        }\r\n        break;\r\n\r\n      case 'copyCode':\r\n      case 'insertCodeToEditor':\r\n      case 'createFileWithCode':\r\n        // Code block actions handled by CodeService\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates command suggestions\r\n   */\r\n  private updateCommandSuggestions(input: string): void {\r\n    if (input.startsWith('/')) {\r\n      // Get slash command suggestions\r\n      const suggestions = this._commandManager.slashCommandManager.getCommandSuggestions(input);\r\n\r\n      // Send suggestions to webview\r\n      if (this._view) {\r\n        this._view.webview.postMessage({\r\n          type: 'commandSuggestions',\r\n          suggestions\r\n        });\r\n      }\r\n\r\n      // Fire event for VSCode integration\r\n      this._onDidSuggestCommands.fire(suggestions);\r\n    } else if (this._view) {\r\n      // Clear suggestions\r\n      this._view.webview.postMessage({\r\n        type: 'commandSuggestions',\r\n        suggestions: []\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Inserts a command into the chat input\r\n   */\r\n  private insertCommandToChat(command: string): void {\r\n    if (!this._view) {\r\n      return;\r\n    }\r\n    \r\n    // Send insert command request to webview\r\n    this._view.webview.postMessage({\r\n      type: 'insertCommandToInput',\r\n      command: command\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Inserts text into the chat input from external sources\r\n   */\r\n  public handleChatInput(text: string): void {\r\n    if (!this._view) {\r\n      return;\r\n    }\r\n    \r\n    // Send insert text request to webview\r\n    this._view.webview.postMessage({\r\n      type: 'insertCommandToInput',\r\n      command: text\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Adds a direct LLM response to the chat from external sources\r\n   * Used for automated test results or system messages\r\n   */\r\n  public async sendLlmResponse(message: { role: string; content: string }): Promise<void> {\r\n    if (!this._view) {\r\n      vscode.window.showErrorMessage('APE Chat view is not available');\r\n      return;\r\n    }\r\n\r\n    // Create message object\r\n    const newMessage: Message = {\r\n      id: `msg_${Date.now()}`,\r\n      role: message.role as MessageRole,\r\n      content: message.content,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    // Add message to list\r\n    this._messages.push(newMessage);\r\n    \r\n    // Save to memory\r\n    await this._memoryService.addMessage(newMessage);\r\n    \r\n    // Update UI\r\n    this.updateChatView();\r\n  }\r\n\r\n  /**\r\n   * Gets content from the active editor\r\n   */\r\n  private async getEditorContent(): Promise<string | null> {\r\n    const editor = vscode.window.activeTextEditor;\r\n    if (editor) {\r\n      const document = editor.document;\r\n      const selection = editor.selection;\r\n\r\n      // Return selected text if there's a selection, otherwise entire document\r\n      if (!selection.isEmpty) {\r\n        return document.getText(selection);\r\n      } else {\r\n        return document.getText();\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Generates the HTML for the main chat interface webview\r\n   */\r\n  private _getHtmlForWebview(webview: vscode.Webview): string {\r\n    console.log('Generating main chat interface HTML for webview');\r\n    \r\n    // Get paths to local resources\r\n    const mainStylesUri = webview.asWebviewUri(\r\n      vscode.Uri.joinPath(this._context.extensionUri, 'media', 'chat-ape.css')\r\n    );\r\n    console.log('chat-main.css URI:', mainStylesUri.toString());\r\n\r\n    const codiconsUri = webview.asWebviewUri(\r\n      vscode.Uri.joinPath(this._context.extensionUri, 'media', 'codicon', 'codicon.css')\r\n    );\r\n    console.log('codicon.css URI:', codiconsUri.toString());\r\n    \r\n    const codeBlockStylesUri = CodeService.getCodeBlockStyleUri(webview, this._context);\r\n    console.log('code-block.css URI:', codeBlockStylesUri.toString());\r\n\r\n    const nonce = this._getNonce();\r\n\r\n    return `<!DOCTYPE html>\r\n    <html lang=\"ko\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource} 'unsafe-inline'; font-src ${webview.cspSource} data:; img-src ${webview.cspSource} https: data:; script-src 'nonce-${nonce}' 'unsafe-inline';\">\r\n      <link href=\"${mainStylesUri}\" rel=\"stylesheet\" onload=\"console.log('chat-main.css loaded')\" onerror=\"console.error('Failed to load chat-main.css')\">\r\n      <link href=\"${codiconsUri}\" rel=\"stylesheet\" onload=\"console.log('codicon.css loaded')\" onerror=\"console.error('Failed to load codicon.css')\">\r\n      <link href=\"${codeBlockStylesUri}\" rel=\"stylesheet\" onload=\"console.log('code-block.css loaded')\" onerror=\"console.error('Failed to load code-block.css')\">\r\n      <title>APE Chat</title>\r\n    </head>\r\n    <body>\r\n      <div id=\"chat-container\">\r\n        <div class=\"chat-header\">\r\n        </div>\r\n        <div id=\"chat-messages\"></div>\r\n        <div id=\"chat-input-container\">\r\n          <div id=\"input-actions\">\r\n            <button id=\"smart-prompting-toggle\" title=\"스마트 프롬프팅 전환\" class=\"input-top-button\">\r\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M12 3L14.057 8.17159L19.5 8.88418L15.75 12.8789L16.7135 19L12 16L7.2865 19L8.25 12.8789L4.5 8.88418L9.943 8.17159L12 3Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              </svg>\r\n              <span id=\"smart-prompting-label\">스마트 프롬프팅</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"input-wrapper\">\r\n            <textarea id=\"chat-input\" placeholder=\"메시지를 입력하세요...\" rows=\"1\"></textarea>\r\n            <div id=\"input-buttons\">\r\n              <button id=\"clear-button\" title=\"대화 지우기\" class=\"action-button\">\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M19 6L5 20M5 6L19 20\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                </svg>\r\n              </button>\r\n              <button id=\"send-button\" title=\"메시지 전송\" class=\"action-button\">\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M22 2L11 13\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                  <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"model-indicator\">\r\n          <span id=\"model-name\">LLM Model</span>\r\n          <button id=\"model-selector\" title=\"모델 변경\">\r\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 4L19 8V16L12 20L5 16V8L12 4Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              <path d=\"M12 12L19 8\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              <path d=\"M12 12V20\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              <path d=\"M12 12L5 8\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n            모델 변경\r\n          </button>\r\n        </div>\r\n        <div id=\"command-suggestions\"></div>\r\n      </div>\r\n      \r\n      <script nonce=\"${nonce}\">\r\n        // Main script\r\n        (function() {\r\n          // Initial data\r\n          const vscode = acquireVsCodeApi();\r\n          const initialMessages = ${JSON.stringify(this._messages)};\r\n          const isStreaming = ${this._isStreaming};\r\n          let codeBlockCounter = 0;\r\n          \r\n          // Store messages in state\r\n          vscode.setState({ messages: initialMessages });\r\n          \r\n          // Setup message handler\r\n          window.addEventListener('message', event => {\r\n            const message = event.data;\r\n            \r\n            switch (message.type) {\r\n              case 'updateMessages': {\r\n                updateMessages(message.messages, message.isStreaming);\r\n                break;\r\n              }\r\n                \r\n              case 'editorContent': {\r\n                handleEditorContent(message.content);\r\n                break;\r\n              }\r\n                \r\n              case 'commandSuggestions': {\r\n                updateCommandSuggestions(message.suggestions);\r\n                break;\r\n              }\r\n                \r\n              case 'insertCommandToInput': {\r\n                insertCommandFromHelp(message.command);\r\n                break;\r\n              }\r\n                \r\n              case 'updateModelIndicator': {\r\n                // Update model name display\r\n                if (modelIndicator) {\r\n                  modelIndicator.textContent = message.modelName;\r\n                }\r\n                break;\r\n              }\r\n\r\n              case 'updateSmartPrompting': {\r\n                // Update Smart Prompting UI state\r\n                if (smartPromptingToggle && smartPromptingLabel) {\r\n                  if (message.enabled) {\r\n                    smartPromptingToggle.classList.add('active');\r\n                    smartPromptingLabel.textContent = '스마트 프롬프팅 켜짐';\r\n                  } else {\r\n                    smartPromptingToggle.classList.remove('active');\r\n                    smartPromptingLabel.textContent = '스마트 프롬프팅';\r\n                  }\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          });\r\n          \r\n          // DOM Elements - initialize as variables first, we'll get them in init()\r\n          let chatMessages;\r\n          let chatInput;\r\n          let sendButton;\r\n          let clearButton;\r\n          let modelIndicator;\r\n          let modelSelector;\r\n          let smartPromptingToggle;\r\n          let smartPromptingLabel;\r\n\r\n          // Command suggestions container\r\n          let commandSuggestionsContainer;\r\n          \r\n          // Active suggestion index\r\n          let activeSuggestionIndex = -1;\r\n          let suggestions = [];\r\n          \r\n          // Smart scroll state management\r\n          let isUserScrolled = false;\r\n          let isScrollNearBottom = true;\r\n          const SCROLL_THRESHOLD = 100; // Distance from bottom to consider \"near bottom\"\r\n        \r\n          // Detect user scroll function\r\n          function detectUserScroll() {\r\n            if (!chatMessages) return;\r\n            \r\n            // Calculate scroll position\r\n            const scrollPosition = chatMessages.scrollTop + chatMessages.clientHeight;\r\n            const scrollThreshold = chatMessages.scrollHeight - SCROLL_THRESHOLD;\r\n            \r\n            // Check if scroll is near bottom\r\n            isScrollNearBottom = scrollPosition >= scrollThreshold;\r\n            \r\n            // Detect user scrolling up\r\n            if (!isScrollNearBottom) {\r\n              isUserScrolled = true;\r\n            }\r\n          }\r\n          \r\n          // Smart scroll function\r\n          function performSmartScroll(forceScroll = false) {\r\n            if (!chatMessages) return;\r\n            \r\n            // Only scroll if user hasn't scrolled up, or a force scroll is needed\r\n            if (forceScroll || !isUserScrolled || isScrollNearBottom) {\r\n              chatMessages.scrollTop = chatMessages.scrollHeight;\r\n              isUserScrolled = false;\r\n            }\r\n          }\r\n\r\n          // Helper function to format date for iOS-style timestamp display\r\n          function formatMessageDate(date) {\r\n            if (!date) return '';\r\n            \r\n            // Create a date object\r\n            const messageDate = new Date(date);\r\n            \r\n            // Get current date\r\n            const now = new Date();\r\n            \r\n            // Check if message is from today\r\n            const isToday = messageDate.toDateString() === now.toDateString();\r\n            \r\n            // Format the time (HH:MM)\r\n            const hours = messageDate.getHours().toString().padStart(2, '0');\r\n            const minutes = messageDate.getMinutes().toString().padStart(2, '0');\r\n            const timeStr = \\`\\${hours}:\\${minutes}\\`;\r\n            \r\n            // Return appropriate format based on age\r\n            if (isToday) {\r\n              return timeStr;\r\n            } else {\r\n              // For older messages, include date\r\n              const month = messageDate.getMonth() + 1;\r\n              const day = messageDate.getDate();\r\n              return \\`\\${month}월 \\${day}일 \\${timeStr}\\`;\r\n            }\r\n          }\r\n          \r\n          // Get the timestamp group for a message\r\n          function getTimestampGroup(date) {\r\n            if (!date) return 'unknown';\r\n            \r\n            const messageDate = new Date(date);\r\n            return messageDate.toDateString();\r\n          }\r\n          \r\n          // Add timestamp dividers between message groups\r\n          function addTimestampDividers(messages) {\r\n            const result = [];\r\n            let currentGroup = null;\r\n            \r\n            messages.forEach((message, index) => {\r\n              // Determine the timestamp group for this message\r\n              const group = getTimestampGroup(message.timestamp);\r\n              \r\n              // If group changed, add timestamp divider\r\n              if (group !== currentGroup) {\r\n                currentGroup = group;\r\n                \r\n                // Skip adding timestamp for welcome message\r\n                if (index > 0) {\r\n                  const divider = {\r\n                    id: \\`timestamp_\\${Date.now()}_\\${index}\\`,\r\n                    type: 'timestamp',\r\n                    content: formatMessageDate(message.timestamp),\r\n                    timestamp: message.timestamp\r\n                  };\r\n                  result.push(divider);\r\n                }\r\n              }\r\n              \r\n              // Add the actual message\r\n              result.push(message);\r\n            });\r\n            \r\n            return result;\r\n          }\r\n          \r\n          // Message DOM ID converter\r\n          function getMessageDomId(messageId) {\r\n            return 'msg-' + messageId.replace(/\\\\s+/g, '-');\r\n          }\r\n          \r\n          // Update messages in the UI\r\n          function updateMessages(messages, isStreaming) {\r\n            console.log(\"updateMessages called with\", messages.length, \"messages, isStreaming:\", isStreaming);\r\n            \r\n            // Store in state\r\n            vscode.setState({ messages });\r\n            \r\n            // Check if chatMessages exists\r\n            if (!chatMessages) {\r\n              console.error(\"Error: chatMessages element not found. Retrying initialization...\");\r\n              setTimeout(init, 100);\r\n              return;\r\n            }\r\n            \r\n            // Get current messages in the DOM\r\n            const currentMessageIds = Array.from(chatMessages.children)\r\n              .filter(el => el.classList.contains('message'))\r\n              .map(el => el.getAttribute('data-message-id'))\r\n              .filter(id => id);\r\n            \r\n            // Check scroll position\r\n            detectUserScroll();\r\n            \r\n            // Add timestamp dividers\r\n            const messagesWithTimestamps = addTimestampDividers(messages);\r\n            \r\n            // Get DOM elements that should be in the view\r\n            const shouldContainIds = messagesWithTimestamps.map(m => m.id);\r\n\r\n            // Add typing indicator if streaming\r\n            if (isStreaming) {\r\n              if (!document.querySelector('.typing-indicator')) {\r\n                const typingIndicator = document.createElement('div');\r\n                typingIndicator.className = 'typing-indicator';\r\n                typingIndicator.innerHTML = \\`\r\n                  <span class=\"typing-dot\"></span>\r\n                  <span class=\"typing-dot\"></span>\r\n                  <span class=\"typing-dot\"></span>\r\n                \\`;\r\n                \r\n                // Add after last message\r\n                chatMessages.appendChild(typingIndicator);\r\n              }\r\n            } else {\r\n              // Remove typing indicator if present\r\n              const typingIndicator = document.querySelector('.typing-indicator');\r\n              if (typingIndicator) {\r\n                typingIndicator.remove();\r\n              }\r\n            }\r\n            \r\n            // Remove elements that should no longer be in the view\r\n            Array.from(chatMessages.children).forEach(el => {\r\n              const id = el.getAttribute('data-message-id');\r\n              // Keep timestamp dividers\r\n              if (!id || !shouldContainIds.includes(id)) {\r\n                // Don't remove typing indicator\r\n                if (!el.classList.contains('typing-indicator')) {\r\n                  el.remove();\r\n                }\r\n              }\r\n            });\r\n            \r\n            // Clear existing timestamp dividers (we'll recreate them)\r\n            Array.from(chatMessages.querySelectorAll('.timestamp-divider')).forEach(el => {\r\n              el.remove();\r\n            });\r\n            \r\n            // Create mapping for quick element lookup\r\n            const elementMap = {};\r\n            Array.from(chatMessages.children).forEach(el => {\r\n              const id = el.getAttribute('data-message-id');\r\n              if (id) {\r\n                elementMap[id] = el;\r\n              }\r\n            });\r\n            \r\n            // Process messages and add to DOM\r\n            let previousElement = null;\r\n            messagesWithTimestamps.forEach((item, index) => {\r\n              // Handle timestamp dividers\r\n              if (item.type === 'timestamp') {\r\n                const dividerElement = document.createElement('div');\r\n                dividerElement.className = 'timestamp-divider';\r\n                dividerElement.setAttribute('data-message-id', item.id);\r\n                \r\n                dividerElement.innerHTML = \\`\r\n                  <span class=\"timestamp-text\">\\${item.content}</span>\r\n                \\`;\r\n                \r\n                // Insert divider at correct position\r\n                if (previousElement) {\r\n                  previousElement.after(dividerElement);\r\n                } else {\r\n                  chatMessages.appendChild(dividerElement);\r\n                }\r\n                \r\n                previousElement = dividerElement;\r\n                return;\r\n              }\r\n              \r\n              // Handle regular messages\r\n              const message = item;\r\n              const messageId = message.id;\r\n              let messageElement = elementMap[messageId];\r\n              const isLastMessage = message.id === messages[messages.length - 1].id;\r\n              \r\n              // Create new message element if needed\r\n              if (!messageElement) {\r\n                messageElement = document.createElement('div');\r\n                messageElement.className = 'message ' + message.role;\r\n                messageElement.setAttribute('data-message-id', messageId);\r\n                \r\n                const contentElement = document.createElement('div');\r\n                contentElement.className = 'message-content';\r\n                messageElement.appendChild(contentElement);\r\n                \r\n                // Add read/delivered indicator for user messages\r\n                if (message.role === 'user') {\r\n                  const statusElement = document.createElement('div');\r\n                  statusElement.className = 'message-status';\r\n                  messageElement.appendChild(statusElement);\r\n                }\r\n                \r\n                // Insert at correct position\r\n                if (previousElement) {\r\n                  previousElement.after(messageElement);\r\n                } else {\r\n                  chatMessages.appendChild(messageElement);\r\n                }\r\n              }\r\n              \r\n              // Update content if changed\r\n              const contentElement = messageElement.querySelector('.message-content');\r\n              const formattedContent = formatMessageContent(message.content);\r\n              \r\n              if (contentElement.innerHTML !== formattedContent) {\r\n                contentElement.innerHTML = formattedContent;\r\n              }\r\n              \r\n              previousElement = messageElement;\r\n            });\r\n            \r\n            // Smart scroll (force scroll for new messages or when streaming ends)\r\n            performSmartScroll(messages.length !== currentMessageIds.length || !isStreaming);\r\n            \r\n            // Update UI based on streaming state\r\n            if (isStreaming) {\r\n              sendButton.innerHTML = \\`<span class=\"emoji-icon\">■</span>\\`;\r\n              sendButton.title = '생성 중단';\r\n              chatInput.disabled = true;\r\n            } else {\r\n              sendButton.innerHTML = \\`\r\n                <svg class=\"send-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M22 2L11 13\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                  <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n              \\`;\r\n              sendButton.title = '메시지 전송';\r\n              chatInput.disabled = false;\r\n            }\r\n          }\r\n          \r\n          // Format message content with code blocks and other formatting\r\n          function formatMessageContent(content) {\r\n            if (!content) return '';\r\n            \r\n            // If content is already HTML, return as is\r\n            const trimmedContent = content.trim();\r\n            if (trimmedContent.startsWith('<') && (\r\n              trimmedContent.includes('</div>') || \r\n              trimmedContent.includes('</p>') || \r\n              trimmedContent.includes('</h') || \r\n              trimmedContent.includes('</span>') ||\r\n              trimmedContent.includes('</ul>') ||\r\n              trimmedContent.includes('</li>') ||\r\n              trimmedContent.includes('</table>') ||\r\n              trimmedContent.match(/<[a-zA-Z0-9_]+[^>]*>/)\r\n            )) {\r\n              return content;\r\n            }\r\n            \r\n            // Format content\r\n            let formatted = content;\r\n            \r\n            // Replace code blocks with modern UI\r\n            formatted = formatted.replace(/\\`\\`\\`(\\\\w*)\\\\n([\\\\s\\\\S]*?)\\\\n\\`\\`\\`/g, function(match, language, code) {\r\n              const codeId = 'code_' + (++codeBlockCounter);\r\n              const escapedCode = escapeHtml(code);\r\n              const lang = language || 'plaintext';\r\n              \r\n              // Generate line numbers\r\n              const lines = code.split('\\\\n');\r\n              const lineNumbers = lines.map((_, i) => (i + 1)).join('\\\\n');\r\n              const showLineNumbers = lines.length > 1;\r\n              \r\n              // Create code block HTML\r\n              return '<div class=\"code-block-container code-block-popup\">' +\r\n                '<div class=\"code-block-header\">' +\r\n                  '<span class=\"code-block-language language-' + lang + '\">' + lang + '</span>' +\r\n                  '<div class=\"code-block-actions\">' +\r\n                    '<button class=\"code-action-button copy-button\" data-code-id=\"' + codeId + '\" title=\"복사\">' +\r\n                      '<i class=\"codicon codicon-copy\"></i>' +\r\n                      '<span class=\"tooltip\">클립보드에 복사</span>' +\r\n                    '</button>' +\r\n                    '<button class=\"code-action-button insert-code-button\" data-code-id=\"' + codeId + '\" title=\"에디터에 삽입\">' +\r\n                      '<i class=\"codicon codicon-arrow-small-right\"></i>' +\r\n                      '<span class=\"tooltip\">현재 파일에 복사</span>' +\r\n                    '</button>' +\r\n                    '<button class=\"code-action-button new-file-button\" data-code-id=\"' + codeId + '\" title=\"새 파일로 생성\">' +\r\n                      '<i class=\"codicon codicon-new-file\"></i>' +\r\n                      '<span class=\"tooltip\">새 파일로 생성</span>' +\r\n                    '</button>' +\r\n                  '</div>' +\r\n                '</div>' +\r\n                '<div class=\"code-content ' + (showLineNumbers ? 'with-line-numbers' : '') + '\">' +\r\n                  (showLineNumbers ? '<div class=\"line-numbers\">' + lineNumbers + '</div>' : '') +\r\n                  '<div class=\"code-area\">' +\r\n                    '<code class=\"language-' + lang + '\" id=\"code-' + codeId + '\">' + escapedCode + '</code>' +\r\n                  '</div>' +\r\n                '</div>' +\r\n              '</div>';\r\n            });\r\n            \r\n            // Replace inline code\r\n            formatted = formatted.replace(/\\`([^\\`]+)\\`/g, function(match, code) {\r\n              return '<code class=\"inline-code\">' + escapeHtml(code) + '</code>';\r\n            });\r\n            \r\n            // Replace newlines with <br>\r\n            formatted = formatted.replace(/\\\\n/g, '<br>');\r\n            \r\n            return formatted;\r\n          }\r\n          \r\n          // HTML escape function\r\n          function escapeHtml(unsafe) {\r\n            return unsafe\r\n              .replace(/&/g, \"&amp;\")\r\n              .replace(/</g, \"&lt;\")\r\n              .replace(/>/g, \"&gt;\")\r\n              .replace(/\"/g, \"&quot;\")\r\n              .replace(/'/g, \"&#039;\");\r\n          }\r\n          \r\n          // Handle editor content insertion\r\n          function handleEditorContent(content) {\r\n            if (content) {\r\n              chatInput.value += '\\`\\`\\`\\\\n' + content + '\\\\n\\`\\`\\`\\\\n';\r\n              resizeInput();\r\n            }\r\n          }\r\n          \r\n          // Auto-resize input based on content\r\n          function resizeInput() {\r\n            chatInput.style.height = 'auto';\r\n            chatInput.style.height = (chatInput.scrollHeight) + 'px';\r\n          }\r\n          \r\n          // Update command suggestions in popover\r\n          function updateCommandSuggestions(newSuggestions) {\r\n            suggestions = newSuggestions || [];\r\n            activeSuggestionIndex = -1;\r\n            \r\n            // Clear the container\r\n            commandSuggestionsContainer.innerHTML = '';\r\n            \r\n            if (suggestions.length === 0) {\r\n              // Hide the container if no suggestions\r\n              commandSuggestionsContainer.style.display = 'none';\r\n              return;\r\n            }\r\n            \r\n            // Position the suggestions container\r\n            positionCommandSuggestions();\r\n            \r\n            // Show the container\r\n            commandSuggestionsContainer.style.display = 'block';\r\n            \r\n            // Group suggestions by category\r\n            const categorizedSuggestions = {};\r\n            suggestions.forEach(suggestion => {\r\n              // Add category data attribute\r\n              suggestion.categoryAttr = suggestion.category;\r\n              \r\n              if (!categorizedSuggestions[suggestion.category]) {\r\n                categorizedSuggestions[suggestion.category] = [];\r\n              }\r\n              categorizedSuggestions[suggestion.category].push(suggestion);\r\n            });\r\n            \r\n            // Add each category and its suggestions\r\n            Object.keys(categorizedSuggestions).forEach(category => {\r\n              // Create category header\r\n              const categoryHeader = document.createElement('div');\r\n              categoryHeader.className = 'suggestion-category';\r\n              categoryHeader.textContent = getCategoryTitle(category);\r\n              commandSuggestionsContainer.appendChild(categoryHeader);\r\n              \r\n              // Add suggestions for this category\r\n              categorizedSuggestions[category].forEach((suggestion, index) => {\r\n                const suggestionElement = document.createElement('div');\r\n                suggestionElement.className = 'command-suggestion';\r\n                suggestionElement.dataset.category = suggestion.categoryAttr;\r\n                const suggestionIndex = suggestions.findIndex(s => s.label === suggestion.label);\r\n                suggestionElement.dataset.index = String(suggestionIndex);\r\n                \r\n                // Add icon\r\n                const iconElement = document.createElement('span');\r\n                iconElement.className = 'suggestion-icon';\r\n                iconElement.textContent = getSvgIconForCategory(suggestion.category);\r\n                suggestionElement.appendChild(iconElement);\r\n                \r\n                // Add label\r\n                const labelElement = document.createElement('span');\r\n                labelElement.className = 'suggestion-label';\r\n                labelElement.textContent = suggestion.label;\r\n                suggestionElement.appendChild(labelElement);\r\n                \r\n                // Add description\r\n                const descriptionElement = document.createElement('span');\r\n                descriptionElement.className = 'suggestion-description';\r\n                descriptionElement.textContent = suggestion.description;\r\n                suggestionElement.appendChild(descriptionElement);\r\n                \r\n                // Add click handler\r\n                suggestionElement.addEventListener('click', () => {\r\n                  insertSuggestion(suggestion);\r\n                });\r\n                \r\n                // Add mouseover handler\r\n                suggestionElement.addEventListener('mouseover', () => {\r\n                  activeSuggestionIndex = Number(suggestionElement.dataset.index);\r\n                  highlightActiveSuggestion();\r\n                });\r\n                \r\n                commandSuggestionsContainer.appendChild(suggestionElement);\r\n              });\r\n            });\r\n            \r\n            // Scroll to top\r\n            commandSuggestionsContainer.scrollTop = 0;\r\n          }\r\n          \r\n          // Position command suggestions popover\r\n          function positionCommandSuggestions() {\r\n            if (!chatInput || !commandSuggestionsContainer) return;\r\n            \r\n            // Get the input container's position\r\n            const inputContainer = document.getElementById('chat-input-container');\r\n            if (!inputContainer) return;\r\n            \r\n            const inputRect = inputContainer.getBoundingClientRect();\r\n            \r\n            // Set the position relative to the input container\r\n            commandSuggestionsContainer.style.position = 'absolute';\r\n            commandSuggestionsContainer.style.bottom = (inputRect.height + 8) + 'px';\r\n            commandSuggestionsContainer.style.left = '12px';\r\n            commandSuggestionsContainer.style.right = '12px';\r\n            \r\n            // Make sure it's visible\r\n            commandSuggestionsContainer.style.zIndex = '1000';\r\n          }\r\n          \r\n          // Get category title\r\n          function getCategoryTitle(category) {\r\n            switch (category) {\r\n              case 'general': return '일반 명령어';\r\n              case 'git': return 'Git 관련 명령어';\r\n              case 'code': return '코드 관련 명령어';\r\n              case 'utility': return '유틸리티 명령어';\r\n              case 'advanced': return '고급 명령어';\r\n              default: return category;\r\n            }\r\n          }\r\n          \r\n          // Get icon for category\r\n          function getSvgIconForCategory(category) {\r\n            switch (category) {\r\n              case 'general': return '✓';\r\n              case 'git': return '⎇';\r\n              case 'code': return '❮❯';\r\n              case 'utility': return '⚙';\r\n              case 'advanced': return '★';\r\n              default: return '○';\r\n            }\r\n          }\r\n          \r\n          // Highlight active suggestion\r\n          function highlightActiveSuggestion() {\r\n            // Remove highlight from all suggestions\r\n            document.querySelectorAll('.command-suggestion').forEach(el => {\r\n              el.classList.remove('active');\r\n            });\r\n            \r\n            // Highlight the active suggestion\r\n            if (activeSuggestionIndex >= 0 && activeSuggestionIndex < suggestions.length) {\r\n              const activeElement = document.querySelector(\r\n                '.command-suggestion[data-index=\"' + activeSuggestionIndex + '\"]'\r\n              );\r\n              \r\n              if (activeElement) {\r\n                activeElement.classList.add('active');\r\n                \r\n                // Scroll into view if needed\r\n                const container = commandSuggestionsContainer;\r\n                const elementTop = activeElement.offsetTop;\r\n                const elementBottom = elementTop + activeElement.offsetHeight;\r\n                const containerTop = container.scrollTop;\r\n                const containerBottom = containerTop + container.offsetHeight;\r\n                \r\n                if (elementTop < containerTop) {\r\n                  container.scrollTop = elementTop;\r\n                } else if (elementBottom > containerBottom) {\r\n                  container.scrollTop = elementBottom - container.offsetHeight;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          // Insert suggestion into input\r\n          function insertSuggestion(suggestion) {\r\n            if (!suggestion) return;\r\n            \r\n            chatInput.value = suggestion.insertText;\r\n            chatInput.focus();\r\n            \r\n            // Position cursor at the end\r\n            chatInput.selectionStart = chatInput.selectionEnd = chatInput.value.length;\r\n            \r\n            // Resize input\r\n            resizeInput();\r\n            \r\n            // Clear suggestions\r\n            updateCommandSuggestions([]);\r\n            \r\n            // Notify about input change\r\n            notifyInputChanged();\r\n          }\r\n          \r\n          // List of standalone commands (ones that can be auto-executed)\r\n          const standAloneCommands = ['help', 'clear', 'settings', 'model'];\r\n          \r\n          // Check if a command can be executed standalone\r\n          function isStandAloneCommand(commandText) {\r\n            if (!commandText.startsWith('/')) return false;\r\n            \r\n            const commandParts = commandText.substring(1).split(/ +/);\r\n            const baseCommand = commandParts[0];\r\n            \r\n            return standAloneCommands.includes(baseCommand) && commandParts.length === 1;\r\n          }\r\n          \r\n          // Send message function\r\n          function sendMessage() {\r\n            const content = chatInput.value.trim();\r\n            if (content) {\r\n              vscode.postMessage({ type: 'sendMessage', content });\r\n              chatInput.value = '';\r\n              resizeInput();\r\n              \r\n              // Clear suggestions\r\n              updateCommandSuggestions([]);\r\n            }\r\n          }\r\n          \r\n          // Navigate through suggestions\r\n          function navigateSuggestions(direction) {\r\n            if (suggestions.length === 0) return false;\r\n            \r\n            // Set active index to 0 if not set\r\n            if (activeSuggestionIndex === -1) {\r\n              activeSuggestionIndex = 0;\r\n              highlightActiveSuggestion();\r\n              return true;\r\n            }\r\n            \r\n            // Navigate based on direction\r\n            if (direction === 'up') {\r\n              activeSuggestionIndex = activeSuggestionIndex <= 0 ? \r\n                suggestions.length - 1 : activeSuggestionIndex - 1;\r\n            } else if (direction === 'down') {\r\n              activeSuggestionIndex = activeSuggestionIndex >= suggestions.length - 1 ? \r\n                0 : activeSuggestionIndex + 1;\r\n            }\r\n            \r\n            highlightActiveSuggestion();\r\n            return true;\r\n          }\r\n          \r\n          // Notify about input change\r\n          function notifyInputChanged() {\r\n            const inputValue = chatInput.value;\r\n            \r\n            vscode.postMessage({ \r\n              type: 'inputChanged', \r\n              content: inputValue \r\n            });\r\n          }\r\n          \r\n          // Insert command from help panel\r\n          function insertCommandFromHelp(command) {\r\n            // Add slash if not present\r\n            if (!command.startsWith('/')) {\r\n              command = '/' + command;\r\n            }\r\n            \r\n            // Set input value\r\n            chatInput.value = command;\r\n            chatInput.focus();\r\n            \r\n            // Position cursor at end\r\n            chatInput.selectionStart = chatInput.selectionEnd = chatInput.value.length;\r\n            \r\n            // Resize input and notify\r\n            resizeInput();\r\n            notifyInputChanged();\r\n          }\r\n          \r\n          // Set up event listeners for code actions\r\n          function setupCodeBlockListeners() {\r\n            chatMessages.addEventListener('click', event => {\r\n              const target = event.target;\r\n              \r\n              // Check for copy button\r\n              if (target.closest('.copy-button')) {\r\n                const button = target.closest('.copy-button');\r\n                const codeId = button.getAttribute('data-code-id');\r\n                const codeElement = document.getElementById('code-' + codeId);\r\n                \r\n                if (codeElement) {\r\n                  vscode.postMessage({ \r\n                    type: 'copyCode', \r\n                    code: codeElement.textContent \r\n                  });\r\n                  \r\n                  // Show copied feedback\r\n                  button.classList.add('copied');\r\n                  setTimeout(() => {\r\n                    button.classList.remove('copied');\r\n                  }, 2000);\r\n                }\r\n              }\r\n              \r\n              // Check for insert code button\r\n              if (target.closest('.insert-code-button')) {\r\n                const button = target.closest('.insert-code-button');\r\n                const codeId = button.getAttribute('data-code-id');\r\n                const codeElement = document.getElementById('code-' + codeId);\r\n                \r\n                if (codeElement) {\r\n                  vscode.postMessage({ \r\n                    type: 'insertCodeToEditor', \r\n                    code: codeElement.textContent \r\n                  });\r\n                }\r\n              }\r\n              \r\n              // Check for new file button\r\n              if (target.closest('.new-file-button')) {\r\n                const button = target.closest('.new-file-button');\r\n                const codeId = button.getAttribute('data-code-id');\r\n                const codeElement = document.getElementById('code-' + codeId);\r\n                const languageElement = button.closest('.code-block-container').querySelector('.code-block-language');\r\n                \r\n                if (codeElement) {\r\n                  const language = languageElement ? \r\n                    languageElement.textContent.trim() || 'plaintext' : \r\n                    'plaintext';\r\n                    \r\n                  vscode.postMessage({ \r\n                    type: 'createFileWithCode', \r\n                    code: codeElement.textContent,\r\n                    language: language\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Initialize UI\r\n          function init() {\r\n            console.log(\"Initializing iOS-style chat UI\");\r\n            \r\n            // Get DOM elements\r\n            chatMessages = document.getElementById('chat-messages');\r\n            chatInput = document.getElementById('chat-input');\r\n            sendButton = document.getElementById('send-button');\r\n            clearButton = document.getElementById('clear-button');\r\n            modelIndicator = document.getElementById('model-name');\r\n            modelSelector = document.getElementById('model-selector');\r\n            commandSuggestionsContainer = document.getElementById('command-suggestions');\r\n            \r\n            // Get Smart Prompting elements\r\n            smartPromptingToggle = document.getElementById('smart-prompting-toggle');\r\n            smartPromptingLabel = document.getElementById('smart-prompting-label');\r\n\r\n            // Check if elements are found\r\n            if (!chatMessages || !chatInput || !sendButton || !clearButton ||\r\n                !commandSuggestionsContainer || !smartPromptingToggle || !smartPromptingLabel) {\r\n              console.error(\"Critical UI elements missing\");\r\n              setTimeout(init, 500);\r\n              return;\r\n            }\r\n            \r\n            console.log(\"UI elements initialized successfully\");\r\n            \r\n            // Set up smart scroll detection\r\n            chatMessages.addEventListener('scroll', detectUserScroll);\r\n            \r\n            // Set up event listeners\r\n            sendButton.addEventListener('click', () => {\r\n              if (chatInput.disabled) {\r\n                vscode.postMessage({ type: 'cancelStream' });\r\n              } else {\r\n                sendMessage();\r\n              }\r\n            });\r\n            \r\n            clearButton.addEventListener('click', () => {\r\n              vscode.postMessage({ type: 'clearChat' });\r\n            });\r\n            \r\n            chatInput.addEventListener('input', () => {\r\n              resizeInput();\r\n              notifyInputChanged();\r\n              \r\n              // Directly check for slash commands here as well\r\n              if (chatInput.value.startsWith('/')) {\r\n                console.log('Slash command detected:', chatInput.value);\r\n              }\r\n            });\r\n            \r\n            chatInput.addEventListener('keydown', (e) => {\r\n              if (suggestions.length > 0) {\r\n                if (e.key === 'ArrowUp') {\r\n                  if (navigateSuggestions('up')) {\r\n                    e.preventDefault();\r\n                    return;\r\n                  }\r\n                } else if (e.key === 'ArrowDown') {\r\n                  if (navigateSuggestions('down')) {\r\n                    e.preventDefault();\r\n                    return;\r\n                  }\r\n                } else if (e.key === 'Enter' && activeSuggestionIndex >= 0) {\r\n                  if (activeSuggestionIndex >= 0 && activeSuggestionIndex < suggestions.length) {\r\n                    const suggestion = suggestions[activeSuggestionIndex];\r\n                    insertSuggestion(suggestion);\r\n                    \r\n                    if (isStandAloneCommand(suggestion.insertText)) {\r\n                      e.preventDefault();\r\n                      sendMessage();\r\n                    }\r\n                    return;\r\n                  }\r\n                } else if (e.key === 'Escape') {\r\n                  updateCommandSuggestions([]);\r\n                  e.preventDefault();\r\n                  return;\r\n                }\r\n              }\r\n              \r\n              if (e.key === 'Enter' && !e.shiftKey) {\r\n                e.preventDefault();\r\n                sendMessage();\r\n              } else if (e.key === '/' && chatInput.value === '') {\r\n                // Special handling for slash key\r\n                setTimeout(() => {\r\n                  notifyInputChanged();\r\n                  console.log('Slash key pressed on empty input');\r\n                }, 10);\r\n              }\r\n            });\r\n            \r\n            modelSelector.addEventListener('click', () => {\r\n              vscode.postMessage({ type: 'showModelSelector' });\r\n            });\r\n\r\n            // Smart Prompting toggle click handler\r\n            smartPromptingToggle.addEventListener('click', () => {\r\n              vscode.postMessage({ type: 'toggleSmartPrompting' });\r\n            });\r\n            \r\n            // Set up code block action listeners\r\n            setupCodeBlockListeners();\r\n            \r\n            // Initialize with stored messages\r\n            const state = vscode.getState();\r\n            if (state && state.messages) {\r\n              updateMessages(state.messages, isStreaming);\r\n            } else {\r\n              updateMessages(initialMessages, isStreaming);\r\n            }\r\n            \r\n            // Set initial input height\r\n            resizeInput();\r\n            \r\n            // Set focus to input\r\n            setTimeout(() => {\r\n              if (chatInput) {\r\n                chatInput.focus();\r\n              }\r\n            }, 300);\r\n          }\r\n          \r\n          // Start the app when document is ready\r\n          if (document.readyState === 'complete' || document.readyState === 'interactive') {\r\n            console.log('Document already ready, initializing chat view immediately');\r\n            setTimeout(init, 0);\r\n          } else {\r\n            console.log('Waiting for DOMContentLoaded before initializing chat view');\r\n            document.addEventListener('DOMContentLoaded', () => {\r\n              console.log('DOMContentLoaded fired, initializing chat view');\r\n              init();\r\n            });\r\n          }\r\n        })();\r\n      </script>\r\n    </body>\r\n    </html>`;\r\n  }\r\n\r\n  /**\r\n   * Generates a random nonce for CSP\r\n   */\r\n  private _getNonce(): string {\r\n    let text = '';\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < 32; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n  \r\n  /**\r\n   * Updates the Smart Prompting UI with the current state\r\n   * @param state The current SmartPromptingState\r\n   */\r\n  public _updateSmartPromptingUI(state: SmartPromptingState): void {\r\n    if (!this._view) {\r\n      return;\r\n    }\r\n\r\n    // Send update message to webview\r\n    this._view.webview.postMessage({\r\n      type: 'updateSmartPrompting',\r\n      enabled: state.enabled,\r\n      mode: state.mode\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Open attached file - required for interface compatibility\r\n   * No-op in this implementation as we don't need this feature for the iPhone style\r\n   */\r\n  public _openAttachedFile(filePath: string): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { \r\n  PluginAPI, \r\n  LLMServiceAPI, \r\n  MemoryServiceAPI, \r\n  UIServiceAPI,\r\n  FileSystemAPI,\r\n  GitServiceAPI,\r\n  WorkspaceAPI,\r\n  DebugAPI,\r\n  ServiceResult\r\n} from '../types/api';\r\nimport { EventEmitter } from '../types/events';\r\nimport { LLMService } from '../../core/llm/llmService';\r\nimport { MemoryService } from '../../core/memory/memoryService';\r\nimport { Message, LLMModel, LLMRequestOptions, LLMResponse } from '../../types/chat';\r\n\r\n/**\r\n * Implementation of the LLM Service API\r\n */\r\nclass LLMServiceAPIImpl implements LLMServiceAPI {\r\n  constructor(private readonly _llmService: LLMService) {}\r\n  \r\n  /**\r\n   * Get currently active LLM model\r\n   * @returns Active LLM model\r\n   */\r\n  public getActiveModel(): LLMModel {\r\n    return this._llmService.getActiveModel();\r\n  }\r\n  \r\n  /**\r\n   * Set active LLM model\r\n   * @param model Model to set as active\r\n   */\r\n  public setActiveModel(model: LLMModel): void {\r\n    this._llmService.setActiveModel(model);\r\n  }\r\n  \r\n  /**\r\n   * Get available LLM models\r\n   * @returns Array of available models\r\n   */\r\n  public getAvailableModels(): LLMModel[] {\r\n    return this._llmService.getAvailableModels();\r\n  }\r\n  \r\n  /**\r\n   * Send a request to the LLM\r\n   * @param messages Messages to send\r\n   * @param options Request options\r\n   * @returns Promise that resolves to a service result containing the response\r\n   */\r\n  public async sendRequest(\r\n    messages: Message[],\r\n    options?: LLMRequestOptions\r\n  ): Promise<ServiceResult<LLMResponse>> {\r\n    return await this._llmService.sendRequest(messages, options);\r\n  }\r\n  \r\n  /**\r\n   * Stream a response from the LLM\r\n   * @param messages Messages to send\r\n   * @param onChunk Callback for each chunk of the response\r\n   * @param options Request options\r\n   * @returns Promise that resolves to a service result indicating success\r\n   */\r\n  public async streamResponse(\r\n    messages: Message[],\r\n    onChunk: (chunk: string, done: boolean) => void,\r\n    options?: LLMRequestOptions\r\n  ): Promise<ServiceResult<void>> {\r\n    return await this._llmService.streamResponse(messages, onChunk, options);\r\n  }\r\n  \r\n  /**\r\n   * Cancel an ongoing streaming response\r\n   */\r\n  public cancelStream(): void {\r\n    this._llmService.cancelStream();\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the Memory Service API\r\n */\r\nclass MemoryServiceAPIImpl implements MemoryServiceAPI {\r\n  constructor(private readonly _memoryService: MemoryService) {}\r\n  \r\n  /**\r\n   * Get current session ID\r\n   * @returns Current session ID or null if no session is active\r\n   */\r\n  public getCurrentSessionId(): string | null {\r\n    return this._memoryService.getCurrentSessionId();\r\n  }\r\n  \r\n  /**\r\n   * Get messages from current session\r\n   * @returns Promise that resolves to a service result containing messages\r\n   */\r\n  public async getMessages(): Promise<ServiceResult<Message[]>> {\r\n    return await this._memoryService.getMessages();\r\n  }\r\n  \r\n  /**\r\n   * Add a message to the current session\r\n   * @param message Message to add\r\n   * @returns Promise that resolves to a service result indicating success\r\n   */\r\n  public async addMessage(message: Message): Promise<ServiceResult<void>> {\r\n    return await this._memoryService.addMessage(message);\r\n  }\r\n  \r\n  /**\r\n   * Create a new session\r\n   * @param options Session creation options\r\n   * @returns Promise that resolves to a service result containing the session ID\r\n   */\r\n  public async createSession(options: { name: string; metadata?: any }): Promise<ServiceResult<string>> {\r\n    return await this._memoryService.createSession(options.name, { metadata: options.metadata });\r\n  }\r\n  \r\n  /**\r\n   * Switch to a different session\r\n   * @param sessionId Session ID to switch to\r\n   * @returns Promise that resolves to a service result indicating success\r\n   */\r\n  public async switchSession(sessionId: string): Promise<ServiceResult<boolean>> {\r\n    return await this._memoryService.switchSession(sessionId);\r\n  }\r\n  \r\n  /**\r\n   * Get all available sessions\r\n   * @returns Promise that resolves to a service result containing session summaries\r\n   */\r\n  public async getSessions(): Promise<ServiceResult<Array<{\r\n    id: string;\r\n    name: string;\r\n    messageCount: number;\r\n    updatedAt: Date;\r\n  }>>> {\r\n    const result = await this._memoryService.getSessions();\r\n    \r\n    if (result.success && result.data) {\r\n      const simplifiedSessions = result.data.map(session => ({\r\n        id: session.id,\r\n        name: session.name,\r\n        messageCount: session.messageCount,\r\n        updatedAt: session.updatedAt\r\n      }));\r\n      \r\n      return {\r\n        success: true,\r\n        data: simplifiedSessions\r\n      };\r\n    }\r\n    \r\n    return result as any;\r\n  }\r\n  \r\n  /**\r\n   * Clear messages from current session\r\n   * @returns Promise that resolves to a service result indicating success\r\n   */\r\n  public async clearMessages(): Promise<ServiceResult<void>> {\r\n    return await this._memoryService.clearMessages();\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the UI Service API\r\n */\r\nclass UIServiceAPIImpl implements UIServiceAPI {\r\n  /**\r\n   * Show an information message\r\n   * @param message Message to show\r\n   * @param items Items to include in the message\r\n   * @returns Promise that resolves to the selected item\r\n   */\r\n  public async showInformationMessage(\r\n    message: string,\r\n    ...items: string[]\r\n  ): Promise<string | undefined> {\r\n    return await vscode.window.showInformationMessage(message, ...items);\r\n  }\r\n  \r\n  /**\r\n   * Show a warning message\r\n   * @param message Message to show\r\n   * @param items Items to include in the message\r\n   * @returns Promise that resolves to the selected item\r\n   */\r\n  public async showWarningMessage(\r\n    message: string,\r\n    ...items: string[]\r\n  ): Promise<string | undefined> {\r\n    return await vscode.window.showWarningMessage(message, ...items);\r\n  }\r\n  \r\n  /**\r\n   * Show an error message\r\n   * @param message Message to show\r\n   * @param items Items to include in the message\r\n   * @returns Promise that resolves to the selected item\r\n   */\r\n  public async showErrorMessage(\r\n    message: string,\r\n    ...items: string[]\r\n  ): Promise<string | undefined> {\r\n    return await vscode.window.showErrorMessage(message, ...items);\r\n  }\r\n  \r\n  /**\r\n   * Show quick pick selection\r\n   * @param items Items to show in the quick pick\r\n   * @param options Quick pick options\r\n   * @returns Promise that resolves to the selected item\r\n   */\r\n  public async showQuickPick(\r\n    items: string[] | vscode.QuickPickItem[],\r\n    options?: vscode.QuickPickOptions\r\n  ): Promise<string | vscode.QuickPickItem | undefined> {\r\n    // Convert string items to QuickPickItems if needed\r\n    const quickPickItems = Array.isArray(items) && items.length > 0 && typeof items[0] === 'string'\r\n      ? (items as string[]).map(item => ({ label: item }))\r\n      : (items as vscode.QuickPickItem[]);\r\n    \r\n    return await vscode.window.showQuickPick(quickPickItems, options);\r\n  }\r\n  \r\n  /**\r\n   * Show input box\r\n   * @param options Input box options\r\n   * @returns Promise that resolves to the entered text\r\n   */\r\n  public async showInputBox(\r\n    options?: vscode.InputBoxOptions\r\n  ): Promise<string | undefined> {\r\n    return await vscode.window.showInputBox(options);\r\n  }\r\n  \r\n  /**\r\n   * Create and show a webview panel\r\n   * @param viewType Type of the webview\r\n   * @param title Title of the webview\r\n   * @param options Webview options\r\n   * @returns The created webview panel\r\n   */\r\n  public createWebviewPanel(\r\n    viewType: string,\r\n    title: string,\r\n    options?: { viewColumn?: vscode.ViewColumn; preserveFocus?: boolean }\r\n  ): vscode.WebviewPanel {\r\n    const viewColumn = options?.viewColumn || vscode.ViewColumn.Active;\r\n    const preserveFocus = options?.preserveFocus || false;\r\n    \r\n    return vscode.window.createWebviewPanel(\r\n      viewType,\r\n      title,\r\n      { viewColumn, preserveFocus }\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * Create status bar item\r\n   * @param options Status bar item options\r\n   * @returns The created status bar item\r\n   */\r\n  public createStatusBarItem(\r\n    options?: { alignment?: vscode.StatusBarAlignment; priority?: number }\r\n  ): vscode.StatusBarItem {\r\n    const alignment = options?.alignment || vscode.StatusBarAlignment.Left;\r\n    const priority = options?.priority || 0;\r\n    \r\n    return vscode.window.createStatusBarItem(alignment, priority);\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the File System API\r\n */\r\nclass FileSystemAPIImpl implements FileSystemAPI {\r\n  /**\r\n   * Read file contents\r\n   * @param uri File URI\r\n   * @returns Promise that resolves to file contents\r\n   */\r\n  public async readFile(uri: vscode.Uri): Promise<Uint8Array> {\r\n    return await vscode.workspace.fs.readFile(uri);\r\n  }\r\n  \r\n  /**\r\n   * Read file as text\r\n   * @param uri File URI\r\n   * @returns Promise that resolves to file contents as text\r\n   */\r\n  public async readFileAsText(uri: vscode.Uri): Promise<string> {\r\n    const data = await vscode.workspace.fs.readFile(uri);\r\n    return new TextDecoder().decode(data);\r\n  }\r\n  \r\n  /**\r\n   * Write data to a file\r\n   * @param uri File URI\r\n   * @param content Content to write\r\n   * @returns Promise that resolves when the file is written\r\n   */\r\n  public async writeFile(uri: vscode.Uri, content: Uint8Array): Promise<void> {\r\n    await vscode.workspace.fs.writeFile(uri, content);\r\n  }\r\n  \r\n  /**\r\n   * Write text to a file\r\n   * @param uri File URI\r\n   * @param content Content to write\r\n   * @returns Promise that resolves when the file is written\r\n   */\r\n  public async writeFileAsText(uri: vscode.Uri, content: string): Promise<void> {\r\n    const data = new TextEncoder().encode(content);\r\n    await vscode.workspace.fs.writeFile(uri, data);\r\n  }\r\n  \r\n  /**\r\n   * Delete a file\r\n   * @param uri File URI\r\n   * @returns Promise that resolves when the file is deleted\r\n   */\r\n  public async deleteFile(uri: vscode.Uri): Promise<void> {\r\n    await vscode.workspace.fs.delete(uri);\r\n  }\r\n  \r\n  /**\r\n   * Check if a file exists\r\n   * @param uri File URI\r\n   * @returns Promise that resolves to true if the file exists\r\n   */\r\n  public async fileExists(uri: vscode.Uri): Promise<boolean> {\r\n    try {\r\n      await vscode.workspace.fs.stat(uri);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * List files in a directory\r\n   * @param uri Directory URI\r\n   * @returns Promise that resolves to an array of files and their types\r\n   */\r\n  public async readDirectory(uri: vscode.Uri): Promise<[string, vscode.FileType][]> {\r\n    return await vscode.workspace.fs.readDirectory(uri);\r\n  }\r\n  \r\n  /**\r\n   * Create a directory\r\n   * @param uri Directory URI\r\n   * @returns Promise that resolves when the directory is created\r\n   */\r\n  public async createDirectory(uri: vscode.Uri): Promise<void> {\r\n    await vscode.workspace.fs.createDirectory(uri);\r\n  }\r\n  \r\n  /**\r\n   * Delete a directory\r\n   * @param uri Directory URI\r\n   * @param options Delete options\r\n   * @returns Promise that resolves when the directory is deleted\r\n   */\r\n  public async deleteDirectory(\r\n    uri: vscode.Uri,\r\n    options?: { recursive?: boolean }\r\n  ): Promise<void> {\r\n    await vscode.workspace.fs.delete(uri, {\r\n      recursive: options?.recursive || false,\r\n      useTrash: false\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Rename a file or directory\r\n   * @param oldUri Old URI\r\n   * @param newUri New URI\r\n   * @returns Promise that resolves when the rename is complete\r\n   */\r\n  public async rename(oldUri: vscode.Uri, newUri: vscode.Uri): Promise<void> {\r\n    await vscode.workspace.fs.rename(oldUri, newUri);\r\n  }\r\n  \r\n  /**\r\n   * Copy a file or directory\r\n   * @param source Source URI\r\n   * @param target Target URI\r\n   * @returns Promise that resolves when the copy is complete\r\n   */\r\n  public async copy(source: vscode.Uri, target: vscode.Uri): Promise<void> {\r\n    await vscode.workspace.fs.copy(source, target);\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the Git Service API\r\n */\r\nclass GitServiceAPIImpl implements GitServiceAPI {\r\n  /**\r\n   * Get Git repositories in workspace\r\n   * @returns Promise that resolves to an array of repository URIs\r\n   */\r\n  public async getRepositories(): Promise<vscode.Uri[]> {\r\n    try {\r\n      // Try to get git extension\r\n      const gitExtension = vscode.extensions.getExtension('vscode.git')?.exports;\r\n      \r\n      if (gitExtension) {\r\n        const api = gitExtension.getAPI(1);\r\n        if (api) {\r\n          // Return URIs for all repositories\r\n          return api.repositories.map((repo: any) => {\r\n            return vscode.Uri.parse(repo.rootUri.toString());\r\n          });\r\n        }\r\n      }\r\n      \r\n      // If extension not available or no repositories, try to infer from workspace folders\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n      if (workspaceFolders && workspaceFolders.length > 0) {\r\n        // Filter to include only folders that contain a .git directory\r\n        const repoFolders: vscode.Uri[] = [];\r\n        \r\n        for (const folder of workspaceFolders) {\r\n          try {\r\n            const gitFolder = vscode.Uri.joinPath(folder.uri, '.git');\r\n            const stat = await vscode.workspace.fs.stat(gitFolder);\r\n            if (stat.type === vscode.FileType.Directory) {\r\n              repoFolders.push(folder.uri);\r\n            }\r\n          } catch (e) {\r\n            // No .git folder, skip\r\n          }\r\n        }\r\n        \r\n        return repoFolders;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Git repositories:', error);\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  /**\r\n   * Get current branch name\r\n   * @param repoUri Repository URI\r\n   * @returns Promise that resolves to the branch name\r\n   */\r\n  public async getCurrentBranch(repoUri: vscode.Uri): Promise<string> {\r\n    try {\r\n      // Try to get git extension\r\n      const gitExtension = vscode.extensions.getExtension('vscode.git')?.exports;\r\n      \r\n      if (gitExtension) {\r\n        const api = gitExtension.getAPI(1);\r\n        if (api) {\r\n          const repo = api.repositories.find((r: any) => \r\n            r.rootUri.toString() === repoUri.toString()\r\n          );\r\n          \r\n          if (repo) {\r\n            return repo.state.HEAD?.name || 'main';\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If extension not available, try to read from .git/HEAD\r\n      try {\r\n        const headFile = vscode.Uri.joinPath(repoUri, '.git', 'HEAD');\r\n        const headContent = await vscode.workspace.fs.readFile(headFile);\r\n        const headText = new TextDecoder().decode(headContent);\r\n        const match = /ref: refs\\/heads\\/(.+)/.exec(headText);\r\n        \r\n        if (match && match[1]) {\r\n          return match[1];\r\n        }\r\n      } catch (e) {\r\n        // Failed to read HEAD file\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting current branch:', error);\r\n    }\r\n    \r\n    return 'main'; // Default fallback\r\n  }\r\n  \r\n  /**\r\n   * Get repository status\r\n   * @param repoUri Repository URI\r\n   * @returns Promise that resolves to an array of resource states\r\n   */\r\n  public async getStatus(repoUri: vscode.Uri): Promise<vscode.SourceControlResourceState[]> {\r\n    try {\r\n      // Try to get git extension\r\n      const gitExtension = vscode.extensions.getExtension('vscode.git')?.exports;\r\n      \r\n      if (gitExtension) {\r\n        const api = gitExtension.getAPI(1);\r\n        if (api) {\r\n          const repo = api.repositories.find((r: any) => \r\n            r.rootUri.toString() === repoUri.toString()\r\n          );\r\n          \r\n          if (repo) {\r\n            // Combine working tree and index changes\r\n            return [\r\n              ...repo.state.workingTreeChanges,\r\n              ...repo.state.indexChanges\r\n            ];\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting repository status:', error);\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  /**\r\n   * Commit changes\r\n   * @param repoUri Repository URI\r\n   * @param message Commit message\r\n   * @param stagedOnly Whether to commit only staged changes\r\n   * @returns Promise that resolves when the commit is complete\r\n   */\r\n  public async commit(repoUri: vscode.Uri, message: string, stagedOnly?: boolean): Promise<void> {\r\n    // This implementation now correctly handles the repository URI parameter\r\n    try {\r\n      await vscode.commands.executeCommand('git.commit', { \r\n        repository: repoUri.toString(),\r\n        message: message,\r\n        stagedOnly: stagedOnly || false\r\n      });\r\n    } catch (error) {\r\n      console.error('Error committing changes:', error);\r\n      // Fallback to default git command if the repository-specific command fails\r\n      await vscode.commands.executeCommand('git.commit', stagedOnly);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Create a new branch\r\n   * @param repoUri Repository URI\r\n   * @param name Branch name\r\n   * @param checkout Whether to checkout the new branch\r\n   * @returns Promise that resolves when the branch is created\r\n   */\r\n  public async createBranch(repoUri: vscode.Uri, name: string, checkout?: boolean): Promise<void> {\r\n    // This implementation now correctly handles the repository URI parameter\r\n    try {\r\n      await vscode.commands.executeCommand('git.branch', {\r\n        repository: repoUri.toString(),\r\n        name: name,\r\n        checkout: checkout || false\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating branch:', error);\r\n      // Fallback to default git command if the repository-specific command fails\r\n      await vscode.commands.executeCommand('git.createBranch', name);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Checkout a branch\r\n   * @param repoUri Repository URI\r\n   * @param name Branch name\r\n   * @returns Promise that resolves when the branch is checked out\r\n   */\r\n  public async checkoutBranch(repoUri: vscode.Uri, name: string): Promise<void> {\r\n    // This implementation now correctly handles the repository URI parameter\r\n    try {\r\n      await vscode.commands.executeCommand('git.checkout', {\r\n        repository: repoUri.toString(),\r\n        name: name\r\n      });\r\n    } catch (error) {\r\n      console.error('Error checking out branch:', error);\r\n      // Fallback to default git command if the repository-specific command fails\r\n      await vscode.commands.executeCommand('git.checkout', name);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Pull changes\r\n   * @param repoUri Repository URI\r\n   * @returns Promise that resolves when the pull is complete\r\n   */\r\n  public async pull(repoUri: vscode.Uri): Promise<void> {\r\n    // This implementation now correctly handles the repository URI parameter\r\n    try {\r\n      await vscode.commands.executeCommand('git.pull', {\r\n        repository: repoUri.toString()\r\n      });\r\n    } catch (error) {\r\n      console.error('Error pulling changes:', error);\r\n      // Fallback to default git command if the repository-specific command fails\r\n      await vscode.commands.executeCommand('git.pull');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Push changes\r\n   * @param repoUri Repository URI\r\n   * @param forcePush Whether to force push\r\n   * @returns Promise that resolves when the push is complete\r\n   */\r\n  public async push(repoUri: vscode.Uri, forcePush?: boolean): Promise<void> {\r\n    // This implementation now correctly handles the repository URI parameter\r\n    try {\r\n      await vscode.commands.executeCommand('git.push', {\r\n        repository: repoUri.toString(),\r\n        forcePush: forcePush || false\r\n      });\r\n    } catch (error) {\r\n      console.error('Error pushing changes:', error);\r\n      // Fallback to default git command if the repository-specific command fails\r\n      await vscode.commands.executeCommand('git.push', forcePush ? '--force' : undefined);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the Workspace API\r\n */\r\nclass WorkspaceAPIImpl implements WorkspaceAPI {\r\n  /**\r\n   * Get workspace folders\r\n   * @returns Workspace folders or undefined if none\r\n   */\r\n  public getWorkspaceFolders(): readonly vscode.WorkspaceFolder[] | undefined {\r\n    return vscode.workspace.workspaceFolders;\r\n  }\r\n  \r\n  /**\r\n   * Find files matching a glob pattern\r\n   * @param include Include pattern\r\n   * @param exclude Exclude pattern\r\n   * @returns Promise that resolves to an array of matching file URIs\r\n   */\r\n  public async findFiles(\r\n    include: vscode.GlobPattern,\r\n    exclude?: vscode.GlobPattern\r\n  ): Promise<vscode.Uri[]> {\r\n    return await vscode.workspace.findFiles(include, exclude);\r\n  }\r\n  \r\n  /**\r\n   * Save all dirty editors\r\n   * @param includeUntitled Whether to include untitled documents\r\n   * @returns Promise that resolves to true if all files were saved\r\n   */\r\n  public async saveAll(includeUntitled?: boolean): Promise<boolean> {\r\n    return await vscode.workspace.saveAll(includeUntitled);\r\n  }\r\n  \r\n  /**\r\n   * Open a text document\r\n   * @param uri Document URI\r\n   * @returns Promise that resolves to the opened document\r\n   */\r\n  public async openTextDocument(uri: vscode.Uri): Promise<vscode.TextDocument> {\r\n    return await vscode.workspace.openTextDocument(uri);\r\n  }\r\n  \r\n  /**\r\n   * Create a file system watcher\r\n   * @param globPattern Glob pattern to watch\r\n   * @param ignoreCreateEvents Whether to ignore create events\r\n   * @param ignoreChangeEvents Whether to ignore change events\r\n   * @param ignoreDeleteEvents Whether to ignore delete events\r\n   * @returns File system watcher\r\n   */\r\n  public createFileSystemWatcher(\r\n    globPattern: vscode.GlobPattern,\r\n    ignoreCreateEvents?: boolean,\r\n    ignoreChangeEvents?: boolean,\r\n    ignoreDeleteEvents?: boolean\r\n  ): vscode.FileSystemWatcher {\r\n    return vscode.workspace.createFileSystemWatcher(\r\n      globPattern,\r\n      ignoreCreateEvents,\r\n      ignoreChangeEvents,\r\n      ignoreDeleteEvents\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * Register a text document content provider\r\n   * @param scheme URI scheme\r\n   * @param provider Content provider\r\n   * @returns Disposable for unregistering\r\n   */\r\n  public registerTextDocumentContentProvider(\r\n    scheme: string,\r\n    provider: vscode.TextDocumentContentProvider\r\n  ): vscode.Disposable {\r\n    return vscode.workspace.registerTextDocumentContentProvider(scheme, provider);\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the Debug API\r\n */\r\nclass DebugAPIImpl implements DebugAPI {\r\n  /**\r\n   * Register a debug adapter descriptor factory\r\n   * @param debugType Debug type\r\n   * @param factory Factory implementation\r\n   * @returns Disposable for unregistering\r\n   */\r\n  public registerDebugAdapterDescriptorFactory(\r\n    debugType: string,\r\n    factory: vscode.DebugAdapterDescriptorFactory\r\n  ): vscode.Disposable {\r\n    return vscode.debug.registerDebugAdapterDescriptorFactory(debugType, factory);\r\n  }\r\n  \r\n  /**\r\n   * Start debugging\r\n   * @param folder Workspace folder\r\n   * @param nameOrConfig Debug configuration name or configuration object\r\n   * @returns Promise that resolves to true if debugging started\r\n   */\r\n  public async startDebugging(\r\n    folder: vscode.WorkspaceFolder | undefined,\r\n    nameOrConfig: string | vscode.DebugConfiguration\r\n  ): Promise<boolean> {\r\n    return await vscode.debug.startDebugging(folder, nameOrConfig);\r\n  }\r\n  \r\n  /**\r\n   * Add breakpoints\r\n   * @param breakpoints Breakpoints to add\r\n   */\r\n  public addBreakpoints(breakpoints: vscode.Breakpoint[]): void {\r\n    vscode.debug.addBreakpoints(breakpoints);\r\n  }\r\n  \r\n  /**\r\n   * Remove breakpoints\r\n   * @param breakpoints Breakpoints to remove\r\n   */\r\n  public removeBreakpoints(breakpoints: vscode.Breakpoint[]): void {\r\n    vscode.debug.removeBreakpoints(breakpoints);\r\n  }\r\n  \r\n  /**\r\n   * Get current debug session\r\n   * @returns Active debug session or undefined if none\r\n   */\r\n  public getActiveDebugSession(): vscode.DebugSession | undefined {\r\n    return vscode.debug.activeDebugSession;\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of the Plugin API\r\n */\r\nexport class PluginAPIImpl implements PluginAPI {\r\n  public readonly vscode = vscode;\r\n  public readonly llm: LLMServiceAPI;\r\n  public readonly memory: MemoryServiceAPI;\r\n  public readonly ui: UIServiceAPI;\r\n  public readonly fs: FileSystemAPI;\r\n  public readonly git: GitServiceAPI;\r\n  public readonly workspace: WorkspaceAPI;\r\n  public readonly debug: DebugAPI;\r\n  \r\n  /**\r\n   * Creates a new Plugin API implementation\r\n   * @param _llmService LLM service\r\n   * @param _memoryService Memory service\r\n   * @param _events Event emitter\r\n   */\r\n  constructor(\r\n    private readonly _llmService: LLMService,\r\n    private readonly _memoryService: MemoryService,\r\n    public readonly events: EventEmitter\r\n  ) {\r\n    // Initialize API implementations\r\n    this.llm = new LLMServiceAPIImpl(_llmService);\r\n    this.memory = new MemoryServiceAPIImpl(_memoryService);\r\n    this.ui = new UIServiceAPIImpl();\r\n    this.fs = new FileSystemAPIImpl();\r\n    this.git = new GitServiceAPIImpl();\r\n    this.workspace = new WorkspaceAPIImpl();\r\n    this.debug = new DebugAPIImpl();\r\n  }\r\n  \r\n  /**\r\n   * Register a command with VSCode\r\n   * @param command Command ID\r\n   * @param callback Command implementation\r\n   * @param thisArg 'this' context for the callback\r\n   * @returns Disposable for unregistering the command\r\n   */\r\n  public registerCommand(\r\n    command: string,\r\n    callback: (...args: any[]) => any,\r\n    thisArg?: any\r\n  ): vscode.Disposable {\r\n    return vscode.commands.registerCommand(command, callback, thisArg);\r\n  }\r\n  \r\n  /**\r\n   * Execute a command\r\n   * @param command Command ID\r\n   * @param args Command arguments\r\n   * @returns Promise that resolves to the command result\r\n   */\r\n  public async executeCommand<T>(command: string, ...args: any[]): Promise<T | undefined> {\r\n    return await vscode.commands.executeCommand(command, ...args);\r\n  }\r\n  \r\n  /**\r\n   * Get configuration section\r\n   * @param section Configuration section name\r\n   * @returns Configuration object\r\n   */\r\n  public getConfiguration(section?: string): vscode.WorkspaceConfiguration {\r\n    return vscode.workspace.getConfiguration(section);\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { EventData, EventEmitter, EventFilter, EventHandler } from '../types/events';\r\n\r\n/**\r\n * Implementation of EventEmitter interface\r\n */\r\nexport class EventEmitterImpl implements EventEmitter {\r\n  private _eventId = 0;\r\n  private _handlers: Map<string, { filter: EventFilter | null; handler: EventHandler }> = new Map();\r\n  \r\n  /**\r\n   * Subscribe to events\r\n   * @param filter Optional filter to limit which events are received\r\n   * @param handler Event handler function\r\n   * @returns Disposable for unsubscribing\r\n   */\r\n  public on(filter: EventFilter | null, handler: EventHandler): vscode.Disposable {\r\n    const handlerId = `handler_${++this._eventId}`;\r\n    this._handlers.set(handlerId, { filter, handler });\r\n    \r\n    return {\r\n      dispose: () => {\r\n        this._handlers.delete(handlerId);\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Subscribe to a single event occurrence\r\n   * @param filter Optional filter to limit which events are received\r\n   * @param handler Event handler function\r\n   * @returns Disposable for unsubscribing\r\n   */\r\n  public once(filter: EventFilter | null, handler: EventHandler): vscode.Disposable {\r\n    const handlerId = `once_handler_${++this._eventId}`;\r\n    \r\n    // Create a wrapper handler that self-disposes after one execution\r\n    const onceHandler: EventHandler = (event) => {\r\n      // Call the original handler\r\n      handler(event);\r\n      \r\n      // Self-dispose after execution\r\n      this._handlers.delete(handlerId);\r\n    };\r\n    \r\n    this._handlers.set(handlerId, { filter, handler: onceHandler });\r\n    \r\n    return {\r\n      dispose: () => {\r\n        this._handlers.delete(handlerId);\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Emit an event\r\n   * @param type Event type\r\n   * @param payload Event payload\r\n   * @param source Event source (defaults to 'system')\r\n   * @returns The emitted event data\r\n   */\r\n  public emit(type: string, payload: any, source: string = 'system'): EventData {\r\n    // Create event data\r\n    const event: EventData = {\r\n      id: `event_${Date.now()}_${++this._eventId}`,\r\n      source,\r\n      type,\r\n      timestamp: new Date(),\r\n      payload\r\n    };\r\n    \r\n    // Call all handlers that match the filter\r\n    for (const { filter, handler } of this._handlers.values()) {\r\n      if (this._matchesFilter(event, filter)) {\r\n        try {\r\n          handler(event);\r\n        } catch (error) {\r\n          console.error(`Error in event handler for ${event.type}:`, error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return event;\r\n  }\r\n  \r\n  /**\r\n   * Check if an event matches a filter\r\n   * @param event Event to check\r\n   * @param filter Filter to apply (or null for all events)\r\n   * @returns Whether the event matches the filter\r\n   */\r\n  private _matchesFilter(event: EventData, filter: EventFilter | null): boolean {\r\n    // If no filter, match all events\r\n    if (!filter) {\r\n      return true;\r\n    }\r\n    \r\n    // Check source filter\r\n    if (filter.source !== undefined) {\r\n      if (typeof filter.source === 'string') {\r\n        if (event.source !== filter.source) {\r\n          return false;\r\n        }\r\n      } else if (filter.source instanceof RegExp) {\r\n        if (!filter.source.test(event.source)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Check type filter\r\n    if (filter.type !== undefined) {\r\n      if (typeof filter.type === 'string') {\r\n        if (event.type !== filter.type) {\r\n          return false;\r\n        }\r\n      } else if (filter.type instanceof RegExp) {\r\n        if (!filter.type.test(event.type)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Passed all filters\r\n    return true;\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { PluginAPI } from './api';\r\n\r\n/**\r\n * Possible states for a plugin\r\n */\r\nexport enum PluginState {\r\n  /** Plugin has been discovered but not registered yet */\r\n  Discovered = 'discovered',\r\n  \r\n  /** Plugin is registered but not activated */\r\n  Registered = 'registered',\r\n  \r\n  /** Plugin is currently being activated */\r\n  Activating = 'activating',\r\n  \r\n  /** Plugin is active */\r\n  Active = 'active',\r\n  \r\n  /** Plugin is currently being deactivated */\r\n  Deactivating = 'deactivating',\r\n  \r\n  /** Plugin has been activated and is now deactivated */\r\n  Inactive = 'inactive',\r\n  \r\n  /** Plugin activation failed */\r\n  ActivationFailed = 'activation_failed',\r\n  \r\n  /** Plugin is disabled */\r\n  Disabled = 'disabled'\r\n}\r\n\r\n/**\r\n * Error thrown when plugin activation fails\r\n */\r\nexport class PluginActivationError extends Error {\r\n  constructor(\r\n    public readonly pluginId: string,\r\n    message: string,\r\n    public readonly cause?: Error\r\n  ) {\r\n    super(`Failed to activate plugin ${pluginId}: ${message}${cause ? ` (${cause.message})` : ''}`);\r\n    this.name = 'PluginActivationError';\r\n  }\r\n}\r\n\r\n/**\r\n * Supported plugin feature types\r\n */\r\nexport enum PluginFeatureType {\r\n  // UI components\r\n  WebviewPanel = 'webview_panel',\r\n  StatusBarItem = 'status_bar_item',\r\n  TreeView = 'tree_view',\r\n  \r\n  // Commands and actions\r\n  Command = 'command',\r\n  ContextMenu = 'context_menu',\r\n  KeyBinding = 'key_binding',\r\n  \r\n  // Language features\r\n  CodeLens = 'code_lens',\r\n  CompletionProvider = 'completion_provider',\r\n  DiagnosticProvider = 'diagnostic_provider',\r\n  FormattingProvider = 'formatting_provider',\r\n  \r\n  // Other\r\n  Watcher = 'watcher',\r\n  Task = 'task',\r\n  Custom = 'custom'\r\n}\r\n\r\n/**\r\n * Plugin feature descriptor\r\n */\r\nexport interface PluginFeature {\r\n  /** Feature type */\r\n  type: PluginFeatureType;\r\n  \r\n  /** Feature ID (must be unique within the plugin) */\r\n  id: string;\r\n  \r\n  /** Display name for the feature */\r\n  name: string;\r\n  \r\n  /** Optional description */\r\n  description?: string;\r\n}\r\n\r\n/**\r\n * Plugin configuration schema\r\n */\r\nexport interface PluginConfigSchema {\r\n  /** Configuration properties */\r\n  properties: {\r\n    [key: string]: {\r\n      /** Value type */\r\n      type: 'string' | 'number' | 'boolean' | 'array' | 'object';\r\n      \r\n      /** Default value */\r\n      default?: any;\r\n      \r\n      /** Description */\r\n      description?: string;\r\n      \r\n      /** Enumeration of allowed values (for string type) */\r\n      enum?: string[];\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Plugin metadata describes a plugin and its capabilities\r\n */\r\nexport interface PluginMetadata {\r\n  /** Unique plugin identifier */\r\n  id: string;\r\n  \r\n  /** Display name */\r\n  name: string;\r\n  \r\n  /** Plugin version */\r\n  version: string;\r\n  \r\n  /** Plugin description */\r\n  description?: string;\r\n  \r\n  /** Plugin author */\r\n  author?: string;\r\n  \r\n  /** Path to icon (if any) */\r\n  icon?: string;\r\n  \r\n  /** Plugin homepage/repository */\r\n  homepage?: string;\r\n  \r\n  /** IDs of plugins this plugin depends on */\r\n  dependencies?: string[];\r\n  \r\n  /** Default activation triggers */\r\n  activationEvents?: string[];\r\n  \r\n  /** Features provided by this plugin */\r\n  features?: PluginFeature[];\r\n  \r\n  /** Configuration schema */\r\n  configuration?: PluginConfigSchema;\r\n  \r\n  /** Plugin category */\r\n  category?: string;\r\n  \r\n  /** Minimum VSCode version supported */\r\n  minVSCodeVersion?: string;\r\n  \r\n  /** Whether this is a built-in plugin */\r\n  isBuiltIn?: boolean;\r\n  \r\n  /** Whether plugin should be enabled by default */\r\n  enabledByDefault?: boolean;\r\n}\r\n\r\n/**\r\n * Context provided to plugins during activation\r\n */\r\nexport interface PluginContext {\r\n  /** Extension context */\r\n  extensionContext: vscode.ExtensionContext;\r\n  \r\n  /** Plugin API */\r\n  api: PluginAPI;\r\n  \r\n  /** Plugin metadata */\r\n  metadata: PluginMetadata;\r\n  \r\n  /** Plugin-specific storage path */\r\n  storagePath: string;\r\n  \r\n  /** Plugin-specific subscription handler for resource cleanup */\r\n  subscriptions: vscode.Disposable[];\r\n  \r\n  /** Logger for plugin */\r\n  log(message: string, severity?: 'info' | 'warn' | 'error'): void;\r\n  \r\n  /** Get plugin configuration */\r\n  getConfig<T>(key: string): T | undefined;\r\n  \r\n  /** Update plugin configuration */\r\n  updateConfig<T>(key: string, value: T): Promise<void>;\r\n}\r\n\r\n/**\r\n * Core plugin interface that all plugins must implement\r\n */\r\nexport interface Plugin {\r\n  /** Plugin activation handler */\r\n  activate(context: PluginContext): Promise<void>;\r\n  \r\n  /** Plugin deactivation handler */\r\n  deactivate?(): Promise<void>;\r\n}\r\n\r\n/**\r\n * Plugin instance with metadata and state information\r\n */\r\nexport interface PluginInstance {\r\n  /** Plugin ID */\r\n  id: string;\r\n  \r\n  /** Plugin metadata */\r\n  metadata: PluginMetadata;\r\n  \r\n  /** Plugin implementation */\r\n  implementation: Plugin;\r\n  \r\n  /** Plugin state */\r\n  state: PluginState;\r\n  \r\n  /** Error details if activation failed */\r\n  error?: Error;\r\n  \r\n  /** Plugin context (only available when active) */\r\n  context?: PluginContext;\r\n}\r\n\r\n/**\r\n * Plugin registry manages the lifecycle of plugins\r\n */\r\nexport interface PluginRegistry {\r\n  /** Register a plugin with the registry */\r\n  registerPlugin(plugin: Plugin, metadata: PluginMetadata): Promise<string>;\r\n  \r\n  /** Unregister a plugin from the registry */\r\n  unregisterPlugin(pluginId: string): Promise<boolean>;\r\n  \r\n  /** Activate a plugin */\r\n  activatePlugin(pluginId: string): Promise<boolean>;\r\n  \r\n  /** Deactivate a plugin */\r\n  deactivatePlugin(pluginId: string): Promise<boolean>;\r\n  \r\n  /** Check if a plugin is active */\r\n  isPluginActive(pluginId: string): boolean;\r\n  \r\n  /** Get a plugin instance by ID */\r\n  getPlugin(pluginId: string): PluginInstance | undefined;\r\n  \r\n  /** Get all registered plugins */\r\n  getAllPlugins(): PluginInstance[];\r\n  \r\n  /** Get plugins by state */\r\n  getPluginsByState(state: PluginState): PluginInstance[];\r\n  \r\n  /** Get active plugins only */\r\n  getActivePlugins(): PluginInstance[];\r\n  \r\n  /** Subscribe to plugin state changes */\r\n  onDidChangePluginState(listener: (pluginId: string, oldState: PluginState, newState: PluginState) => void): vscode.Disposable;\r\n}","import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs/promises';\r\nimport { existsSync, mkdirSync } from 'fs';\r\nimport { \r\n  Plugin, \r\n  PluginMetadata, \r\n  PluginRegistry, \r\n  PluginState, \r\n  PluginContext\r\n} from '../types/plugin';\r\nimport { PluginAPI } from '../types/api';\r\n\r\n/**\r\n * Manages loading and unloading of plugins\r\n */\r\nexport class PluginLoader {\r\n  private _internalPluginPath: string;\r\n  private _externalPluginPath: string | null = null;\r\n  \r\n  /**\r\n   * Creates a new plugin loader\r\n   * @param _extensionContext Extension context\r\n   * @param _registry Plugin registry\r\n   * @param _pluginAPI Plugin API\r\n   */\r\n  constructor(\r\n    private readonly _extensionContext: vscode.ExtensionContext,\r\n    private readonly _registry: PluginRegistry,\r\n    private readonly _pluginAPI: PluginAPI\r\n  ) {\r\n    // Set up plugin paths\r\n    this._internalPluginPath = path.join(_extensionContext.extensionPath, 'out', 'plugins', 'internal');\r\n    \r\n    // Load external plugin path from configuration\r\n    const config = vscode.workspace.getConfiguration('ape.plugins');\r\n    const configuredPath = config.get<string>('path', '');\r\n    \r\n    if (configuredPath) {\r\n      this._externalPluginPath = configuredPath;\r\n    } else {\r\n      // Use default path in global storage\r\n      this._externalPluginPath = path.join(_extensionContext.globalStoragePath, 'plugins');\r\n      \r\n      // Create directory if it doesn't exist\r\n      if (!existsSync(this._externalPluginPath)) {\r\n        mkdirSync(this._externalPluginPath, { recursive: true });\r\n      }\r\n    }\r\n    \r\n    // Listen for configuration changes\r\n    vscode.workspace.onDidChangeConfiguration(event => {\r\n      if (event.affectsConfiguration('ape.plugins.path')) {\r\n        this._updateExternalPluginPath();\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Update external plugin path when configuration changes\r\n   */\r\n  private _updateExternalPluginPath(): void {\r\n    const config = vscode.workspace.getConfiguration('ape.plugins');\r\n    const configuredPath = config.get<string>('path', '');\r\n    \r\n    if (configuredPath) {\r\n      this._externalPluginPath = configuredPath;\r\n    } else {\r\n      this._externalPluginPath = path.join(this._extensionContext.globalStoragePath, 'plugins');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Discover and load all internal plugins\r\n   * @returns Promise that resolves to the number of plugins loaded\r\n   */\r\n  public async loadInternalPlugins(): Promise<number> {\r\n    console.log('Loading internal plugins from:', this._internalPluginPath);\r\n    \r\n    try {\r\n      const pluginDirs = await this._getDirectories(this._internalPluginPath);\r\n      let loadedCount = 0;\r\n      \r\n      for (const dir of pluginDirs) {\r\n        try {\r\n          const loaded = await this._loadPluginFromDirectory(\r\n            path.join(this._internalPluginPath, dir),\r\n            true\r\n          );\r\n          \r\n          if (loaded) {\r\n            loadedCount++;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error loading internal plugin from ${dir}:`, error);\r\n        }\r\n      }\r\n      \r\n      return loadedCount;\r\n    } catch (error) {\r\n      console.error('Error loading internal plugins:', error);\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Discover and load all external plugins\r\n   * @returns Promise that resolves to the number of plugins loaded\r\n   */\r\n  public async loadExternalPlugins(): Promise<number> {\r\n    if (!this._externalPluginPath) {\r\n      return 0;\r\n    }\r\n    \r\n    console.log('Loading external plugins from:', this._externalPluginPath);\r\n    \r\n    try {\r\n      const pluginDirs = await this._getDirectories(this._externalPluginPath);\r\n      let loadedCount = 0;\r\n      \r\n      for (const dir of pluginDirs) {\r\n        try {\r\n          const loaded = await this._loadPluginFromDirectory(\r\n            path.join(this._externalPluginPath, dir),\r\n            false\r\n          );\r\n          \r\n          if (loaded) {\r\n            loadedCount++;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error loading external plugin from ${dir}:`, error);\r\n        }\r\n      }\r\n      \r\n      return loadedCount;\r\n    } catch (error) {\r\n      console.error('Error loading external plugins:', error);\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Load a plugin from a specific directory\r\n   * @param pluginDir Plugin directory path\r\n   * @param isInternal Whether this is an internal plugin\r\n   * @returns Promise that resolves to true if the plugin was loaded\r\n   */\r\n  private async _loadPluginFromDirectory(\r\n    pluginDir: string,\r\n    isInternal: boolean\r\n  ): Promise<boolean> {\r\n    // Check for package.json\r\n    const packageJsonPath = path.join(pluginDir, 'package.json');\r\n    \r\n    if (!existsSync(packageJsonPath)) {\r\n      console.log(`No package.json found in ${pluginDir}, skipping`);\r\n      return false;\r\n    }\r\n    \r\n    try {\r\n      // Load package.json\r\n      const packageJson = JSON.parse(\r\n        await fs.readFile(packageJsonPath, 'utf-8')\r\n      );\r\n      \r\n      // Skip if this is not an APE plugin\r\n      if (packageJson.apePlugin !== true) {\r\n        console.log(`Directory ${pluginDir} is not an APE plugin, skipping`);\r\n        return false;\r\n      }\r\n      \r\n      // Extract metadata\r\n      const metadata: PluginMetadata = {\r\n        id: packageJson.name,\r\n        name: packageJson.displayName || packageJson.name,\r\n        version: packageJson.version || '0.0.1',\r\n        description: packageJson.description,\r\n        author: packageJson.author,\r\n        dependencies: packageJson.apeDependencies || [],\r\n        activationEvents: packageJson.activationEvents || [],\r\n        features: packageJson.apeFeatures || [],\r\n        configuration: packageJson.apeConfiguration,\r\n        category: packageJson.category,\r\n        isBuiltIn: isInternal,\r\n        enabledByDefault: packageJson.enabledByDefault !== false\r\n      };\r\n      \r\n      // Load the plugin implementation\r\n      const mainModulePath = path.join(pluginDir, packageJson.main || 'index.js');\r\n      \r\n      if (!existsSync(mainModulePath)) {\r\n        throw new Error(`Plugin main module not found: ${mainModulePath}`);\r\n      }\r\n      \r\n      // Use require() for webpack compatibility instead of dynamic import\r\n      // This is still dynamic but uses CommonJS which webpack can handle better\r\n      // eslint-disable-next-line @typescript-eslint/no-require-imports\r\n      const pluginModule = require(mainModulePath);\r\n      const pluginImpl: Plugin = pluginModule.default || pluginModule;\r\n      \r\n      // Check if plugin implements required interface\r\n      if (!pluginImpl || typeof pluginImpl.activate !== 'function') {\r\n        throw new Error(`Plugin does not implement the required interface`);\r\n      }\r\n      \r\n      // Register the plugin\r\n      const pluginId = await this._registry.registerPlugin(pluginImpl, metadata);\r\n      \r\n      // Create storage path for the plugin\r\n      const pluginStoragePath = path.join(\r\n        this._extensionContext.globalStoragePath,\r\n        'plugin-storage',\r\n        pluginId\r\n      );\r\n      \r\n      // Ensure storage directory exists\r\n      if (!existsSync(pluginStoragePath)) {\r\n        mkdirSync(pluginStoragePath, { recursive: true });\r\n      }\r\n      \r\n      // Create plugin context\r\n      const plugin = this._registry.getPlugin(pluginId);\r\n      \r\n      if (plugin) {\r\n        const subscriptions: vscode.Disposable[] = [];\r\n        \r\n        const context: PluginContext = {\r\n          extensionContext: this._extensionContext,\r\n          api: this._pluginAPI,\r\n          metadata,\r\n          storagePath: pluginStoragePath,\r\n          subscriptions,\r\n          log: (message: string, severity: 'info' | 'warn' | 'error' = 'info') => {\r\n            switch (severity) {\r\n              case 'info':\r\n                console.log(`[Plugin: ${pluginId}] ${message}`);\r\n                break;\r\n              case 'warn':\r\n                console.warn(`[Plugin: ${pluginId}] ${message}`);\r\n                break;\r\n              case 'error':\r\n                console.error(`[Plugin: ${pluginId}] ${message}`);\r\n                break;\r\n            }\r\n          },\r\n          getConfig: <T>(key: string): T | undefined => {\r\n            const config = vscode.workspace.getConfiguration(`ape.plugins.${pluginId}`);\r\n            return config.get<T>(key);\r\n          },\r\n          updateConfig: <T>(key: string, value: T): Promise<void> => {\r\n            const config = vscode.workspace.getConfiguration(`ape.plugins.${pluginId}`);\r\n            return Promise.resolve(config.update(key, value, vscode.ConfigurationTarget.Global));\r\n          }\r\n        };\r\n        \r\n        // Set the context on the plugin instance\r\n        plugin.context = context;\r\n        \r\n        // Auto-activate if configured\r\n        const autoActivate = vscode.workspace.getConfiguration('ape.plugins')\r\n          .get<boolean>('autoActivate', true);\r\n        \r\n        if (autoActivate && metadata.enabledByDefault !== false) {\r\n          // Queue activation to avoid blocking the loading process\r\n          setImmediate(() => {\r\n            this._registry.activatePlugin(pluginId).catch(error => {\r\n              console.error(`Error auto-activating plugin ${pluginId}:`, error);\r\n            });\r\n          });\r\n        }\r\n        \r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    } catch (error) {\r\n      console.error(`Error loading plugin from ${pluginDir}:`, error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Activate all plugins that match a specific activation event\r\n   * @param activationEvent Activation event to match\r\n   * @returns Promise that resolves to the number of plugins activated\r\n   */\r\n  public async activatePluginsByEvent(activationEvent: string): Promise<number> {\r\n    const plugins = this._registry.getAllPlugins().filter(plugin => \r\n      plugin.state === PluginState.Registered &&\r\n      plugin.metadata.activationEvents?.some(event => {\r\n        // Exact match\r\n        if (event === activationEvent) {\r\n          return true;\r\n        }\r\n        \r\n        // Wildcard match\r\n        if (event.endsWith('*')) {\r\n          const prefix = event.slice(0, -1);\r\n          return activationEvent.startsWith(prefix);\r\n        }\r\n        \r\n        return false;\r\n      })\r\n    );\r\n    \r\n    let activatedCount = 0;\r\n    \r\n    for (const plugin of plugins) {\r\n      try {\r\n        const success = await this._registry.activatePlugin(plugin.id);\r\n        if (success) {\r\n          activatedCount++;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error activating plugin ${plugin.id} for event ${activationEvent}:`, error);\r\n      }\r\n    }\r\n    \r\n    return activatedCount;\r\n  }\r\n  \r\n  /**\r\n   * Activate all registered plugins\r\n   * @returns Promise that resolves to the number of plugins activated\r\n   */\r\n  public async activateAllPlugins(): Promise<number> {\r\n    const plugins = this._registry.getAllPlugins().filter(plugin => \r\n      plugin.state === PluginState.Registered\r\n    );\r\n    \r\n    let activatedCount = 0;\r\n    \r\n    for (const plugin of plugins) {\r\n      try {\r\n        const success = await this._registry.activatePlugin(plugin.id);\r\n        if (success) {\r\n          activatedCount++;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error activating plugin ${plugin.id}:`, error);\r\n      }\r\n    }\r\n    \r\n    return activatedCount;\r\n  }\r\n  \r\n  /**\r\n   * Deactivate all active plugins\r\n   * @returns Promise that resolves to the number of plugins deactivated\r\n   */\r\n  public async deactivateAllPlugins(): Promise<number> {\r\n    const activePlugins = this._registry.getActivePlugins();\r\n    let deactivatedCount = 0;\r\n    \r\n    for (const plugin of activePlugins) {\r\n      try {\r\n        const success = await this._registry.deactivatePlugin(plugin.id);\r\n        if (success) {\r\n          deactivatedCount++;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error deactivating plugin ${plugin.id}:`, error);\r\n      }\r\n    }\r\n    \r\n    return deactivatedCount;\r\n  }\r\n  \r\n  /**\r\n   * Helper function to get directories in a path\r\n   * @param dirPath Directory path to scan\r\n   * @returns Promise that resolves to an array of directory names\r\n   */\r\n  private async _getDirectories(dirPath: string): Promise<string[]> {\r\n    try {\r\n      const entries = await fs.readdir(dirPath, { withFileTypes: true });\r\n      return entries\r\n        .filter(entry => entry.isDirectory())\r\n        .map(entry => entry.name);\r\n    } catch (error) {\r\n      if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\r\n        // Directory doesn't exist, return empty array\r\n        return [];\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { EventEmitter } from '../types/events';\r\nimport { \r\n  Plugin, \r\n  PluginMetadata, \r\n  PluginRegistry, \r\n  PluginInstance, \r\n  PluginState,\r\n  // PluginContext, // 현재 사용하지 않음\r\n  PluginActivationError\r\n} from '../types/plugin';\r\n\r\n/**\r\n * Implementation of the Plugin Registry\r\n */\r\nexport class PluginRegistryImpl implements PluginRegistry {\r\n  /** Maps plugin IDs to plugin instances */\r\n  private _plugins: Map<string, PluginInstance> = new Map();\r\n  \r\n  /** Event emitters for plugin state changes */\r\n  private _stateChangeEmitter = new vscode.EventEmitter<{\r\n    pluginId: string;\r\n    oldState: PluginState;\r\n    newState: PluginState;\r\n  }>();\r\n  \r\n  /** Observable for plugin state changes */\r\n  public readonly onDidChangePluginState = (listener: (pluginId: string, oldState: PluginState, newState: PluginState) => void): vscode.Disposable => {\r\n    return this._stateChangeEmitter.event(e => listener(e.pluginId, e.oldState, e.newState));\r\n  };\r\n  \r\n  /**\r\n   * Creates a new plugin registry\r\n   * @param _eventEmitter Event emitter for plugin events\r\n   */\r\n  constructor(private readonly _eventEmitter: EventEmitter) {}\r\n  \r\n  /**\r\n   * Register a plugin with the registry\r\n   * @param plugin Plugin implementation\r\n   * @param metadata Plugin metadata\r\n   * @returns Promise that resolves to the plugin ID\r\n   */\r\n  public async registerPlugin(plugin: Plugin, metadata: PluginMetadata): Promise<string> {\r\n    // Check for duplicate plugin ID\r\n    if (this._plugins.has(metadata.id)) {\r\n      throw new Error(`Plugin with ID ${metadata.id} is already registered`);\r\n    }\r\n    \r\n    // Create plugin instance\r\n    const instance: PluginInstance = {\r\n      id: metadata.id,\r\n      metadata,\r\n      implementation: plugin,\r\n      state: PluginState.Registered\r\n    };\r\n    \r\n    // Add to registry\r\n    this._plugins.set(metadata.id, instance);\r\n    \r\n    // Emit event\r\n    this._eventEmitter.emit('plugin:registered', {\r\n      pluginId: metadata.id,\r\n      metadata\r\n    });\r\n    \r\n    return metadata.id;\r\n  }\r\n  \r\n  /**\r\n   * Unregister a plugin from the registry\r\n   * @param pluginId Plugin ID to unregister\r\n   * @returns Promise that resolves to true if successful\r\n   */\r\n  public async unregisterPlugin(pluginId: string): Promise<boolean> {\r\n    const plugin = this._plugins.get(pluginId);\r\n    \r\n    if (!plugin) {\r\n      return false;\r\n    }\r\n    \r\n    // Deactivate plugin if it's active\r\n    if (plugin.state === PluginState.Active) {\r\n      await this.deactivatePlugin(pluginId);\r\n    }\r\n    \r\n    // Remove from registry\r\n    this._plugins.delete(pluginId);\r\n    \r\n    // Emit event\r\n    this._eventEmitter.emit('plugin:unregistered', {\r\n      pluginId\r\n    });\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Activate a plugin\r\n   * @param pluginId Plugin ID to activate\r\n   * @returns Promise that resolves to true if successful\r\n   */\r\n  public async activatePlugin(pluginId: string): Promise<boolean> {\r\n    const plugin = this._plugins.get(pluginId);\r\n    \r\n    if (!plugin) {\r\n      return false;\r\n    }\r\n    \r\n    // Check if already active or activating\r\n    if (plugin.state === PluginState.Active) {\r\n      return true;\r\n    }\r\n    \r\n    if (plugin.state === PluginState.Activating) {\r\n      return false; // Already activating\r\n    }\r\n    \r\n    // Update state to activating\r\n    this._changePluginState(plugin, PluginState.Activating);\r\n    \r\n    try {\r\n      // Check and activate dependencies if needed\r\n      if (plugin.metadata.dependencies?.length) {\r\n        for (const depId of plugin.metadata.dependencies) {\r\n          const dependency = this._plugins.get(depId);\r\n          \r\n          if (!dependency) {\r\n            throw new PluginActivationError(\r\n              pluginId,\r\n              `Missing dependency: ${depId}`\r\n            );\r\n          }\r\n          \r\n          if (dependency.state !== PluginState.Active) {\r\n            const success = await this.activatePlugin(depId);\r\n            if (!success) {\r\n              throw new PluginActivationError(\r\n                pluginId,\r\n                `Failed to activate dependency: ${depId}`\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Context will be provided by PluginLoader\r\n      if (!plugin.context) {\r\n        throw new PluginActivationError(\r\n          pluginId,\r\n          'Plugin context not set. This is likely an internal error.'\r\n        );\r\n      }\r\n      \r\n      // Activate the plugin\r\n      await plugin.implementation.activate(plugin.context);\r\n      \r\n      // Update state to active\r\n      this._changePluginState(plugin, PluginState.Active);\r\n      \r\n      // Emit event\r\n      this._eventEmitter.emit('plugin:activated', {\r\n        pluginId,\r\n        metadata: plugin.metadata\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      // Update state to activation failed\r\n      plugin.error = error instanceof Error ? error : new Error(String(error));\r\n      this._changePluginState(plugin, PluginState.ActivationFailed);\r\n      \r\n      // Emit failure event\r\n      this._eventEmitter.emit('plugin:activation:failed', {\r\n        pluginId,\r\n        error: plugin.error\r\n      });\r\n      \r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Deactivate a plugin\r\n   * @param pluginId Plugin ID to deactivate\r\n   * @returns Promise that resolves to true if successful\r\n   */\r\n  public async deactivatePlugin(pluginId: string): Promise<boolean> {\r\n    const plugin = this._plugins.get(pluginId);\r\n    \r\n    if (!plugin) {\r\n      return false;\r\n    }\r\n    \r\n    // Check if already inactive or deactivating\r\n    if (plugin.state === PluginState.Inactive || \r\n        plugin.state === PluginState.Registered ||\r\n        plugin.state === PluginState.Discovered) {\r\n      return true;\r\n    }\r\n    \r\n    if (plugin.state === PluginState.Deactivating) {\r\n      return false; // Already deactivating\r\n    }\r\n    \r\n    // Check if this plugin is a dependency of any active plugins\r\n    const activePlugins = this.getPluginsByState(PluginState.Active);\r\n    const dependents = activePlugins.filter(p => \r\n      p.metadata.dependencies?.includes(pluginId)\r\n    );\r\n    \r\n    // Deactivate dependents first\r\n    for (const dependent of dependents) {\r\n      await this.deactivatePlugin(dependent.id);\r\n    }\r\n    \r\n    // Update state to deactivating\r\n    this._changePluginState(plugin, PluginState.Deactivating);\r\n    \r\n    try {\r\n      // Call deactivate if implemented\r\n      if (plugin.implementation.deactivate) {\r\n        await plugin.implementation.deactivate();\r\n      }\r\n      \r\n      // Dispose context subscriptions\r\n      if (plugin.context) {\r\n        for (const subscription of plugin.context.subscriptions) {\r\n          try {\r\n            subscription.dispose();\r\n          } catch (error) {\r\n            console.error(`Error disposing subscription for plugin ${pluginId}:`, error);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Update state to inactive\r\n      this._changePluginState(plugin, PluginState.Inactive);\r\n      \r\n      // Clear error if previously failed\r\n      delete plugin.error;\r\n      \r\n      // Emit event\r\n      this._eventEmitter.emit('plugin:deactivated', {\r\n        pluginId,\r\n        metadata: plugin.metadata\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      // Still mark as inactive, but keep error\r\n      plugin.error = error instanceof Error ? error : new Error(String(error));\r\n      this._changePluginState(plugin, PluginState.Inactive);\r\n      \r\n      // Emit warning event\r\n      this._eventEmitter.emit('plugin:deactivation:warning', {\r\n        pluginId,\r\n        error: plugin.error\r\n      });\r\n      \r\n      // Still return true because the plugin is now inactive\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Check if a plugin is active\r\n   * @param pluginId Plugin ID to check\r\n   * @returns Whether the plugin is active\r\n   */\r\n  public isPluginActive(pluginId: string): boolean {\r\n    const plugin = this._plugins.get(pluginId);\r\n    return plugin?.state === PluginState.Active;\r\n  }\r\n  \r\n  /**\r\n   * Get a plugin instance by ID\r\n   * @param pluginId Plugin ID to get\r\n   * @returns Plugin instance or undefined if not found\r\n   */\r\n  public getPlugin(pluginId: string): PluginInstance | undefined {\r\n    return this._plugins.get(pluginId);\r\n  }\r\n  \r\n  /**\r\n   * Get all registered plugins\r\n   * @returns Array of all plugin instances\r\n   */\r\n  public getAllPlugins(): PluginInstance[] {\r\n    return Array.from(this._plugins.values());\r\n  }\r\n  \r\n  /**\r\n   * Get plugins by state\r\n   * @param state State to filter by\r\n   * @returns Array of matching plugin instances\r\n   */\r\n  public getPluginsByState(state: PluginState): PluginInstance[] {\r\n    return Array.from(this._plugins.values()).filter(p => p.state === state);\r\n  }\r\n  \r\n  /**\r\n   * Get active plugins only\r\n   * @returns Array of active plugin instances\r\n   */\r\n  public getActivePlugins(): PluginInstance[] {\r\n    return this.getPluginsByState(PluginState.Active);\r\n  }\r\n  \r\n  /**\r\n   * Update a plugin's state and emit change event\r\n   * @param plugin Plugin instance to update\r\n   * @param newState New state to set\r\n   */\r\n  private _changePluginState(plugin: PluginInstance, newState: PluginState): void {\r\n    const oldState = plugin.state;\r\n    plugin.state = newState;\r\n    \r\n    // Emit event for state change\r\n    this._stateChangeEmitter.fire({\r\n      pluginId: plugin.id,\r\n      oldState,\r\n      newState\r\n    });\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport { PluginSettingsManager, PluginSettingsSchema } from '../types/settings';\r\n\r\n/**\r\n * Implementation of PluginSettingsManager\r\n */\r\nexport class PluginSettingsManagerImpl implements PluginSettingsManager {\r\n  // Map of registered schemas by plugin ID\r\n  private _schemas: Map<string, PluginSettingsSchema> = new Map();\r\n  \r\n  // Map of configuration change listeners\r\n  private _listeners: Map<string, vscode.Disposable[]> = new Map();\r\n  \r\n  /**\r\n   * Creates a new PluginSettingsManager\r\n   * @param _extensionContext Extension context\r\n   */\r\n  constructor(private readonly _extensionContext: vscode.ExtensionContext) {\r\n    // Listen for configuration changes\r\n    vscode.workspace.onDidChangeConfiguration(this._handleConfigChange, this);\r\n  }\r\n  \r\n  /**\r\n   * Register configuration schema for a plugin\r\n   * @param pluginId Plugin ID\r\n   * @param schema Settings schema\r\n   */\r\n  public registerSettings(pluginId: string, schema: PluginSettingsSchema): void {\r\n    this._schemas.set(pluginId, schema);\r\n    \r\n    // TODO: Register settings with VSCode dynamically\r\n    // This is normally done via package.json, but for dynamically loaded plugins\r\n    // we might need a different approach\r\n  }\r\n  \r\n  /**\r\n   * Get configuration for a plugin\r\n   * @param pluginId Plugin ID\r\n   * @returns Configuration object\r\n   */\r\n  public getConfiguration(pluginId: string): vscode.WorkspaceConfiguration {\r\n    return vscode.workspace.getConfiguration(`ape.plugins.${pluginId}`);\r\n  }\r\n  \r\n  /**\r\n   * Get a specific setting value\r\n   * @param pluginId Plugin ID\r\n   * @param key Setting key\r\n   * @param defaultValue Default value if setting is not found\r\n   * @returns Setting value or default value\r\n   */\r\n  public get<T>(pluginId: string, key: string, defaultValue?: T): T {\r\n    const config = this.getConfiguration(pluginId);\r\n    return config.get<T>(key, defaultValue as T);\r\n  }\r\n  \r\n  /**\r\n   * Update a specific setting value\r\n   * @param pluginId Plugin ID\r\n   * @param key Setting key\r\n   * @param value New value\r\n   * @param configurationTarget Where to update the setting\r\n   * @returns Promise that resolves when the update is complete\r\n   */\r\n  public async update<T>(\r\n    pluginId: string,\r\n    key: string,\r\n    value: T,\r\n    configurationTarget: vscode.ConfigurationTarget = vscode.ConfigurationTarget.Global\r\n  ): Promise<void> {\r\n    const config = this.getConfiguration(pluginId);\r\n    await config.update(key, value, configurationTarget);\r\n  }\r\n  \r\n  /**\r\n   * Listen for setting changes\r\n   * @param pluginId Plugin ID\r\n   * @param key Setting key\r\n   * @param callback Callback function invoked when the setting changes\r\n   * @returns Disposable for unsubscribing\r\n   */\r\n  public onDidChangeConfiguration(\r\n    pluginId: string,\r\n    key: string,\r\n    callback: (newValue: any) => void\r\n  ): vscode.Disposable {\r\n    // Get current value as baseline\r\n    const initialValue = this.get(pluginId, key);\r\n    \r\n    // Create a disposable to manage this listener\r\n    const disposable = {\r\n      dispose: () => {\r\n        // Remove this listener from our records\r\n        const listeners = this._listeners.get(pluginId) || [];\r\n        const index = listeners.findIndex(l => l === disposable);\r\n        if (index !== -1) {\r\n          listeners.splice(index, 1);\r\n        }\r\n        this._listeners.set(pluginId, listeners);\r\n      }\r\n    };\r\n    \r\n    // Add to our listeners\r\n    const listeners = this._listeners.get(pluginId) || [];\r\n    listeners.push(disposable);\r\n    this._listeners.set(pluginId, listeners);\r\n    \r\n    // Store state for this listener\r\n    (disposable as any)._lastValue = initialValue;\r\n    (disposable as any)._pluginId = pluginId;\r\n    (disposable as any)._key = key;\r\n    (disposable as any)._callback = callback;\r\n    \r\n    return disposable;\r\n  }\r\n  \r\n  /**\r\n   * Handle configuration changes\r\n   * @param event Configuration change event\r\n   */\r\n  private _handleConfigChange(event: vscode.ConfigurationChangeEvent): void {\r\n    // Check each plugin and its listeners\r\n    for (const [pluginId, listeners] of this._listeners.entries()) {\r\n      const configSection = `ape.plugins.${pluginId}`;\r\n      \r\n      if (event.affectsConfiguration(configSection)) {\r\n        // Configuration for this plugin has changed\r\n        for (const listener of listeners) {\r\n          // Get stored properties\r\n          const key = (listener as any)._key;\r\n          const lastValue = (listener as any)._lastValue;\r\n          const callback = (listener as any)._callback;\r\n          \r\n          // Check if this specific key was affected\r\n          if (event.affectsConfiguration(`${configSection}.${key}`)) {\r\n            // Get the new value\r\n            const newValue = this.get(pluginId, key);\r\n            \r\n            // Only notify if value actually changed\r\n            if (JSON.stringify(newValue) !== JSON.stringify(lastValue)) {\r\n              // Update stored last value\r\n              (listener as any)._lastValue = newValue;\r\n              \r\n              // Call the callback with the new value\r\n              try {\r\n                callback(newValue);\r\n              } catch (error) {\r\n                console.error(`Error in settings change listener for ${pluginId}.${key}:`, error);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Dispose of all listeners\r\n   */\r\n  public dispose(): void {\r\n    // Clear all listeners\r\n    this._listeners.clear();\r\n    this._schemas.clear();\r\n  }\r\n}","// Export plugin core components\r\nexport * from './api';\r\nexport * from './events';\r\nexport * from './loader';\r\nexport * from './registry';\r\nexport * from './settings';","/**\r\n * APE Rules 서비스\r\n * \r\n * Rules 파일을 관리하고 LLM 시스템 프롬프트에 적용하는 서비스입니다.\r\n * Rules 생성, 삭제, 활성화/비활성화 기능을 제공합니다.\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport { ServiceConfigManager, ServiceType } from './serviceConfig';\r\nimport { ServiceError } from './serviceError';\r\n\r\n/**\r\n * Rule 항목 상태\r\n */\r\nexport enum RuleStatus {\r\n  Active = 'active',\r\n  Inactive = 'inactive'\r\n}\r\n\r\n/**\r\n * Rule 항목 인터페이스\r\n */\r\nexport interface Rule {\r\n  id: string;        // 고유 식별자 \r\n  name: string;      // 규칙 이름\r\n  filePath: string;  // 파일 경로\r\n  content: string;   // 파일 내용\r\n  status: RuleStatus; // 활성화 상태\r\n  createdAt: Date;   // 생성 시간\r\n  updatedAt: Date;   // 수정 시간\r\n}\r\n\r\n/**\r\n * Rules 서비스 클래스\r\n */\r\nexport class RulesService implements vscode.Disposable {\r\n  private _onDidChangeRules = new vscode.EventEmitter<void>();\r\n  readonly onDidChangeRules = this._onDidChangeRules.event;\r\n  \r\n  private rules: Map<string, Rule> = new Map();\r\n  private disposables: vscode.Disposable[] = [];\r\n  private rulesDir: string;\r\n  \r\n  /**\r\n   * 생성자\r\n   * @param context VSCode 확장 컨텍스트\r\n   * @param configManager 서비스 설정 관리자 (옵션)\r\n   */\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext,\r\n    private readonly configManager?: ServiceConfigManager\r\n  ) {\r\n    // Rules 디렉토리 설정\r\n    this.rulesDir = path.join(this.context.globalStorageUri.fsPath, 'rules');\r\n    \r\n    // Rules 디렉토리 생성 (없는 경우)\r\n    this.ensureRulesDir();\r\n    \r\n    // 설정 변경 이벤트 구독\r\n    this.disposables.push(\r\n      vscode.workspace.onDidChangeConfiguration(e => {\r\n        if (e.affectsConfiguration('ape.rules')) {\r\n          this.loadAllRules();\r\n        }\r\n      })\r\n    );\r\n    \r\n    // 파일 시스템 변경 감지\r\n    const watcher = vscode.workspace.createFileSystemWatcher(\r\n      new vscode.RelativePattern(this.rulesDir, '**/*.md')\r\n    );\r\n    \r\n    this.disposables.push(\r\n      watcher,\r\n      watcher.onDidCreate(() => this.loadAllRules()),\r\n      watcher.onDidDelete(() => this.loadAllRules()),\r\n      watcher.onDidChange(() => this.loadAllRules())\r\n    );\r\n    \r\n    // 초기 Rules 로드\r\n    this.loadAllRules();\r\n  }\r\n  \r\n  /**\r\n   * Rules 디렉토리 확인 및 생성\r\n   */\r\n  private ensureRulesDir(): void {\r\n    if (!fs.existsSync(this.rulesDir)) {\r\n      fs.mkdirSync(this.rulesDir, { recursive: true });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 모든 Rules 로드\r\n   */\r\n  public async loadAllRules(): Promise<void> {\r\n    try {\r\n      this.ensureRulesDir();\r\n      this.rules.clear();\r\n      \r\n      // Rules 디렉토리의 모든 .md 파일 읽기\r\n      const files = fs.readdirSync(this.rulesDir).filter(file => file.endsWith('.md'));\r\n      \r\n      // 설정에서 활성화된 Rules 목록 가져오기\r\n      const config = vscode.workspace.getConfiguration('ape.rules');\r\n      const activeRules = config.get<string[]>('activeRules', []);\r\n      \r\n      // 각 파일을 Rule 객체로 변환\r\n      for (const file of files) {\r\n        const filePath = path.join(this.rulesDir, file);\r\n        const fileStats = fs.statSync(filePath);\r\n        const content = fs.readFileSync(filePath, 'utf-8');\r\n        \r\n        // 파일명에서 확장자 제거하여 ID 생성\r\n        const id = path.basename(file, '.md');\r\n        \r\n        // Rule 객체 생성\r\n        const rule: Rule = {\r\n          id,\r\n          name: this.extractNameFromContent(content) || id,\r\n          filePath,\r\n          content,\r\n          status: activeRules.includes(id) ? RuleStatus.Active : RuleStatus.Inactive,\r\n          createdAt: fileStats.birthtime,\r\n          updatedAt: fileStats.mtime\r\n        };\r\n        \r\n        // Rules 맵에 추가\r\n        this.rules.set(id, rule);\r\n      }\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeRules.fire();\r\n    } catch (error) {\r\n      console.error('Rules 로드 오류:', error);\r\n      vscode.window.showErrorMessage(`Rules 로드 중 오류가 발생했습니다: ${error}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 파일 내용에서 이름 추출 (첫 번째 제목 사용)\r\n   * @param content 파일 내용\r\n   */\r\n  private extractNameFromContent(content: string): string | null {\r\n    // 마크다운 제목 형식(#으로 시작하는 라인) 찾기\r\n    const titleMatch = content.match(/^#\\s+(.+)$/m);\r\n    if (titleMatch && titleMatch[1]) {\r\n      return titleMatch[1].trim();\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * 모든 Rules 가져오기\r\n   */\r\n  public getAllRules(): Rule[] {\r\n    return Array.from(this.rules.values());\r\n  }\r\n  \r\n  /**\r\n   * 활성화된 Rules 가져오기\r\n   */\r\n  public getActiveRules(): Rule[] {\r\n    return this.getAllRules().filter(rule => rule.status === RuleStatus.Active);\r\n  }\r\n  \r\n  /**\r\n   * ID로 Rule 가져오기\r\n   * @param id Rule ID\r\n   */\r\n  public getRuleById(id: string): Rule | undefined {\r\n    return this.rules.get(id);\r\n  }\r\n  \r\n  /**\r\n   * Rule 생성\r\n   * @param name Rule 이름\r\n   * @param content Rule 내용\r\n   * @param activate 생성 후 활성화 여부\r\n   */\r\n  public async createRule(name: string, content: string, activate: boolean = false): Promise<Rule> {\r\n    try {\r\n      this.ensureRulesDir();\r\n      \r\n      // 파일명으로 사용할 ID 생성 (공백은 하이픈으로 변환)\r\n      const id = name.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '');\r\n      \r\n      // 이미 존재하는 ID인지 확인\r\n      if (this.rules.has(id)) {\r\n        throw new ServiceError(`이미 존재하는 Rule 이름입니다: ${name}`, 'rule-already-exists');\r\n      }\r\n      \r\n      // 마크다운 내용이 제목으로 시작하지 않으면 제목 추가\r\n      let finalContent = content;\r\n      if (!content.trim().startsWith('#')) {\r\n        finalContent = `# ${name}\\n\\n${content}`;\r\n      }\r\n      \r\n      // 파일 경로 생성\r\n      const filePath = path.join(this.rulesDir, `${id}.md`);\r\n      \r\n      // 파일 작성\r\n      fs.writeFileSync(filePath, finalContent, 'utf-8');\r\n      \r\n      // Rule 객체 생성\r\n      const rule: Rule = {\r\n        id,\r\n        name,\r\n        filePath,\r\n        content: finalContent,\r\n        status: RuleStatus.Inactive,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      // Rules 맵에 추가\r\n      this.rules.set(id, rule);\r\n      \r\n      // 활성화 요청이 있으면 활성화\r\n      if (activate) {\r\n        await this.activateRule(id);\r\n      }\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeRules.fire();\r\n      \r\n      return rule;\r\n    } catch (error) {\r\n      console.error('Rule 생성 오류:', error);\r\n      throw new ServiceError(\r\n        `Rule 생성 중 오류가 발생했습니다: ${error}`,\r\n        'rule-creation-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rule 업데이트\r\n   * @param id Rule ID\r\n   * @param updates 업데이트할 필드\r\n   */\r\n  public async updateRule(\r\n    id: string,\r\n    updates: Partial<Pick<Rule, 'name' | 'content'>>\r\n  ): Promise<Rule> {\r\n    try {\r\n      const rule = this.rules.get(id);\r\n      \r\n      if (!rule) {\r\n        throw new ServiceError(`ID가 ${id}인 Rule을 찾을 수 없습니다.`, 'rule-not-found');\r\n      }\r\n      \r\n      // 이름 또는 내용 업데이트\r\n      let updatedContent = rule.content;\r\n      let updatedName = rule.name;\r\n      \r\n      if (updates.name) {\r\n        updatedName = updates.name;\r\n        \r\n        // 내용 업데이트 없이 이름만 변경하는 경우 마크다운 제목 업데이트\r\n        if (!updates.content) {\r\n          const titleRegex = /^#\\s+(.+)$/m;\r\n          if (titleRegex.test(updatedContent)) {\r\n            updatedContent = updatedContent.replace(titleRegex, `# ${updatedName}`);\r\n          } else {\r\n            updatedContent = `# ${updatedName}\\n\\n${updatedContent}`;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (updates.content) {\r\n        updatedContent = updates.content;\r\n        \r\n        // 내용에 제목이 없으면 추가\r\n        if (!updatedContent.trim().startsWith('#')) {\r\n          updatedContent = `# ${updatedName}\\n\\n${updatedContent}`;\r\n        }\r\n      }\r\n      \r\n      // 파일 업데이트\r\n      fs.writeFileSync(rule.filePath, updatedContent, 'utf-8');\r\n      \r\n      // Rule 객체 업데이트\r\n      const updatedRule: Rule = {\r\n        ...rule,\r\n        name: updatedName,\r\n        content: updatedContent,\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      // Rules 맵 업데이트\r\n      this.rules.set(id, updatedRule);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeRules.fire();\r\n      \r\n      return updatedRule;\r\n    } catch (error) {\r\n      console.error('Rule 업데이트 오류:', error);\r\n      throw new ServiceError(\r\n        `Rule 업데이트 중 오류가 발생했습니다: ${error}`,\r\n        'rule-update-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rule 삭제\r\n   * @param id Rule ID\r\n   */\r\n  public async deleteRule(id: string): Promise<boolean> {\r\n    try {\r\n      const rule = this.rules.get(id);\r\n      \r\n      if (!rule) {\r\n        throw new ServiceError(`ID가 ${id}인 Rule을 찾을 수 없습니다.`, 'rule-not-found');\r\n      }\r\n      \r\n      // 활성화된 경우 비활성화\r\n      if (rule.status === RuleStatus.Active) {\r\n        await this.deactivateRule(id);\r\n      }\r\n      \r\n      // 파일 삭제\r\n      if (fs.existsSync(rule.filePath)) {\r\n        fs.unlinkSync(rule.filePath);\r\n      }\r\n      \r\n      // Rules 맵에서 제거\r\n      this.rules.delete(id);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeRules.fire();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Rule 삭제 오류:', error);\r\n      throw new ServiceError(\r\n        `Rule 삭제 중 오류가 발생했습니다: ${error}`,\r\n        'rule-deletion-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rule 활성화\r\n   * @param id Rule ID\r\n   */\r\n  public async activateRule(id: string): Promise<boolean> {\r\n    try {\r\n      const rule = this.rules.get(id);\r\n      \r\n      if (!rule) {\r\n        throw new ServiceError(`ID가 ${id}인 Rule을 찾을 수 없습니다.`, 'rule-not-found');\r\n      }\r\n      \r\n      // 이미 활성화된 경우 처리 생략\r\n      if (rule.status === RuleStatus.Active) {\r\n        return true;\r\n      }\r\n      \r\n      // 설정에서 활성화된 Rules 목록 가져오기\r\n      const config = vscode.workspace.getConfiguration('ape.rules');\r\n      const activeRules = config.get<string[]>('activeRules', []);\r\n      \r\n      // ID가 목록에 없으면 추가\r\n      if (!activeRules.includes(id)) {\r\n        activeRules.push(id);\r\n        await config.update('activeRules', activeRules, vscode.ConfigurationTarget.Global);\r\n      }\r\n      \r\n      // Rule 상태 업데이트\r\n      const updatedRule: Rule = {\r\n        ...rule,\r\n        status: RuleStatus.Active,\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      // Rules 맵 업데이트\r\n      this.rules.set(id, updatedRule);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeRules.fire();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Rule 활성화 오류:', error);\r\n      throw new ServiceError(\r\n        `Rule 활성화 중 오류가 발생했습니다: ${error}`,\r\n        'rule-activation-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rule 비활성화\r\n   * @param id Rule ID\r\n   */\r\n  public async deactivateRule(id: string): Promise<boolean> {\r\n    try {\r\n      const rule = this.rules.get(id);\r\n      \r\n      if (!rule) {\r\n        throw new ServiceError(`ID가 ${id}인 Rule을 찾을 수 없습니다.`, 'rule-not-found');\r\n      }\r\n      \r\n      // 이미 비활성화된 경우 처리 생략\r\n      if (rule.status === RuleStatus.Inactive) {\r\n        return true;\r\n      }\r\n      \r\n      // 설정에서 활성화된 Rules 목록 가져오기\r\n      const config = vscode.workspace.getConfiguration('ape.rules');\r\n      const activeRules = config.get<string[]>('activeRules', []);\r\n      \r\n      // ID가 목록에 있으면 제거\r\n      const updatedActiveRules = activeRules.filter(activeId => activeId !== id);\r\n      await config.update('activeRules', updatedActiveRules, vscode.ConfigurationTarget.Global);\r\n      \r\n      // Rule 상태 업데이트\r\n      const updatedRule: Rule = {\r\n        ...rule,\r\n        status: RuleStatus.Inactive,\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      // Rules 맵 업데이트\r\n      this.rules.set(id, updatedRule);\r\n      \r\n      // 변경 이벤트 발생\r\n      this._onDidChangeRules.fire();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Rule 비활성화 오류:', error);\r\n      throw new ServiceError(\r\n        `Rule 비활성화 중 오류가 발생했습니다: ${error}`,\r\n        'rule-deactivation-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rules 파일 열기\r\n   * @param id Rule ID\r\n   */\r\n  public async openRuleFile(id: string): Promise<boolean> {\r\n    try {\r\n      const rule = this.rules.get(id);\r\n      \r\n      if (!rule) {\r\n        throw new ServiceError(`ID가 ${id}인 Rule을 찾을 수 없습니다.`, 'rule-not-found');\r\n      }\r\n      \r\n      // VS Code에서 파일 열기\r\n      const document = await vscode.workspace.openTextDocument(rule.filePath);\r\n      await vscode.window.showTextDocument(document);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Rule 파일 열기 오류:', error);\r\n      throw new ServiceError(\r\n        `Rule 파일 열기 중 오류가 발생했습니다: ${error}`,\r\n        'rule-open-failed'\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Rules를 LLM 시스템 프롬프트로 변환\r\n   */\r\n  public getRulesAsSystemPrompt(): string {\r\n    const activeRules = this.getActiveRules();\r\n    \r\n    if (activeRules.length === 0) {\r\n      return '';\r\n    }\r\n    \r\n    // 헤더 추가\r\n    let systemPrompt = '# APE Rules\\n\\n';\r\n    systemPrompt += '다음 규칙을 항상 준수하세요:\\n\\n';\r\n    \r\n    // 각 활성화된 Rule 내용 추가\r\n    for (const rule of activeRules) {\r\n      // 제목이 있는 경우 제목 제외하고 내용만 추가\r\n      let content = rule.content;\r\n      const titleMatch = content.match(/^#\\s+(.+)$/m);\r\n      if (titleMatch) {\r\n        content = content.replace(titleMatch[0], '').trim();\r\n      }\r\n      \r\n      systemPrompt += `## ${rule.name}\\n\\n${content}\\n\\n`;\r\n    }\r\n    \r\n    return systemPrompt;\r\n  }\r\n  \r\n  /**\r\n   * 리소스 해제\r\n   */\r\n  public dispose(): void {\r\n    this.disposables.forEach(d => d.dispose());\r\n    this.disposables = [];\r\n  }\r\n}","import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport { ChatViewProvider } from './ui/chatViewProvider';\r\nimport { LLMService } from './core/llm/llmService';\r\nimport { MemoryService } from './core/memory/memoryService';\r\nimport { CommandManager } from './core/commands/commandManager';\r\nimport { AutoCommitService } from './core/git/autoCommitService';\r\nimport { BitbucketService } from './core/git/bitbucketService';\r\nimport { ConflictSolver } from './core/git/conflictSolver';\r\nimport { TabCompletionProvider } from './core/completion/tabCompletionProvider';\r\nimport { InlineCompletionProvider } from './core/completion/inlineCompletionProvider';\r\nimport { ApeTreeDataProvider } from './ui/tree/apeTreeDataProvider';\r\nimport { VersionManager } from './core/services/versionManager';\r\nimport { ModelManager } from './core/llm/modelManager';\r\nimport { CodeService } from './ui/chat/codeService';\r\nimport { MainChatViewProvider } from './ui/mainChatViewProvider';\r\n\r\n// 개발/테스트 환경에서만 로딩 (프로덕션에서는 조건부로 로딩)\r\nlet autoPermissionHandler: any = null;\r\nif (process.env.NODE_ENV === 'development' || process.env.APE_TEST_MODE === 'true') {\r\n  try {\r\n    // 동적 임포트로 테스트 모드에서만 로드\r\n    import('./test/helpers/auto-permission').then(module => {\r\n      autoPermissionHandler = module.autoPermissionHandler;\r\n      console.log('자동 권한 핸들러 활성화됨 (테스트/개발 모드)');\r\n    }).catch(error => {\r\n      console.error('자동 권한 핸들러 로드 실패:', error);\r\n    });\r\n  } catch (error) {\r\n    console.log('자동 권한 핸들러 초기화 중 오류 (무시됨):', error);\r\n  }\r\n}\r\n\r\n// Plugin system imports\r\nimport { \r\n  EventEmitterImpl, \r\n  PluginRegistryImpl, \r\n  PluginAPIImpl, \r\n  PluginLoader,\r\n  PluginSettingsManagerImpl\r\n} from './plugins/core';\r\nimport { RulesService } from './core/services/rulesService';\r\nimport { VaultService } from './core/services/vaultService';\r\nimport { ServiceConfigManager } from './core/services/serviceConfig';\r\nimport { JiraService } from './core/services/jiraService';\r\n\r\n/**\r\n * Container for all core services\r\n */\r\ninterface ServiceContainer {\r\n  modelManager: ModelManager;\r\n  llmService: LLMService;\r\n  memoryService: MemoryService;\r\n  chatViewProvider: ChatViewProvider;\r\n  commandManager: CommandManager;\r\n  bitbucketService: BitbucketService;\r\n  autoCommitService: AutoCommitService;\r\n  conflictSolver: ConflictSolver;\r\n  tabCompletionProvider: TabCompletionProvider;\r\n  inlineCompletionProvider: InlineCompletionProvider;\r\n  treeDataProvider: ApeTreeDataProvider;\r\n  versionManager: VersionManager;\r\n  rulesService: RulesService;\r\n  vaultService: VaultService;\r\n  jiraService: JiraService;\r\n  configManager: ServiceConfigManager;\r\n  \r\n  // Plugin system\r\n  pluginEventEmitter: EventEmitterImpl;\r\n  pluginRegistry: PluginRegistryImpl;\r\n  pluginAPI: PluginAPIImpl;\r\n  pluginLoader: PluginLoader;\r\n  pluginSettingsManager: PluginSettingsManagerImpl;\r\n}\r\n\r\n/**\r\n * Initialize all core services\r\n * @param context Extension context\r\n * @returns ServiceContainer with all initialized services\r\n */\r\nasync function initializeServices(context: vscode.ExtensionContext): Promise<ServiceContainer> {\r\n  // Create service config manager first\r\n  const configManager = new ServiceConfigManager(context);\r\n  \r\n  // Create model manager (should be initialized before LLMService)\r\n  const modelManager = new ModelManager(context);\r\n  \r\n  // Create core services with modelManager\r\n  const llmService = new LLMService(context, modelManager); // Updated constructor\r\n  const memoryService = new MemoryService(context);\r\n  \r\n  // Create objects in the correct initialization order\r\n  // Create chatViewProvider\r\n  const chatViewProvider = new MainChatViewProvider(\r\n    context, \r\n    llmService, \r\n    memoryService, \r\n    null as any, // Will be set after CommandManager is created\r\n    modelManager\r\n  ) as unknown as ChatViewProvider;\r\n  \r\n  // Initialize Rules service\r\n  const rulesService = new RulesService(context, configManager);\r\n  \r\n  // Initialize VAULT service\r\n  const vaultService = new VaultService(context, configManager);\r\n  \r\n  // Initialize Jira service\r\n  const jiraService = new JiraService(context, configManager);\r\n  \r\n  // Apply Rules and VAULT services to LLM service\r\n  llmService.setRulesService(rulesService);\r\n  llmService.setVaultService(vaultService);\r\n  \r\n  // Then create CommandManager with chatViewProvider and services\r\n  const commandManager = new CommandManager(\r\n    context,\r\n    chatViewProvider,\r\n    llmService,\r\n    memoryService,\r\n    modelManager,\r\n    rulesService,\r\n    vaultService,\r\n    jiraService\r\n  );\r\n  \r\n  // Now set the CommandManager reference in ChatViewProvider\r\n  (chatViewProvider as any)._commandManager = commandManager;\r\n  \r\n  // Log debugging information\r\n  console.log('ChatViewProvider 및 CommandManager 초기화 완료');\r\n  \r\n  // Initialize Git services\r\n  const bitbucketService = new BitbucketService(context);\r\n  const autoCommitService = new AutoCommitService(context, llmService, bitbucketService);\r\n  const conflictSolver = new ConflictSolver(llmService);\r\n  \r\n  // Initialize completion providers\r\n  const tabCompletionProvider = new TabCompletionProvider(llmService);\r\n  const inlineCompletionProvider = new InlineCompletionProvider(llmService, context);\r\n  \r\n  // Initialize tree view data provider\r\n  const treeDataProvider = new ApeTreeDataProvider(\r\n    context, \r\n    llmService, \r\n    memoryService,\r\n    undefined, // todoService\r\n    vaultService,\r\n    rulesService,\r\n    jiraService\r\n  );\r\n  \r\n  // Initialize version manager\r\n  const versionManager = new VersionManager(context);\r\n  \r\n  // Initialize plugin system\r\n  const pluginEventEmitter = new EventEmitterImpl();\r\n  const pluginRegistry = new PluginRegistryImpl(pluginEventEmitter);\r\n  const pluginAPI = new PluginAPIImpl(llmService, memoryService, pluginEventEmitter);\r\n  const pluginLoader = new PluginLoader(context, pluginRegistry as any, pluginAPI);\r\n  const pluginSettingsManager = new PluginSettingsManagerImpl(context);\r\n  \r\n  return {\r\n    modelManager,\r\n    llmService,\r\n    memoryService,\r\n    chatViewProvider,\r\n    commandManager,\r\n    bitbucketService,\r\n    autoCommitService,\r\n    conflictSolver,\r\n    tabCompletionProvider,\r\n    inlineCompletionProvider,\r\n    treeDataProvider,\r\n    versionManager,\r\n    rulesService,\r\n    vaultService,\r\n    jiraService,\r\n    configManager,\r\n    pluginEventEmitter,\r\n    pluginRegistry,\r\n    pluginAPI,\r\n    pluginLoader,\r\n    pluginSettingsManager\r\n  };\r\n}\r\n\r\n/**\r\n * Register VSCode components\r\n * @param context Extension context\r\n * @param services Service container\r\n */\r\nfunction registerComponents(context: vscode.ExtensionContext, services: ServiceContainer): void {\r\n  // Register WebView provider\r\n  const chatViewProviderRegistration = vscode.window.registerWebviewViewProvider(\r\n    'apeChat',\r\n    services.chatViewProvider,\r\n    {\r\n      webviewOptions: {\r\n        retainContextWhenHidden: true\r\n      }\r\n    }\r\n  );\r\n  \r\n  // 디버깅을 위한 로그 추가\r\n  console.log('APE Chat View Provider가 등록되었습니다.');\r\n  context.subscriptions.push(chatViewProviderRegistration);\r\n  \r\n  // 모든 명령어는 CommandManager를 통해서만 등록\r\n  // ModelManager에서 명령어 등록하는 부분 제거 (중복 등록 방지)\r\n  services.commandManager.registerCommands();\r\n  \r\n  // Register code block insertion commands\r\n  \r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('ape.insertCodeToEditor', (options) => {\r\n      return CodeService.insertCodeToEditor(options);\r\n    }),\r\n    vscode.commands.registerCommand('ape.createNewFileWithCode', (options) => {\r\n      return CodeService.insertCodeToEditor({\r\n        ...options,\r\n        createNewFile: true\r\n      });\r\n    })\r\n  );\r\n  \r\n  // Register Git commands\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('ape.git.resolveConflict', async () => {\r\n      const resolvedCount = await services.conflictSolver.resolveAllConflicts();\r\n      vscode.window.showInformationMessage(`${resolvedCount}개 파일의 충돌을 해결했습니다`);\r\n    })\r\n  );\r\n  \r\n  // Register tab completion for various languages\r\n  context.subscriptions.push(\r\n    vscode.languages.registerCompletionItemProvider(\r\n      [\r\n        { scheme: 'file', language: 'typescript' },\r\n        { scheme: 'file', language: 'javascript' },\r\n        { scheme: 'file', language: 'python' },\r\n        { scheme: 'file', language: 'java' },\r\n        { scheme: 'file', language: 'c' },\r\n        { scheme: 'file', language: 'cpp' },\r\n        { scheme: 'file', language: 'csharp' },\r\n        { scheme: 'file', language: 'go' },\r\n        { scheme: 'file', language: 'rust' },\r\n        { scheme: 'file', language: 'php' },\r\n        { scheme: 'file', language: 'ruby' },\r\n        { scheme: 'file', language: 'html' },\r\n        { scheme: 'file', language: 'css' },\r\n        { scheme: 'file', language: 'json' },\r\n        { scheme: 'file', language: 'markdown' }\r\n      ],\r\n      services.tabCompletionProvider,\r\n      '\\t' // Triggered by tab key\r\n    )\r\n  );\r\n  \r\n  // Register command completion\r\n  context.subscriptions.push(\r\n    vscode.languages.registerCompletionItemProvider(\r\n      [{ scheme: 'file' }],\r\n      services.tabCompletionProvider,\r\n      '/' // Triggered by slash\r\n    )\r\n  );\r\n  \r\n  // Register inline completion provider\r\n  context.subscriptions.push(\r\n    vscode.languages.registerInlineCompletionItemProvider(\r\n      [{ scheme: 'file' }],\r\n      services.inlineCompletionProvider\r\n    )\r\n  );\r\n  \r\n  // Register tree data provider with custom configuration\r\n  const treeView = vscode.window.createTreeView('apeNavigator', {\r\n    treeDataProvider: services.treeDataProvider,\r\n    showCollapseAll: true,\r\n    canSelectMany: false // 다중 선택 방지로 UI 단순화\r\n  });\r\n  \r\n  // Add command to set optimal view layout\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('ape.setOptimalLayout', async () => {\r\n      try {\r\n        // 사이드바 확인\r\n        await vscode.commands.executeCommand('workbench.view.extension.ape-sidebar');\r\n        await new Promise(r => setTimeout(r, 100));\r\n        \r\n        // 채팅 뷰 활성화\r\n        await vscode.commands.executeCommand('apeChat.focus');\r\n        await new Promise(r => setTimeout(r, 100));\r\n        \r\n        // 사이드바 크기 줄이기 (트리뷰에 맞게)\r\n        for (let i = 0; i < 6; i++) {\r\n          await vscode.commands.executeCommand('workbench.action.decreaseSideBarWidth');\r\n          await new Promise(r => setTimeout(r, 30));\r\n        }\r\n        \r\n        // 채팅뷰 크기 키우기\r\n        for (let i = 0; i < 3; i++) {\r\n          await vscode.commands.executeCommand('workbench.action.increaseViewSize');\r\n          await new Promise(r => setTimeout(r, 30));\r\n        }\r\n        \r\n        vscode.window.showInformationMessage('APE 최적 레이아웃이 설정되었습니다.');\r\n      } catch (error) {\r\n        console.error('최적 레이아웃 설정 실패:', error);\r\n      }\r\n    })\r\n  );\r\n  \r\n  context.subscriptions.push(treeView);\r\n  \r\n  // Register version manager\r\n  services.versionManager.registerCommands();\r\n  \r\n  // Register navigator commands\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('ape.refreshNavigator', () => {\r\n      services.treeDataProvider.refresh();\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.refreshTreeView', () => {\r\n      services.treeDataProvider.refresh();\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.executeCommand', (commandInfo) => {\r\n      if (!commandInfo || !commandInfo.name) {\r\n        vscode.window.showErrorMessage('명령어 정보가 올바르지 않습니다');\r\n        return;\r\n      }\r\n      \r\n      const commandText = commandInfo.args \r\n        ? `/${commandInfo.name} ${commandInfo.args.join(' ')}` \r\n        : `/${commandInfo.name}`;\r\n      \r\n      // 직접 SlashCommandManager로 명령 실행\r\n      services.commandManager.slashCommandManager.executeCommand(commandText);\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.sendLlmResponse', (messageData) => {\r\n      services.chatViewProvider.sendLlmResponse(messageData);\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.openSettings', (settingKey) => {\r\n      if (settingKey) {\r\n        vscode.commands.executeCommand('workbench.action.openSettings', settingKey);\r\n      } else {\r\n        vscode.commands.executeCommand('workbench.action.openSettings', 'ape');\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.handleChatInput', (text) => {\r\n      services.chatViewProvider.handleChatInput(text);\r\n    }),\r\n\r\n    vscode.commands.registerCommand('ape.sendChatMessage', () => {\r\n      vscode.commands.executeCommand('ape.sendMessage');\r\n    }),\r\n\r\n    vscode.commands.registerCommand('ape.showCommandSuggestions', (suggestions) => {\r\n      // 채팅 인터페이스에 명령어 제안 전송\r\n      if (services.chatViewProvider && Array.isArray(suggestions)) {\r\n        services.chatViewProvider.updateCommandSuggestions(suggestions);\r\n      }\r\n    }),\r\n\r\n    vscode.commands.registerCommand('ape.insertToChatInput', (text) => {\r\n      // 채팅 입력창에 텍스트 삽입\r\n      if (services.chatViewProvider && typeof text === 'string') {\r\n        services.chatViewProvider.insertToChatInput(text);\r\n      }\r\n    }),\r\n    \r\n    // VAULT 관련 명령어\r\n    vscode.commands.registerCommand('ape.vaultShowItem', (item) => {\r\n      if (!item || !item.metadata) {\r\n        vscode.window.showErrorMessage('VAULT 아이템 정보가 올바르지 않습니다');\r\n        return;\r\n      }\r\n      \r\n      // 아이템 내용 표시\r\n      const content = item.metadata.content;\r\n      const title = `VAULT 아이템: ${item.label}`;\r\n      \r\n      // 채팅창에 내용 표시\r\n      vscode.commands.executeCommand('ape.sendLlmResponse', {\r\n        role: 'assistant',\r\n        content: `## ${title}\\n\\n${content}`\r\n      });\r\n    })\r\n  );\r\n  \r\n  // Register Rules commands\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('ape.rules.activate', async (item) => {\r\n      if (!item || !item.metadata || !item.metadata.id) {\r\n        vscode.window.showErrorMessage('Rule 정보가 올바르지 않습니다');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const success = await services.rulesService.activateRule(item.metadata.id);\r\n        if (success) {\r\n          vscode.window.showInformationMessage(`Rule '${item.label}' 활성화 완료`);\r\n          services.treeDataProvider.refresh();\r\n        }\r\n      } catch (error) {\r\n        vscode.window.showErrorMessage(`Rule 활성화 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.rules.deactivate', async (item) => {\r\n      if (!item || !item.metadata || !item.metadata.id) {\r\n        vscode.window.showErrorMessage('Rule 정보가 올바르지 않습니다');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const success = await services.rulesService.deactivateRule(item.metadata.id);\r\n        if (success) {\r\n          vscode.window.showInformationMessage(`Rule '${item.label}' 비활성화 완료`);\r\n          services.treeDataProvider.refresh();\r\n        }\r\n      } catch (error) {\r\n        vscode.window.showErrorMessage(`Rule 비활성화 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.rules.openFile', async (item) => {\r\n      if (!item || !item.metadata || !item.metadata.id) {\r\n        vscode.window.showErrorMessage('Rule 정보가 올바르지 않습니다');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await services.rulesService.openRuleFile(item.metadata.id);\r\n      } catch (error) {\r\n        vscode.window.showErrorMessage(`Rule 파일 열기 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.rules.refresh', () => {\r\n      try {\r\n        services.rulesService.loadAllRules();\r\n        services.treeDataProvider.refresh();\r\n      } catch (error) {\r\n        vscode.window.showErrorMessage(`Rules 새로고침 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.rules.create', async () => {\r\n      try {\r\n        // 규칙 이름 입력 받기\r\n        const ruleName = await vscode.window.showInputBox({\r\n          prompt: '새로운 Rule 이름을 입력하세요',\r\n          placeHolder: '예: 코드 작성 규칙, API 사용 지침 등',\r\n          validateInput: (value) => {\r\n            if (!value || value.trim().length === 0) {\r\n              return '이름은 비워둘 수 없습니다';\r\n            }\r\n            return null;\r\n          }\r\n        });\r\n        \r\n        if (!ruleName) {\r\n          return; // 사용자가 취소한 경우\r\n        }\r\n        \r\n        // 새 문서 생성\r\n        const rulePath = path.join(services.rulesService['rulesDir'], `${ruleName.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '')}.md`);\r\n        const ruleContent = `# ${ruleName}\\n\\n여기에 LLM에 적용할 규칙 내용을 작성하세요.\\n\\n규칙은 마크다운 형식으로 작성됩니다.\\n\\n## 예시\\n\\n1. 항상 코드에 주석을 추가해주세요.\\n2. 응답은 간결하게 유지해주세요.\\n3. 에러 처리를 항상 포함해주세요.`;\r\n        \r\n        // 규칙 생성\r\n        const rule = await services.rulesService.createRule(ruleName, ruleContent, false);\r\n        \r\n        // 생성된 규칙 파일 열기\r\n        await services.rulesService.openRuleFile(rule.id);\r\n        \r\n        // 트리뷰 새로고침\r\n        services.treeDataProvider.refresh();\r\n        \r\n        vscode.window.showInformationMessage(`Rule '${ruleName}' 생성 완료. 파일을 수정한 후 저장하세요.`);\r\n      } catch (error) {\r\n        vscode.window.showErrorMessage(`Rule 생성 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.rules.delete', async (item) => {\r\n      if (!item || !item.metadata || !item.metadata.id) {\r\n        vscode.window.showErrorMessage('Rule 정보가 올바르지 않습니다');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // 삭제 확인\r\n        const confirmation = await vscode.window.showWarningMessage(\r\n          `Rule '${item.label}'을(를) 삭제하시겠습니까?`,\r\n          { modal: true },\r\n          '삭제',\r\n          '취소'\r\n        );\r\n        \r\n        if (confirmation !== '삭제') {\r\n          return;\r\n        }\r\n        \r\n        // 규칙 삭제\r\n        const success = await services.rulesService.deleteRule(item.metadata.id);\r\n        \r\n        if (success) {\r\n          vscode.window.showInformationMessage(`Rule '${item.label}' 삭제 완료`);\r\n          services.treeDataProvider.refresh();\r\n        }\r\n      } catch (error) {\r\n        vscode.window.showErrorMessage(`Rule 삭제 중 오류 발생: ${error instanceof Error ? error.message : String(error)}`);\r\n      }\r\n    })\r\n  );\r\n  \r\n  // Register plugin system commands\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('ape.plugins.list', async () => {\r\n      const plugins = services.pluginRegistry.getAllPlugins();\r\n      const items = plugins.map(plugin => ({\r\n        label: `${plugin.metadata.name} (${plugin.metadata.version})`,\r\n        description: plugin.state,\r\n        detail: plugin.metadata.description,\r\n        plugin\r\n      }));\r\n      \r\n      const selected = await vscode.window.showQuickPick(items, {\r\n        placeHolder: 'Select a plugin to see details'\r\n      });\r\n      \r\n      if (selected) {\r\n        const actions = [];\r\n        \r\n        if (selected.plugin.state === 'active') {\r\n          actions.push('Deactivate');\r\n        } else if (selected.plugin.state === 'registered' || selected.plugin.state === 'inactive') {\r\n          actions.push('Activate');\r\n        }\r\n        \r\n        actions.push('View Details', 'Open Settings');\r\n        \r\n        const action = await vscode.window.showQuickPick(actions, {\r\n          placeHolder: 'Select an action'\r\n        });\r\n        \r\n        if (action === 'Activate') {\r\n          await services.pluginRegistry.activatePlugin(selected.plugin.id);\r\n          vscode.window.showInformationMessage(`Plugin ${selected.plugin.metadata.name} activated`);\r\n        } else if (action === 'Deactivate') {\r\n          await services.pluginRegistry.deactivatePlugin(selected.plugin.id);\r\n          vscode.window.showInformationMessage(`Plugin ${selected.plugin.metadata.name} deactivated`);\r\n        } else if (action === 'View Details') {\r\n          // Show details in output channel\r\n          const outputChannel = vscode.window.createOutputChannel(`APE Plugin: ${selected.plugin.metadata.name}`);\r\n          outputChannel.appendLine(`ID: ${selected.plugin.id}`);\r\n          outputChannel.appendLine(`Name: ${selected.plugin.metadata.name}`);\r\n          outputChannel.appendLine(`Version: ${selected.plugin.metadata.version}`);\r\n          outputChannel.appendLine(`Description: ${selected.plugin.metadata.description || 'No description'}`);\r\n          outputChannel.appendLine(`Author: ${selected.plugin.metadata.author || 'Unknown'}`);\r\n          outputChannel.appendLine(`State: ${selected.plugin.state}`);\r\n          \r\n          if (selected.plugin.metadata.dependencies?.length) {\r\n            outputChannel.appendLine(`Dependencies: ${selected.plugin.metadata.dependencies.join(', ')}`);\r\n          }\r\n          \r\n          if (selected.plugin.error) {\r\n            outputChannel.appendLine(`\\nError: ${selected.plugin.error.message}`);\r\n          }\r\n          \r\n          outputChannel.show();\r\n        } else if (action === 'Open Settings') {\r\n          vscode.commands.executeCommand('workbench.action.openSettings', `ape.plugins.${selected.plugin.id}`);\r\n        }\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.plugins.activate', async () => {\r\n      const plugins = services.pluginRegistry.getAllPlugins()\r\n        .filter(p => p.state !== 'active');\r\n      \r\n      const items = plugins.map(plugin => ({\r\n        label: plugin.metadata.name,\r\n        description: plugin.state,\r\n        detail: plugin.metadata.description,\r\n        plugin\r\n      }));\r\n      \r\n      const selected = await vscode.window.showQuickPick(items, {\r\n        placeHolder: 'Select a plugin to activate'\r\n      });\r\n      \r\n      if (selected) {\r\n        try {\r\n          const success = await services.pluginRegistry.activatePlugin(selected.plugin.id);\r\n          if (success) {\r\n            vscode.window.showInformationMessage(`Plugin ${selected.plugin.metadata.name} activated`);\r\n          } else {\r\n            vscode.window.showErrorMessage(`Failed to activate plugin ${selected.plugin.metadata.name}`);\r\n          }\r\n        } catch (error: any) {\r\n          vscode.window.showErrorMessage(`Failed to activate plugin: ${error.message}`);\r\n        }\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.plugins.deactivate', async () => {\r\n      const plugins = services.pluginRegistry.getActivePlugins();\r\n      \r\n      const items = plugins.map(plugin => ({\r\n        label: plugin.metadata.name,\r\n        description: 'active',\r\n        detail: plugin.metadata.description,\r\n        plugin\r\n      }));\r\n      \r\n      const selected = await vscode.window.showQuickPick(items, {\r\n        placeHolder: 'Select a plugin to deactivate'\r\n      });\r\n      \r\n      if (selected) {\r\n        try {\r\n          const success = await services.pluginRegistry.deactivatePlugin(selected.plugin.id);\r\n          if (success) {\r\n            vscode.window.showInformationMessage(`Plugin ${selected.plugin.metadata.name} deactivated`);\r\n          } else {\r\n            vscode.window.showErrorMessage(`Failed to deactivate plugin ${selected.plugin.metadata.name}`);\r\n          }\r\n        } catch (error: any) {\r\n          vscode.window.showErrorMessage(`Failed to deactivate plugin: ${error.message}`);\r\n        }\r\n      }\r\n    }),\r\n    \r\n    vscode.commands.registerCommand('ape.plugins.openSettings', async () => {\r\n      const plugins = services.pluginRegistry.getAllPlugins();\r\n      \r\n      const items = plugins.map(plugin => ({\r\n        label: plugin.metadata.name,\r\n        description: plugin.state,\r\n        detail: plugin.metadata.description,\r\n        plugin\r\n      }));\r\n      \r\n      const selected = await vscode.window.showQuickPick(items, {\r\n        placeHolder: 'Select a plugin to open settings'\r\n      });\r\n      \r\n      if (selected) {\r\n        vscode.commands.executeCommand('workbench.action.openSettings', `ape.plugins.${selected.plugin.id}`);\r\n      }\r\n    })\r\n  );\r\n  \r\n  // Add all services to context subscriptions for proper disposal\r\n  context.subscriptions.push(\r\n    services.modelManager,\r\n    services.llmService,\r\n    services.memoryService,\r\n    services.bitbucketService,\r\n    services.autoCommitService,\r\n    services.vaultService,\r\n    services.rulesService,\r\n    services.jiraService,\r\n    services.configManager,\r\n    {\r\n      dispose: () => {\r\n        // Dispose plugin system\r\n        services.pluginLoader.deactivateAllPlugins().catch(error => {\r\n          console.error('Error deactivating plugins during extension deactivation:', error);\r\n        });\r\n        \r\n        services.pluginSettingsManager.dispose();\r\n        // Event emitter doesn't need explicit disposal\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Extension activation point\r\n * @param context Extension context\r\n */\r\nexport async function activate(context: vscode.ExtensionContext): Promise<void> {\r\n  console.log('APE Extension is now active!');\r\n  \r\n  // 테스트 모드 여부 확인 및 환경 변수 설정\r\n  const isTestMode = vscode.workspace.getConfiguration('ape').get('testing.enabled') || \r\n                    process.env.APE_TEST_MODE === 'true';\r\n                    \r\n  if (isTestMode) {\r\n    process.env.APE_TEST_MODE = 'true';\r\n    console.log('APE 테스트 모드 활성화됨: 자동 권한 허용이 활성화됩니다.');\r\n    \r\n    // 권한 요청 자동 수락 명령 등록\r\n    context.subscriptions.push(\r\n      vscode.commands.registerCommand('ape.acceptAllPermissions', () => {\r\n        vscode.window.showInformationMessage('모든 권한 요청이 자동으로 수락됩니다.');\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n  \r\n  // 현재 버전 정보를 상태 표시줄에 표시\r\n  try {\r\n    const versionInfo = await context.extension.packageJSON.version;\r\n    const statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);\r\n    statusBarItem.text = `$(tag) APE v${versionInfo}`;\r\n    statusBarItem.tooltip = 'APE Extension Version';\r\n    statusBarItem.show();\r\n    context.subscriptions.push(statusBarItem);\r\n  } catch (error) {\r\n    console.error('Failed to display version in status bar:', error);\r\n  }\r\n  \r\n  try {\r\n    // Initialize all services\r\n    const services = await initializeServices(context);\r\n    \r\n    // Register VSCode components\r\n    registerComponents(context, services);\r\n    \r\n    // Load internal plugins\r\n    try {\r\n      const internalPluginCount = await services.pluginLoader.loadInternalPlugins();\r\n      console.log(`Loaded ${internalPluginCount} internal plugins`);\r\n      \r\n      // Load external plugins\r\n      const externalPluginCount = await services.pluginLoader.loadExternalPlugins();\r\n      console.log(`Loaded ${externalPluginCount} external plugins`);\r\n      \r\n      // Auto-activate plugins based on extension activation event\r\n      services.pluginLoader.activatePluginsByEvent('onExtensionActivate').catch(error => {\r\n        console.error('Error activating plugins on extension activation:', error);\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to initialize plugin system:', error);\r\n      vscode.window.showErrorMessage('Failed to initialize APE plugin system. Some features may not work properly.');\r\n    }\r\n    \r\n    // Show welcome message on first activation\r\n    const hasShownWelcome = context.globalState.get('ape.hasShownWelcome');\r\n    \r\n    // 앱 시작 시 채팅 화면과 트리뷰 비율(3:1)로 설정\r\n    setTimeout(async () => {\r\n      try {\r\n        // VSCode 레이아웃 초기화\r\n        await vscode.commands.executeCommand('workbench.action.resetLayout');\r\n        await sleep(300);\r\n\r\n        // 사이드바 열기 (트리뷰 표시)\r\n        await vscode.commands.executeCommand('workbench.view.extension.ape-sidebar');\r\n        console.log('APE Sidebar opened');\r\n        await sleep(100);\r\n        \r\n        // 먼저 채팅 뷰에 직접 접근\r\n        await vscode.commands.executeCommand('apeChat.focus');\r\n        console.log('APE Chat view activated');\r\n        await sleep(100);\r\n        \r\n        // 채팅뷰와 트리뷰의 비율 조정 (3:1)을 위한 작업\r\n        // 먼저 사이드바 크기 줄이기 (VSCode API는 상대적인 크기 조정만 제공)\r\n        const decreaseCount = 6; // 사이드바를 충분히 좁게\r\n        for (let i = 0; i < decreaseCount; i++) {\r\n          await vscode.commands.executeCommand('workbench.action.decreaseSideBarWidth');\r\n          await sleep(30); // 각 명령 사이에 약간의 지연\r\n        }\r\n        \r\n        // 에디터 영역 크기 증가 (채팅뷰를 위해)\r\n        const increaseCount = 3; // 채팅뷰 영역 확장\r\n        for (let i = 0; i < increaseCount; i++) {\r\n          await vscode.commands.executeCommand('workbench.action.increaseViewSize');\r\n          await sleep(30);\r\n        }\r\n        \r\n        // 채팅 뷰 포커싱 다시 한번 확인\r\n        await sleep(100);\r\n        await vscode.commands.executeCommand('apeChat.focus');\r\n      } catch (error) {\r\n        console.error('채팅 뷰 및 트리뷰 초기화 중 오류:', error);\r\n        \r\n        // 에러 발생시 기본 액션\r\n        try {\r\n          await vscode.commands.executeCommand('workbench.view.extension.ape-sidebar');\r\n          console.log('APE Sidebar opened as fallback');\r\n        } catch (sidebarError) {\r\n          console.error('사이드바 열기 실패:', sidebarError);\r\n        }\r\n      }\r\n    }, 1500); // 충분한 지연 시간으로 확실히 초기화 후 실행\r\n    \r\n    // 짧은 지연을 위한 헬퍼 함수\r\n    function sleep(ms: number): Promise<void> {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    \r\n    if (!hasShownWelcome) {\r\n      vscode.window.showInformationMessage(\r\n        'APE Extension is now active! Open the APE sidebar to start using it.',\r\n        'Open APE Sidebar'\r\n      ).then(selection => {\r\n        if (selection === 'Open APE Sidebar') {\r\n          vscode.commands.executeCommand('workbench.view.extension.ape-sidebar');\r\n        }\r\n      });\r\n      \r\n      context.globalState.update('ape.hasShownWelcome', true);\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to activate APE extension:', error);\r\n    vscode.window.showErrorMessage(`Failed to activate APE extension: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Extension deactivation point\r\n * \r\n * 확장 프로그램 비활성화 시 호출되며, 리소스 정리 및 메모리 해제를 수행합니다.\r\n * - 열려있는 연결 종료 (LLM 스트리밍 등)\r\n * - 이벤트 리스너 제거\r\n * - 캐시된 데이터 정리\r\n * - 불필요한 메모리 해제\r\n */\r\nexport function deactivate(): void {\r\n  console.log('APE Extension is deactivated');\r\n}"],"names":[],"sourceRoot":""}